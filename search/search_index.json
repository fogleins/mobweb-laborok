{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"T\u00e1rgy ismertet\u0151 \u00b6 A t\u00e1rgyk\u00f6vetelm\u00e9nyeket l\u00e1sd a hivatalos tant\u00e1rgyi adatlapon . A laborok sorrendj\u00e9t \u00e9s a bead\u00e1sok hat\u00e1ridej\u00e9t Moodle-ben tal\u00e1lod. Jav\u00edt\u00e1s az anyagban A t\u00e1rgy hallgat\u00f3inak az anyagban t\u00f6rt\u00e9n\u0151 jav\u00edt\u00e1s\u00e9rt, kieg\u00e9sz\u00edt\u00e9s\u00e9rt plusz pontot adunk! Ha hib\u00e1t tal\u00e1lsz, vagy kieg\u00e9sz\u00edten\u00e9d/pontos\u00edtan\u00e1d a feladatle\u00edr\u00e1sokat, nyiss egy pull request -et! A repository linkj\u00e9t a jobb fels\u0151 sarokban tal\u00e1lod. Felhaszn\u00e1l\u00e1si felt\u00e9telek Az itt tal\u00e1lhat\u00f3 oktat\u00e1si seg\u00e9danyagok a BMEVIAUAC00 t\u00e1rgy hallgat\u00f3inak k\u00e9sz\u00fcltek. Az anyagok oly m\u00f3d\u00fa felhaszn\u00e1l\u00e1sa, amely a t\u00e1rgy oktat\u00e1s\u00e1hoz nem szorosan kapcsol\u00f3dik, csak a szerz\u0151(k) \u00e9s a forr\u00e1s megjel\u00f6l\u00e9s\u00e9vel t\u00f6rt\u00e9nhet. Az anyagok a t\u00e1rgy keret\u00e9ben oktatott kontextusban \u00e9rtelmezhet\u0151ek. Az anyagok\u00e9rt egy\u00e9b felhaszn\u00e1l\u00e1s eset\u00e9n a szerz\u0151(k) felel\u0151ss\u00e9get nem v\u00e1llalnak. \u00c1ltal\u00e1nos tudnival\u00f3k \u00b6 Laborok megold\u00e1sainak bead\u00e1sa \u00b6 A laborok megold\u00e1s\u00e1t egy szem\u00e9lyre sz\u00f3l\u00f3 git repository-ban kell beadni. Ennek pontos folyamat\u00e1t l\u00e1sd itt . K\u00e9r\u00fcnk, hogy alaposan olvasd v\u00e9gig a le\u00edr\u00e1st! FONTOS A laborok elk\u00e9sz\u00edt\u00e9se \u00e9s bead\u00e1sa sor\u00e1n az itt le\u00edrtak szerint kell elj\u00e1rnod. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck. A bead\u00e1s sor\u00e1n a munkafolyamati hib\u00e1k\u00e9rt (pl. nem megfelel\u0151 emberhez hozz\u00e1rendel\u00e9se, hozz\u00e1rendel\u00e9s elfelejt\u00e9se) pontot vonunk le. Laborok \u00e9rt\u00e9kel\u00e9se \u00b6 Minden labort k\u00fcl\u00f6n jeggyel \u00e9rt\u00e9kel\u00fcnk. A teljes\u00edt\u00e9s felt\u00e9tele a hat\u00e1rid\u0151ig t\u00f6rt\u00e9n\u0151 bead\u00e1s. A jegy (1-5 sk\u00e1l\u00e1n) a labor feladatokon megszerezhet\u0151 5 pont alapj\u00e1n t\u00f6rt\u00e9nik. A feladatok bead\u00e1s\u00e1hoz minden esetben a GitHub platformot haszn\u00e1ljuk. A feladatok ki\u00e9rt\u00e9kel\u00e9se egyes laborok eset\u00e9n r\u00e9szben automatikusan t\u00f6rt\u00e9nik. A futtathat\u00f3 k\u00f3dokat val\u00f3ban le fogjuk futtatni, ez\u00e9rt minden esetben fontos a feladatle\u00edr\u00e1sok pontos k\u00f6vet\u00e9se (kiindul\u00f3 k\u00f3d v\u00e1z haszn\u00e1lata, csak a megengedett f\u00e1jlok v\u00e1ltoztat\u00e1sa, stb.)! A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9r\u0151l a GitHub-on kapsz sz\u00f6veges visszajelz\u00e9st (l\u00e1sd itt ). Ha enn\u00e9l t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t. iMSC pontok \u00b6 iMSC pontok a ZH-n, a nagyHF-n \u00e9s v\u00e1rhat\u00f3an n\u00e9h\u00e1ny laboron szerezhet\u0151k. Az els\u0151 laboron nem szerezhet\u0151 iMSc pont. A k\u00e9s\u0151bbi laborokon, ha lesz ilyen lehet\u0151s\u00e9g, az iMSc-s feladatok megold\u00e1sait a sima labormegold\u00e1sokkal egy\u00fctt kell felt\u00f6lteni. Ha egy feladatban k\u00e9rd\u00e9sek szerepelnek, a pontok csak akkor fogadhat\u00f3k el, ha mell\u00e9kletben egy ig\u00e9nyes jegyz\u0151k\u00f6nyv is szerepel a k\u00e9rd\u00e9sekre vonatkoz\u00f3 v\u00e1laszokkal. iMSc pont szerz\u00e9s\u00e9re b\u00e1rmely hallgat\u00f3 jogosult, aki az el\u0151tte l\u00e9v\u0151 feladatokkal m\u00e1r v\u00e9gzett (laborvezet\u0151 ellen\u0151rzi a halad\u00e1st). Beugr\u00f3 \u00b6 Az els\u0151 labort kiv\u00e9ve minden labor el\u0151tt lesz beugr\u00f3, mely felt\u00e9tele a labor teljes\u00edt\u00e9s\u00e9nek. Kis ZH-k \u00b6 A f\u00e9l\u00e9v sor\u00e1n hat alkalommal kis z\u00e1rthelyit \u00edratunk a laborat\u00f3rium alkalmakon. Ezek k\u00f6z\u00fcl a n\u00e9gy legjobban siker\u00fclt kis z\u00e1rthelyi pontsz\u00e1mnak egyenk\u00e9nt el kell \u00e9rje a szerezhet\u0151 pontsz\u00e1m 40%-\u00e1t. A KisZH kiv\u00e1ltja a beugr\u00f3 szerep\u00e9t. A kisZH-k kett\u0151 vagy h\u00e1rom hetente lesznek, ezek id\u0151pontj\u00e1t az els\u0151 vagy m\u00e1sodik el\u0151ad\u00e1son kihirdetj\u00fck. A mostani Labor 01-en nincs kisZH. K\u00e9perny\u0151k\u00e9pek \u00b6 A laborok k\u00e9rik, hogy k\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a megold\u00e1s egy-egy r\u00e9sz\u00e9r\u0151l. Ez k\u00fcl\u00f6n\u00f6sen akkor fontos, ha a feladatot otthon k\u00e9sz\u00edted el, mert ezzel bizony\u00edtod, hogy a megold\u00e1sod saj\u00e1t magad k\u00e9sz\u00edtetted. A k\u00e9perny\u0151k\u00e9pek elv\u00e1rt tartalm\u00e1t a feladat minden esetben pontosan megnevezi . A k\u00e9perny\u0151k\u00e9p k\u00e9sz\u00fclhet a teljes desktopr\u00f3l is, de lehet csak a k\u00e9rt alkalmaz\u00e1sr\u00f3l k\u00e9sz\u00edteni. A k\u00e9perny\u0151k\u00e9peket a megold\u00e1s r\u00e9szek\u00e9nt kell beadni, \u00edgy felker\u00fclnek a git repository tartalm\u00e1val egy\u00fctt. Mivel a repository priv\u00e1t, azt az oktat\u00f3kon k\u00edv\u00fcl m\u00e1s nem l\u00e1tja. Amennyiben olyan tartalom ker\u00fcl a k\u00e9perny\u0151k\u00e9pre, amit nem szeretn\u00e9l felt\u00f6lteni, kitakarhatod a k\u00e9pr\u0151l. Elv\u00e1r\u00e1saink a munk\u00e1val kapcsolatban \u00b6 Hova kell felt\u00f6lteni a megold\u00e1st? Fentebb megtal\u00e1lod a le\u00edr\u00e1st. Egy\u00e9ni munka? Otthoni munka? Mivel a laborokra jegyet kapsz, elv\u00e1r\u00e1s, hogy mindenki saj\u00e1t megold\u00e1st k\u00e9sz\u00edtsen el \u00e9s adjon be. Ez nem z\u00e1rja ki az egym\u00e1snak ny\u00fajtott seg\u00edts\u00e9get. Kiz\u00e1rja viszont m\u00e1s megold\u00e1s\u00e1nak lem\u00e1sol\u00e1s\u00e1t. Ez\u00e9rt k\u00e9rj\u00fck a k\u00e9perny\u0151k\u00e9peket, mert \u00edgy a munka folyamat\u00e1val bizony\u00edtod a megold\u00e1s saj\u00e1t elk\u00e9sz\u00edt\u00e9s\u00e9t. M\u00e1s munk\u00e1j\u00e1nak lem\u00e1sol\u00e1sa: A BME etikai k\u00f3dexe \u00e9s a TVSZ szab\u00e1lyozza. Komolyan vessz\u00fck. Egy labor csak 2 \u00f3ra, nem? Nem. A t\u00e1rgy 5 kredit, amely a f\u00e9l\u00e9v sor\u00e1n megk\u00f6zel\u00edt\u0151leg 150 munka\u00f3ra befektet\u00e9s\u00e9t ig\u00e9nyli. A labor teh\u00e1t nem csak a teremben elt\u00f6lt\u00f6tt 2 \u00f3ra, hanem az el\u0151zetes felk\u00e9sz\u00fcl\u00e9s \u00e9s a feladat befejez\u00e9se / otthoni elv\u00e9gz\u00e9se is. Egy apr\u00f3 el\u00edr\u00e1s miatt nem m\u0171k\u00f6d\u00f6tt a k\u00f3dom, \u00e9s nem \u00e9rt\u00e9kelt\u00e9tek. A laborok sor\u00e1n m\u0171k\u00f6d\u0151 programot, k\u00f3dot, k\u00f3dr\u00e9szletet kell k\u00e9sz\u00edteni. Az\u00e9rt sz\u00e1m\u00edt\u00f3g\u00e9p laborban vagy otthon k\u00e9sz\u00edtj\u00fck a feladatot, mert \u00edgy tudod magad ellen\u0151rizni. Minimum elv\u00e1r\u00e1s, hogy a beadott k\u00f3d leforduljon, lefusson. Ha a viselked\u00e9s nem teljesen helyes, azt \u00e9rt\u00e9kelj\u00fck. De ha egy\u00e1ltal\u00e1n nem m\u0171k\u00f6dik, nem \u00e9rt\u00e9kelj\u00fck a megold\u00e1st. Az\u00e9rt \u00edgy tesz\u00fcnk, mert m\u00e9rn\u00f6kk\u00e9nt a feladatod a probl\u00e9m\u00e1k megold\u00e1sa lesz, \u00e9s nem csak egy k\u00eds\u00e9rlet a megold\u00e1sra. Mit gondolsz, ha a munkahelyeden a f\u0151n\u00f6k\u00f6dnek \u00e1tadsz egy nem fordul\u00f3 k\u00f3dot, mit fog tenni? Ha otthonr\u00f3l k\u00e9sz\u00edtem el a megold\u00e1st, hogyan kapok seg\u00edts\u00e9get? Ak\u00e1r otthonr\u00f3l dolgozol, ak\u00e1r egyetemi laborban, egy laborvezet\u0151h\u00f6z tartozol. \u0150 felel nem csak a kontakt\u00f3ra megtart\u00e1s\u00e1\u00e9rt, hanem az\u00e9rt is, hogy a f\u00e9l\u00e9v k\u00f6zben a feladatok bead\u00e1sa \u00e9s ellen\u0151rz\u00e9se rendben t\u00f6rt\u00e9njen. Nem seg\u00edt a laborvezet\u0151. Mi\u00e9rt? Dehogynem seg\u00edt. Viszont ha egyb\u0151l megmondan\u00e1 a megold\u00e1st, csak azt tanuln\u00e1d meg, hogy legk\u00f6zelebb is meg kell k\u00e9rdezni. Pr\u00f3b\u00e1ld magad megoldani, mutass alternat\u00edv\u00e1kat, k\u00e9rdezz konkr\u00e9tan. Mutasd meg, hogy professzion\u00e1lis a hozz\u00e1\u00e1ll\u00e1sod. Akkor mit k\u00e9rdezhetek meg a laborvezet\u0151t\u0151l? R\u00f6viden: https://stackoverflow.com/help/how-to-ask . Hosszabban: Ha valamivel elakadsz, \u00e9rtsd meg a probl\u00e9m\u00e1t. A probl\u00e9ma nem az, hogy \"nem m\u0171k\u00f6dik\" vagy \"nem tudom, hogyan csin\u00e1ljam\". Akkor tudsz j\u00f3l k\u00e9rdezni, ha m\u00e1r k\u00f6r\u00fclj\u00e1rtad a probl\u00e9m\u00e1t, \u00e9s azt is meg tudod mutatni, mivel pr\u00f3b\u00e1lkozt\u00e1l m\u00e1r. Sz\u00f3val Google \u00e9s StackOverflow a megold\u00e1s? Nem. Minden tud\u00e1s, amire sz\u00fcks\u00e9ged van, m\u00e1r el\u0151fordult egyetemi tanulm\u00e1nyaid sor\u00e1n. A Google j\u00f3, a StackOverflow m\u00e9g jobb.... De! A v\u00e1laszt is meg kell \u00e9rteni. Lehet, hogy a megtal\u00e1lt v\u00e1lasz megold\u00e1s, csak \u00e9pp nem a te probl\u00e9m\u00e1dra. Sok a hat\u00e1rid\u0151, meg az el\u0151\u00edr\u00e1s. Ez n\u00e9z\u0151pont k\u00e9rd\u00e9se. A m\u00e9rn\u00f6k nem csak programozni tud, hanem meghat\u00e1rozott keretek k\u00f6z\u00f6tt dolgozni. Mert a vil\u00e1g bonyolult, \u00e9s a bonyolults\u00e1got szab\u00e1lyokkal lehet kord\u00e1ban tartani. Ha id\u0151d engedi, \u00e9rdemes megn\u00e9zni, mit mond Robert C. Martin (Bob Martin, \"Uncle Bob\") arr\u00f3l, honnan sz\u00e1rmazik a szoftverfejleszt\u0151i szakmai: https://www.youtube.com/watch?v=ecIWPzGEbFc","title":"T\u00e1rgy ismertet\u0151"},{"location":"#targy-ismerteto","text":"A t\u00e1rgyk\u00f6vetelm\u00e9nyeket l\u00e1sd a hivatalos tant\u00e1rgyi adatlapon . A laborok sorrendj\u00e9t \u00e9s a bead\u00e1sok hat\u00e1ridej\u00e9t Moodle-ben tal\u00e1lod. Jav\u00edt\u00e1s az anyagban A t\u00e1rgy hallgat\u00f3inak az anyagban t\u00f6rt\u00e9n\u0151 jav\u00edt\u00e1s\u00e9rt, kieg\u00e9sz\u00edt\u00e9s\u00e9rt plusz pontot adunk! Ha hib\u00e1t tal\u00e1lsz, vagy kieg\u00e9sz\u00edten\u00e9d/pontos\u00edtan\u00e1d a feladatle\u00edr\u00e1sokat, nyiss egy pull request -et! A repository linkj\u00e9t a jobb fels\u0151 sarokban tal\u00e1lod. Felhaszn\u00e1l\u00e1si felt\u00e9telek Az itt tal\u00e1lhat\u00f3 oktat\u00e1si seg\u00e9danyagok a BMEVIAUAC00 t\u00e1rgy hallgat\u00f3inak k\u00e9sz\u00fcltek. Az anyagok oly m\u00f3d\u00fa felhaszn\u00e1l\u00e1sa, amely a t\u00e1rgy oktat\u00e1s\u00e1hoz nem szorosan kapcsol\u00f3dik, csak a szerz\u0151(k) \u00e9s a forr\u00e1s megjel\u00f6l\u00e9s\u00e9vel t\u00f6rt\u00e9nhet. Az anyagok a t\u00e1rgy keret\u00e9ben oktatott kontextusban \u00e9rtelmezhet\u0151ek. Az anyagok\u00e9rt egy\u00e9b felhaszn\u00e1l\u00e1s eset\u00e9n a szerz\u0151(k) felel\u0151ss\u00e9get nem v\u00e1llalnak.","title":"T\u00e1rgy ismertet\u0151"},{"location":"#altalanos-tudnivalok","text":"","title":"\u00c1ltal\u00e1nos tudnival\u00f3k"},{"location":"#laborok-megoldasainak-beadasa","text":"A laborok megold\u00e1s\u00e1t egy szem\u00e9lyre sz\u00f3l\u00f3 git repository-ban kell beadni. Ennek pontos folyamat\u00e1t l\u00e1sd itt . K\u00e9r\u00fcnk, hogy alaposan olvasd v\u00e9gig a le\u00edr\u00e1st! FONTOS A laborok elk\u00e9sz\u00edt\u00e9se \u00e9s bead\u00e1sa sor\u00e1n az itt le\u00edrtak szerint kell elj\u00e1rnod. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck. A bead\u00e1s sor\u00e1n a munkafolyamati hib\u00e1k\u00e9rt (pl. nem megfelel\u0151 emberhez hozz\u00e1rendel\u00e9se, hozz\u00e1rendel\u00e9s elfelejt\u00e9se) pontot vonunk le.","title":"Laborok megold\u00e1sainak bead\u00e1sa"},{"location":"#laborok-ertekelese","text":"Minden labort k\u00fcl\u00f6n jeggyel \u00e9rt\u00e9kel\u00fcnk. A teljes\u00edt\u00e9s felt\u00e9tele a hat\u00e1rid\u0151ig t\u00f6rt\u00e9n\u0151 bead\u00e1s. A jegy (1-5 sk\u00e1l\u00e1n) a labor feladatokon megszerezhet\u0151 5 pont alapj\u00e1n t\u00f6rt\u00e9nik. A feladatok bead\u00e1s\u00e1hoz minden esetben a GitHub platformot haszn\u00e1ljuk. A feladatok ki\u00e9rt\u00e9kel\u00e9se egyes laborok eset\u00e9n r\u00e9szben automatikusan t\u00f6rt\u00e9nik. A futtathat\u00f3 k\u00f3dokat val\u00f3ban le fogjuk futtatni, ez\u00e9rt minden esetben fontos a feladatle\u00edr\u00e1sok pontos k\u00f6vet\u00e9se (kiindul\u00f3 k\u00f3d v\u00e1z haszn\u00e1lata, csak a megengedett f\u00e1jlok v\u00e1ltoztat\u00e1sa, stb.)! A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9r\u0151l a GitHub-on kapsz sz\u00f6veges visszajelz\u00e9st (l\u00e1sd itt ). Ha enn\u00e9l t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t.","title":"Laborok \u00e9rt\u00e9kel\u00e9se"},{"location":"#imsc-pontok","text":"iMSC pontok a ZH-n, a nagyHF-n \u00e9s v\u00e1rhat\u00f3an n\u00e9h\u00e1ny laboron szerezhet\u0151k. Az els\u0151 laboron nem szerezhet\u0151 iMSc pont. A k\u00e9s\u0151bbi laborokon, ha lesz ilyen lehet\u0151s\u00e9g, az iMSc-s feladatok megold\u00e1sait a sima labormegold\u00e1sokkal egy\u00fctt kell felt\u00f6lteni. Ha egy feladatban k\u00e9rd\u00e9sek szerepelnek, a pontok csak akkor fogadhat\u00f3k el, ha mell\u00e9kletben egy ig\u00e9nyes jegyz\u0151k\u00f6nyv is szerepel a k\u00e9rd\u00e9sekre vonatkoz\u00f3 v\u00e1laszokkal. iMSc pont szerz\u00e9s\u00e9re b\u00e1rmely hallgat\u00f3 jogosult, aki az el\u0151tte l\u00e9v\u0151 feladatokkal m\u00e1r v\u00e9gzett (laborvezet\u0151 ellen\u0151rzi a halad\u00e1st).","title":"iMSC pontok"},{"location":"#beugro","text":"Az els\u0151 labort kiv\u00e9ve minden labor el\u0151tt lesz beugr\u00f3, mely felt\u00e9tele a labor teljes\u00edt\u00e9s\u00e9nek.","title":"Beugr\u00f3"},{"location":"#kis-zh-k","text":"A f\u00e9l\u00e9v sor\u00e1n hat alkalommal kis z\u00e1rthelyit \u00edratunk a laborat\u00f3rium alkalmakon. Ezek k\u00f6z\u00fcl a n\u00e9gy legjobban siker\u00fclt kis z\u00e1rthelyi pontsz\u00e1mnak egyenk\u00e9nt el kell \u00e9rje a szerezhet\u0151 pontsz\u00e1m 40%-\u00e1t. A KisZH kiv\u00e1ltja a beugr\u00f3 szerep\u00e9t. A kisZH-k kett\u0151 vagy h\u00e1rom hetente lesznek, ezek id\u0151pontj\u00e1t az els\u0151 vagy m\u00e1sodik el\u0151ad\u00e1son kihirdetj\u00fck. A mostani Labor 01-en nincs kisZH.","title":"Kis ZH-k"},{"location":"#kepernyokepek","text":"A laborok k\u00e9rik, hogy k\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a megold\u00e1s egy-egy r\u00e9sz\u00e9r\u0151l. Ez k\u00fcl\u00f6n\u00f6sen akkor fontos, ha a feladatot otthon k\u00e9sz\u00edted el, mert ezzel bizony\u00edtod, hogy a megold\u00e1sod saj\u00e1t magad k\u00e9sz\u00edtetted. A k\u00e9perny\u0151k\u00e9pek elv\u00e1rt tartalm\u00e1t a feladat minden esetben pontosan megnevezi . A k\u00e9perny\u0151k\u00e9p k\u00e9sz\u00fclhet a teljes desktopr\u00f3l is, de lehet csak a k\u00e9rt alkalmaz\u00e1sr\u00f3l k\u00e9sz\u00edteni. A k\u00e9perny\u0151k\u00e9peket a megold\u00e1s r\u00e9szek\u00e9nt kell beadni, \u00edgy felker\u00fclnek a git repository tartalm\u00e1val egy\u00fctt. Mivel a repository priv\u00e1t, azt az oktat\u00f3kon k\u00edv\u00fcl m\u00e1s nem l\u00e1tja. Amennyiben olyan tartalom ker\u00fcl a k\u00e9perny\u0151k\u00e9pre, amit nem szeretn\u00e9l felt\u00f6lteni, kitakarhatod a k\u00e9pr\u0151l.","title":"K\u00e9perny\u0151k\u00e9pek"},{"location":"#elvarasaink-a-munkaval-kapcsolatban","text":"Hova kell felt\u00f6lteni a megold\u00e1st? Fentebb megtal\u00e1lod a le\u00edr\u00e1st. Egy\u00e9ni munka? Otthoni munka? Mivel a laborokra jegyet kapsz, elv\u00e1r\u00e1s, hogy mindenki saj\u00e1t megold\u00e1st k\u00e9sz\u00edtsen el \u00e9s adjon be. Ez nem z\u00e1rja ki az egym\u00e1snak ny\u00fajtott seg\u00edts\u00e9get. Kiz\u00e1rja viszont m\u00e1s megold\u00e1s\u00e1nak lem\u00e1sol\u00e1s\u00e1t. Ez\u00e9rt k\u00e9rj\u00fck a k\u00e9perny\u0151k\u00e9peket, mert \u00edgy a munka folyamat\u00e1val bizony\u00edtod a megold\u00e1s saj\u00e1t elk\u00e9sz\u00edt\u00e9s\u00e9t. M\u00e1s munk\u00e1j\u00e1nak lem\u00e1sol\u00e1sa: A BME etikai k\u00f3dexe \u00e9s a TVSZ szab\u00e1lyozza. Komolyan vessz\u00fck. Egy labor csak 2 \u00f3ra, nem? Nem. A t\u00e1rgy 5 kredit, amely a f\u00e9l\u00e9v sor\u00e1n megk\u00f6zel\u00edt\u0151leg 150 munka\u00f3ra befektet\u00e9s\u00e9t ig\u00e9nyli. A labor teh\u00e1t nem csak a teremben elt\u00f6lt\u00f6tt 2 \u00f3ra, hanem az el\u0151zetes felk\u00e9sz\u00fcl\u00e9s \u00e9s a feladat befejez\u00e9se / otthoni elv\u00e9gz\u00e9se is. Egy apr\u00f3 el\u00edr\u00e1s miatt nem m\u0171k\u00f6d\u00f6tt a k\u00f3dom, \u00e9s nem \u00e9rt\u00e9kelt\u00e9tek. A laborok sor\u00e1n m\u0171k\u00f6d\u0151 programot, k\u00f3dot, k\u00f3dr\u00e9szletet kell k\u00e9sz\u00edteni. Az\u00e9rt sz\u00e1m\u00edt\u00f3g\u00e9p laborban vagy otthon k\u00e9sz\u00edtj\u00fck a feladatot, mert \u00edgy tudod magad ellen\u0151rizni. Minimum elv\u00e1r\u00e1s, hogy a beadott k\u00f3d leforduljon, lefusson. Ha a viselked\u00e9s nem teljesen helyes, azt \u00e9rt\u00e9kelj\u00fck. De ha egy\u00e1ltal\u00e1n nem m\u0171k\u00f6dik, nem \u00e9rt\u00e9kelj\u00fck a megold\u00e1st. Az\u00e9rt \u00edgy tesz\u00fcnk, mert m\u00e9rn\u00f6kk\u00e9nt a feladatod a probl\u00e9m\u00e1k megold\u00e1sa lesz, \u00e9s nem csak egy k\u00eds\u00e9rlet a megold\u00e1sra. Mit gondolsz, ha a munkahelyeden a f\u0151n\u00f6k\u00f6dnek \u00e1tadsz egy nem fordul\u00f3 k\u00f3dot, mit fog tenni? Ha otthonr\u00f3l k\u00e9sz\u00edtem el a megold\u00e1st, hogyan kapok seg\u00edts\u00e9get? Ak\u00e1r otthonr\u00f3l dolgozol, ak\u00e1r egyetemi laborban, egy laborvezet\u0151h\u00f6z tartozol. \u0150 felel nem csak a kontakt\u00f3ra megtart\u00e1s\u00e1\u00e9rt, hanem az\u00e9rt is, hogy a f\u00e9l\u00e9v k\u00f6zben a feladatok bead\u00e1sa \u00e9s ellen\u0151rz\u00e9se rendben t\u00f6rt\u00e9njen. Nem seg\u00edt a laborvezet\u0151. Mi\u00e9rt? Dehogynem seg\u00edt. Viszont ha egyb\u0151l megmondan\u00e1 a megold\u00e1st, csak azt tanuln\u00e1d meg, hogy legk\u00f6zelebb is meg kell k\u00e9rdezni. Pr\u00f3b\u00e1ld magad megoldani, mutass alternat\u00edv\u00e1kat, k\u00e9rdezz konkr\u00e9tan. Mutasd meg, hogy professzion\u00e1lis a hozz\u00e1\u00e1ll\u00e1sod. Akkor mit k\u00e9rdezhetek meg a laborvezet\u0151t\u0151l? R\u00f6viden: https://stackoverflow.com/help/how-to-ask . Hosszabban: Ha valamivel elakadsz, \u00e9rtsd meg a probl\u00e9m\u00e1t. A probl\u00e9ma nem az, hogy \"nem m\u0171k\u00f6dik\" vagy \"nem tudom, hogyan csin\u00e1ljam\". Akkor tudsz j\u00f3l k\u00e9rdezni, ha m\u00e1r k\u00f6r\u00fclj\u00e1rtad a probl\u00e9m\u00e1t, \u00e9s azt is meg tudod mutatni, mivel pr\u00f3b\u00e1lkozt\u00e1l m\u00e1r. Sz\u00f3val Google \u00e9s StackOverflow a megold\u00e1s? Nem. Minden tud\u00e1s, amire sz\u00fcks\u00e9ged van, m\u00e1r el\u0151fordult egyetemi tanulm\u00e1nyaid sor\u00e1n. A Google j\u00f3, a StackOverflow m\u00e9g jobb.... De! A v\u00e1laszt is meg kell \u00e9rteni. Lehet, hogy a megtal\u00e1lt v\u00e1lasz megold\u00e1s, csak \u00e9pp nem a te probl\u00e9m\u00e1dra. Sok a hat\u00e1rid\u0151, meg az el\u0151\u00edr\u00e1s. Ez n\u00e9z\u0151pont k\u00e9rd\u00e9se. A m\u00e9rn\u00f6k nem csak programozni tud, hanem meghat\u00e1rozott keretek k\u00f6z\u00f6tt dolgozni. Mert a vil\u00e1g bonyolult, \u00e9s a bonyolults\u00e1got szab\u00e1lyokkal lehet kord\u00e1ban tartani. Ha id\u0151d engedi, \u00e9rdemes megn\u00e9zni, mit mond Robert C. Martin (Bob Martin, \"Uncle Bob\") arr\u00f3l, honnan sz\u00e1rmazik a szoftverfejleszt\u0151i szakmai: https://www.youtube.com/watch?v=ecIWPzGEbFc","title":"Elv\u00e1r\u00e1saink a munk\u00e1val kapcsolatban"},{"location":"laborok/01-android-hello-world/","text":"Labor 01 - Hello World \u00b6 Az els\u0151 labor rendhagy\u00f3 a t\u00f6bbihez k\u00e9pest. Itt kev\u00e9s k\u00f3ddal fogunk tal\u00e1lkozni, ink\u00e1bb az alapok \u00e1tn\u00e9z\u00e9s\u00e9n van a hangs\u00faly. A labor c\u00e9lja, hogy bemutassa az Android fejleszt\u0151k\u00f6rnyezetet, az alkalmaz\u00e1sk\u00e9sz\u00edt\u00e9s, illetve a tesztel\u00e9s \u00e9s ford\u00edt\u00e1s folyamat\u00e1t, az alkalmaz\u00e1s fel\u00fcgyelet\u00e9t, valamint az emul\u00e1tor \u00e9s a fejleszt\u0151k\u00f6rnyezet funkci\u00f3it. Ismertetj\u00fck egy Hello World alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9s\u00e9nek m\u00f3dj\u00e1t \u00e9s labor sor\u00e1n a laborvezet\u0151 r\u00e9szletesen bemutatja az eszk\u00f6z\u00f6ket. A labor v\u00e9g\u00e9n egy jegyz\u0151k\u00f6nyvet kell beadni a jegy megszerz\u00e9s\u00e9hez. A m\u00e9r\u00e9s az al\u00e1bbi t\u00e9m\u00e1kat \u00e9rinti: Az Android platform alapfogalmainak ismerete Android Studio fejleszt\u0151k\u00f6rnyezet alapok Android Emul\u00e1tor tulajdons\u00e1gai Android projekt l\u00e9trehoz\u00e1sa \u00e9s futtat\u00e1sa emul\u00e1toron Manifest \u00e1llom\u00e1ny fel\u00e9p\u00edt\u00e9se Android Profiler El\u0151k\u00e9sz\u00fcletek \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Markdown f\u00e1jl megnyit\u00e1sa \u00b6 A feladatok megold\u00e1sa sor\u00e1n a dokument\u00e1ci\u00f3t markdown form\u00e1tumban k\u00e9sz\u00edtsd. Az el\u0151bb let\u00f6lt\u00f6tt git repository-t nyisd meg egy markdown kompatibilis szerkeszt\u0151vel. Javasolt a Visual Studio Code haszn\u00e1lata: Ind\u00edtsd el a VS Code-ot. A File > Open Folder... men\u00fcvel nyisd meg a git repository k\u00f6nyvt\u00e1r\u00e1t. A bal oldali f\u00e1ban keresd meg a README.md f\u00e1jlt \u00e9s dupla kattint\u00e1ssal nyisd meg. Ezt a f\u00e1jlt szerkeszd. Ha k\u00e9pet k\u00e9sz\u00edtesz, azt is tedd a repository al\u00e1 a t\u00f6bbi f\u00e1jl mell\u00e9. \u00cdgy relat\u00edv el\u00e9r\u00e9si \u00fatvonallal (f\u00e1jln\u00e9v) fogod tudni hivatkozni. F\u00e1jln\u00e9v: csupa kisbet\u0171 \u00e9kezet n\u00e9lk\u00fcl A k\u00e9pek f\u00e1jlnev\u00e9ben ne haszn\u00e1lj \u00e9kezetes karaktereket, sz\u00f3k\u00f6z\u00f6ket, se kis- \u00e9s nagybet\u0171ket keverve. A k\u00fcl\u00f6nb\u00f6z\u0151 platformok \u00e9s a git elt\u00e9r\u0151en kezelik a f\u00e1jlneveket. A GitHub webes fel\u00fclet\u00e9n akkor fog minden rendben megjelenni, ha csak az angol \u00e1b\u00e9c\u00e9 kisbet\u0171it haszn\u00e1lod a f\u00e1jlnevekben. A k\u00e9nyelmes szerkeszt\u00e9shez nyisd meg az el\u0151n\u00e9zet funkci\u00f3t ( Ctrl-K + V ). M\u00e1s szerkeszt\u0151eszk\u00f6z Ha nem szimpatikus ez a szerkeszt\u0151, haszn\u00e1lhatod a GitHub webes fel\u00fclet\u00e9t is a dokument\u00e1ci\u00f3 szerkeszt\u00e9s\u00e9hez, itt is van el\u0151n\u00e9zet. Ekkor a f\u00e1jlok felt\u00f6lt\u00e9se kicsit k\u00f6r\u00fclm\u00e9nyesebb lesz. Android alapok \u00b6 Ford\u00edt\u00e1s menete Android platformon \u00b6 A projekt l\u00e9trehoz\u00e1sa ut\u00e1n a forr\u00e1sk\u00f3d az src k\u00f6nyvt\u00e1rban, m\u00edg a felhaszn\u00e1l\u00f3i fel\u00fclet le\u00edr\u00e1s\u00e1ra szolg\u00e1l\u00f3 XML \u00e1llom\u00e1nyok a res k\u00f6nyvt\u00e1rban tal\u00e1lhat\u00f3k. Az er\u0151forr\u00e1s \u00e1llom\u00e1nyokat egy R.java \u00e1llom\u00e1ny k\u00f6ti \u00f6ssze a forr\u00e1sk\u00f3ddal, \u00edgy k\u00f6nnyed\u00e9n el\u00e9rhetj\u00fck Java/Kotlin oldalr\u00f3l az XML-ben defini\u00e1lt fel\u00fcleti elemeket. Az Android projekt ford\u00edt\u00e1s\u00e1nak eredm\u00e9nye egy APK \u00e1llom\u00e1ny, melyet k\u00f6zvetlen\u00fcl telep\u00edthet\u00fcnk mobil eszk\u00f6zre. Ford\u00edt\u00e1s menete Android platformon A fejleszt\u0151 elk\u00e9sz\u00edti a Kotlin forr\u00e1sk\u00f3dot, valamint az XML alap\u00fa felhaszn\u00e1l\u00f3i fel\u00fclet le\u00edr\u00e1st a sz\u00fcks\u00e9ges er\u0151forr\u00e1s \u00e1llom\u00e1nyokkal. A fejleszt\u0151k\u00f6rnyezet az er\u0151forr\u00e1s \u00e1llom\u00e1nyokb\u00f3l folyamatosan naprak\u00e9szen tartja az R.java er\u0151forr\u00e1s f\u00e1jlt a fejleszt\u00e9shez \u00e9s a ford\u00edt\u00e1shoz. FONTOS Az R.java \u00e1llom\u00e1ny gener\u00e1lt, k\u00e9zzel SOHA ne m\u00f3dos\u00edtsuk! (Az Android Studio egy\u00e9bk\u00e9nt nem is hagyja.) A fejleszt\u0151 a Manifest \u00e1llom\u00e1nyban be\u00e1ll\u00edtja az alkalmaz\u00e1s hozz\u00e1f\u00e9r\u00e9si jogosults\u00e1gait (pl. Internet el\u00e9r\u00e9s, szenzorok haszn\u00e1lata, stb.), illetve ha fut\u00e1s idej\u0171 jogosults\u00e1gok sz\u00fcks\u00e9gesek, ezt kezeli. A ford\u00edt\u00f3 a forr\u00e1sk\u00f3db\u00f3l, az er\u0151forr\u00e1sokb\u00f3l \u00e9s a k\u00fcls\u0151 k\u00f6nyvt\u00e1rakb\u00f3l el\u0151\u00e1ll\u00edtja az ART virtu\u00e1lis g\u00e9p g\u00e9pi k\u00f3dj\u00e1t. A g\u00e9pi k\u00f3db\u00f3l \u00e9s az er\u0151forr\u00e1sokb\u00f3l el\u0151\u00e1ll a nem al\u00e1\u00edrt APK \u00e1llom\u00e1ny. V\u00e9g\u00fcl a rendszer v\u00e9grehajtja az al\u00e1\u00edr\u00e1st \u00e9s el\u0151\u00e1ll a k\u00e9sz\u00fcl\u00e9kekre telep\u00edthet\u0151, al\u00e1\u00edrt APK. Az Android Studio a Gradle build rendszert haszn\u00e1lja ezeknek a l\u00e9p\u00e9seknek az elv\u00e9g\u00e9z\u00e9s\u00e9hez. Megjegyz\u00e9sek A teljes folyamat a fejleszt\u0151i g\u00e9pen megy v\u00e9gbe, a k\u00e9sz\u00fcl\u00e9kekre m\u00e1r csak bin\u00e1ris \u00e1llom\u00e1ny jut el. A k\u00fcls\u0151 k\u00f6nyvt\u00e1rak \u00e1ltal\u00e1ban JAR \u00e1llom\u00e1nyk\u00e9nt, vagy egy m\u00e1sik projekt hozz\u00e1ad\u00e1s\u00e1val illeszthet\u0151k az aktu\u00e1lis projekthez (de ezt nem kell k\u00e9zzel megtenn\u00fcnk, a f\u00fcgg\u0151s\u00e9gek kezel\u00e9s\u00e9ben is a Gradle fog seg\u00edteni). Az APK \u00e1llom\u00e1ny legink\u00e1bb a Java vil\u00e1gban ismert JAR \u00e1llom\u00e1nyokhoz hasonl\u00edthat\u00f3. A Manifest \u00e1llom\u00e1nyban meg kell adni a t\u00e1mogatni k\u00edv\u00e1nt Android verzi\u00f3t, mely felfele kompatibilis az \u00fajabb verzi\u00f3kkal, enn\u00e9l r\u00e9gebbi verzi\u00f3ra azonban az alkalmaz\u00e1s m\u00e1r nem telep\u00edthet\u0151. Az Android folyamatosan friss\u00fcl\u0151 verzi\u00f3ival folymatosan l\u00e9p\u00e9st kell tartaniuk a fejleszt\u0151knek. Az Android alkalmaz\u00e1sokat tipikusan a Google Play Store-ban szokt\u00e1k publik\u00e1lni, \u00edgy az APK form\u00e1tumban val\u00f3 terjeszt\u00e9s nem annyira elterjedt. SDK \u00e9s k\u00f6nyvt\u00e1rai \u00b6 A developer.android.com/studio oldalr\u00f3l let\u00f6lthet\u0151 az IDE \u00e9s az SDK. Ennek fontosabb mapp\u00e1it, eszk\u00f6zeit tekints\u00e9k \u00e1t a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel! SDK szerkezet: docs: Dokument\u00e1ci\u00f3 extras: K\u00fcl\u00f6nb\u00f6z\u0151 extra szoftverek helye. Maven repository, support libes anyagok, analytics SDK, Google Android USB driver (amennyiben SDK managerrel ezt is let\u00f6lt\u00f6tt\u00fck) stb. platform-tools: Fastboot \u00e9s ADB bin\u00e1risok helye (legt\u00f6bbet haszn\u00e1lt eszk\u00f6z\u00f6k) platforms , samples , sources , system-images: Minden API levelhez k\u00fcl\u00f6n almapp\u00e1ban a platform anyagok, forr\u00e1sok, p\u00e9ldaprojektek, OS image-ek tools: Ford\u00edt\u00e1st \u00e9s tesztel\u00e9st seg\u00edt\u0151 eszk\u00f6z\u00f6k, SDK manager, 9Patch drawer, emul\u00e1tor bin\u00e1risok stb. AVD \u00e9s SDK manager \u00b6 Az SDK kezel\u00e9s\u00e9re az SDK managert haszn\u00e1ljuk, ezzel lehet let\u00f6lteni \u00e9s frissen tartani az eszk\u00f6zeinket. Ind\u00edt\u00e1sa az Android Studion kereszt\u00fcl lehets\u00e9ges. Az SDK Manager ikonja a fenti toolbaron: SDK manager fel\u00fclete: Megjegyz\u00e9s Kor\u00e1bban l\u00e9tezett egy standalone SDK manager de ennek haszn\u00e1lata m\u00e1ra deprecated lett. Ha online forr\u00e1sokban ilyet l\u00e1tunk ne lep\u0151dj\u00fcnk meg. Ind\u00edtsuk el az AVD managert, \u00e9s vizsg\u00e1ljuk meg a laborvezet\u0151vel, hogy rendelkez\u00e9sre \u00e1ll-e minden, ami az els\u0151 alkalmaz\u00e1sunkhoz kelleni fog. AVD \u00b6 Az AVD az Android Virtual Device r\u00f6vid\u00edt\u00e9se. Ahogy arr\u00f3l m\u00e1r el\u0151ad\u00e1son is sz\u00f3 esett, nem csak val\u00f3di eszk\u00f6z\u00f6n futtathatjuk a k\u00f3dunkat, hanem emul\u00e1toron is. (Mi is a k\u00fcl\u00f6nbs\u00e9g szimul\u00e1tor \u00e9s emul\u00e1tor k\u00f6z\u00f6tt?) Az AVD ind\u00edt\u00e1sa a fejleszt\u0151i k\u00f6rnyezeten kereszt\u00fcl lehets\u00e9ges (illetve parancssorb\u00f3l is, de ennek a haszn\u00e1lat\u00e1ra csak speci\u00e1lis esetekben van sz\u00fcks\u00e9g). Az AVD Manager ikonja: A fenti k\u00e9pen bal oldalon a l\u00e9tez\u0151 virtu\u00e1lis eszk\u00f6z\u00f6k list\u00e1j\u00e1t tal\u00e1ljuk, jobb oldalon pedig az \u00fan. eszk\u00f6z defin\u00edci\u00f3k\u00e9t. Itt n\u00e9h\u00e1ny el\u0151re elk\u00e9sz\u00edtett sablon \u00e1ll rendelkez\u00e9sre. Magunk is k\u00e9sz\u00edthet\u00fcnk ilyet, ha tipikusan egy adott eszk\u00f6zre szeretn\u00e9nk fejleszteni (pl. Galaxy S4). K\u00e9sz\u00edts\u00fcnk \u00faj emul\u00e1tort! \u00c9rtelemszer\u0171en csak olyan API szint\u0171 eszk\u00f6zt k\u00e9sz\u00edthet\u00fcnk, amilyenek rendelkez\u00e9sre \u00e1llnak az SDK manageren kereszt\u00fcl. A bal oldali ablakon, kattintsunk a bal als\u00f3 sarokban tal\u00e1lhat\u00f3 Create Virtual Device... gombra! V\u00e1lasszunk az el\u0151re defini\u00e1lt k\u00e9sz\u00fcl\u00e9k sablonokb\u00f3l (pl. Nexus 5X ), majd nyomjuk meg a Next gombot. D\u00f6nts\u00fck el, hogy milyen Android verzi\u00f3j\u00fa emul\u00e1tort k\u00edv\u00e1nunk haszn\u00e1lni. CPU/ABI alapvet\u0151en x86_64 legyen, mivel ezekhez kapunk hardveres gyors\u00edt\u00e1st is. Itt v\u00e1lasszunk a rendelkez\u00e9sre \u00e1ll\u00f3k k\u00f6z\u00fcl egyet, majd Next . Az eszk\u00f6z r\u00e9szletes konfigur\u00e1ci\u00f3ja. A virtu\u00e1lis eszk\u00f6z neve legyen p\u00e9ld\u00e1ul Labor_0 . V\u00e1lasszuk ki az alap\u00e9rtelmezett orient\u00e1ci\u00f3t, tetsz\u00e9s szerint kapcsoljuk ki vagy be a k\u00e9sz\u00fcl\u00e9k keret\u00e9nek megjelen\u00edt\u00e9s\u00e9t. A Show Advanced Settings alatt tov\u00e1bbi opci\u00f3kat tal\u00e1lunk: Kamera opci\u00f3k: WebcamX , hardveres kamera, ami a sz\u00e1m\u00edt\u00f3g\u00e9pre van csatlakoztatva Emulated , egy egyszer\u0171 szoftveres megold\u00e1s, most legal\u00e1bb az egyik kamera legyen ilyen . VirtualScene , egy kifinomultabb szoftveres megold\u00e1s, amelyben egy 3D vil\u00e1gban mozgathatjuk a kamer\u00e1t. H\u00e1l\u00f3zat: \u00c1ll\u00edthatjuk a sebess\u00e9g\u00e9t \u00e9s a k\u00e9sleltet\u00e9s\u00e9t is kommunik\u00e1ci\u00f3s technol\u00f3gi\u00e1k szerint. Boot Option : Nemr\u00e9g jelent meg az Android emul\u00e1tor \u00e1llapot\u00e1r\u00f3l val\u00f3 pillanatk\u00e9p elment\u00e9s\u00e9nek lehet\u0151s\u00e9ge. Ez azt takarja, hogy a virtu\u00e1lis oper\u00e1ci\u00f3s rendszer csak felf\u00fcggeszt\u00e9sre ker\u00fcl az emul\u00e1tor bez\u00e1r\u00e1skor (p\u00e9ld\u00e1ul a megnyitott alkalmaz\u00e1s is megmarad, a teljes \u00e1llapot\u00e1val), \u00e9s Quick boot esetben a teljes OS ind\u00edt\u00e1sa helyett m\u00e1sodperceken bel\u00fcl elindul az emul\u00e1lt rendszer. Cold Boot esetben minden alkalommal le\u00e1ll\u00edtja \u00e9s \u00fajra ind\u00edtja a virt\u00e1lis eszk\u00f6z teljes oper\u00e1ci\u00f3s rendszer\u00e9t. Mem\u00f3ria \u00e9s t\u00e1rhely: RAM: Ha kev\u00e9s a rendszermem\u00f3ri\u00e1nk, nem \u00e9rdemes 768 MB-n\u00e1l t\u00f6bbet adni, mert k\u00f6nnyen futhatunk probl\u00e9m\u00e1kba. Ha az emul\u00e1tor lefagy, vagy az eg\u00e9sz OS meg\u00e1ll m\u0171k\u00f6d\u00e9s k\u00f6zben, akkor \u00e1ll\u00edtsuk alacsonyabbra ezt az \u00e9rt\u00e9ket. 8 GB vagy t\u00f6bb rendszermem\u00f3ria mellett nyugodtan \u00e1ll\u00edthatjuk az emul\u00e1tor mem\u00f3ri\u00e1j\u00e1t 1024, 1536, vagy 2048 MB-ra. VM heap: az alkalmaz\u00e1sok virtu\u00e1lis g\u00e9p\u00e9nek sz\u00f3l, maradhat az alap\u00e9rt\u00e9k. Tudni kell, hogy k\u00e9sz\u00fcl\u00e9kek eset\u00e9ben gy\u00e1rt\u00f3nk\u00e9nt v\u00e1ltozik. Bels\u0151 flash mem\u00f3ria \u00e9s SD k\u00e1rtya m\u00e9rete, alapvet\u0151en j\u00f3k az alap\u00e9rtelmezett be\u00e1ll\u00edt\u00e1sai. Ha mindent rendben tal\u00e1l az ablak, akkor Finish ! Az Android Virtual Device Manager-ben megjelent az im\u00e9nt l\u00e9trehozott eszk\u00f6z\u00fcnk. Itt lehet\u0151s\u00e9g van a kor\u00e1bban megadott param\u00e9terek szerkeszt\u00e9s\u00e9re, a \"k\u00e9sz\u00fcl\u00e9kr\u0151l\" a felhaszn\u00e1l\u00f3i adatok t\u00f6rl\u00e9s\u00e9re ( Wipe Data - Teljes vissza\u00e1ll\u00edt\u00e1s), illetve az emul\u00e1tor p\u00e9ld\u00e1ny duplik\u00e1l\u00e1s\u00e1ra vagy t\u00f6rl\u00e9s\u00e9re. A Play gombbal ind\u00edtsuk el az \u00faj emul\u00e1tort! Az elind\u00edtott emul\u00e1toron pr\u00f3b\u00e1ljuk ki az API Demos \u00e9s Dev Tools alkalmaz\u00e1sokat! Megjegyz\u00e9s A gy\u00e1ri emul\u00e1toron k\u00edv\u00fcl t\u00f6bb alternat\u00edva is l\u00e9tezik, mint pl. a Genymotion vagy a BigNox , viszont a Google f\u00e9le emul\u00e1tor a legelterjedtebb, \u00edgy amennyiben ezzel nem jelentkeznek probl\u00e9m\u00e1ink, maradjunk enn\u00e9l. Tesztel\u00e9s c\u00e9lj\u00e1b\u00f3l nagyon j\u00f3l haszn\u00e1lhat\u00f3 az emul\u00e1tor, amely az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 plusz funkci\u00f3kat is adja. Lehet\u0151s\u00e9g van t\u00f6bbek k\u00f6z\u00f6tt egyedi hely be\u00e1ll\u00edt\u00e1s\u00e1ra, bej\u00f6v\u0151 h\u00edv\u00e1s szimul\u00e1l\u00e1s\u00e1ra, stb. A panelt a fut\u00f3 emul\u00e1tor jobb oldal\u00e1n tal\u00e1lhat\u00f3 vez\u00e9rl\u0151 gombok k\u00f6z\u00fcl a ... gombbal lehet megnyitni: Fejleszt\u0151i k\u00f6rnyezet \u00b6 Android fejleszt\u00e9sre a labor sor\u00e1n a JetBrains IntelliJ alapjain nyugv\u00f3 Android Studio-t fogjuk haszn\u00e1lni. A Studio-val ismerked\u0151k sz\u00e1m\u00e1ra hasznos funkci\u00f3 a Tip of the day , \u00e9rdemes egyb\u0151l kipr\u00f3b\u00e1lni, megn\u00e9zni az adott funkci\u00f3t. Indul\u00e1skor alap\u00e9rtelmezetten a legut\u00f3bbi projekt ny\u00edlik meg, ha nincs ilyen, vagy ha minden projekt\u00fcnket bez\u00e1rtuk, akkor a nyit\u00f3 k\u00e9perny\u0151. (A legut\u00f3bbi projekt \u00fajranyit\u00e1s\u00e1t a Settings -> Appeareance & Behavior -> System Settings -> Reopen last project on startup opci\u00f3val ki is kapcsolhatjuk.) Hello World \u00b6 A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel k\u00e9sz\u00edtsenek egy egyszer\u0171 Hello World alkalmaz\u00e1st, a var\u00e1zsl\u00f3 n\u00e9zeten az Include Kotlin support legyen bepip\u00e1lva! FILE PATH A projekt a repository-ban l\u00e9v\u0151 HelloWorld k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n! Android Studio \u00b6 Ez a r\u00e9sz azoknak sz\u00f3l, akik kor\u00e1bban m\u00e1r haszn\u00e1lt\u00e1k az Eclipse nev\u0171 IDE-t, \u00e9s szeretn\u00e9k megismerni a k\u00fcl\u00f6nbs\u00e9geket az Android Studio-hoz k\u00e9pest. Import r\u00e9gi projektekb\u0151l: Android Studioban lehets\u00e9ges a projekt import\u00e1l\u00e1sa r\u00e9gebbi verzi\u00f3j\u00fa projektekb\u0151l \u00e9s a r\u00e9gi Eclipse projektekb\u0151l is. Projektstrukt\u00fara: Az Android Studio Gradle-lel ford\u00edt, \u00e9s m\u00e1s fel\u00e9p\u00edt\u00e9st haszn\u00e1l. Projekten bel\u00fcl: .idea : IDE f\u00e1jlok app : forr\u00e1s build : ford\u00edtott \u00e1llom\u00e1nyok libs : libraryk src : forr\u00e1sk\u00f3d, azon bel\u00fcl is k\u00fcl\u00f6n projekt a tesztnek, \u00e9s azon bel\u00fcl pedig res k\u00f6nyvt\u00e1r, illetve java . Ut\u00f3bbin bel\u00fcl m\u00e1r a csomagok vannak. gradle : Gradle f\u00e1jlok Hasznos funkci\u00f3k: IntelliSense, fejlett refaktor\u00e1l\u00e1s t\u00e1mogat\u00e1s Ha egy sorban sz\u00ednre, vagy k\u00e9pi er\u0151forr\u00e1sra hivatkozunk, a sor elej\u00e9re kitesz egy miniat\u0171r v\u00e1ltozatot. Ha k\u00f6zvetve hivatkozott er\u0151forr\u00e1st (ak\u00e1r resources.get... , ak\u00e1r R... ) adunk meg, \u00f6sszecsukja a hivatkoz\u00e1st \u00e9s a t\u00e9nyleges \u00e9rt\u00e9ket mutatja. Ha r\u00e1vissz\u00fck az egeret felfedi, ha kattintunk kibontja a hivatkoz\u00e1st. N\u00e9vtelen bels\u0151 oszt\u00e1lyokkal is hasonl\u00f3t tud, jav\u00edtva a k\u00f3d olvashat\u00f3s\u00e1g\u00e1t. K\u00f3dkieg\u00e9sz\u00edt\u00e9sn\u00e9l szabad a keres\u0151, a sz\u00f3t\u00f6red\u00e9ket keresi, nem pedig a sz\u00f3val kezd\u0151d\u0151 lehet\u0151s\u00e9geket (l\u00e1sd k\u00e9pen) V\u00e1ltoz\u00f3n\u00e9v aj\u00e1nl\u00e1s: amikor v\u00e1ltoz\u00f3n\u00e9vre van sz\u00fcks\u00e9g\u00fcnk, nyomjunk Ctrl+Space -t. Ha adottak a k\u00f6r\u00fclm\u00e9nyek, a Studio eg\u00e9sz j\u00f3 neveket tud felaj\u00e1nlani. Szigor\u00fa lint. A Studio megengedi a warningot. Ez\u00e9rt szigor\u00fabb a lint, t\u00f6bb mindenre figyelmeztet (olyan apr\u00f3s\u00e1gra is, hogy egy View egyik oldal\u00e1n van padding, a m\u00e1sikon nincs) Layout szerkeszt\u00e9s. A grafikus layout \u00e9p\u00edt\u00e9s lehets\u00e9ges. CTRL-t lenyomva navig\u00e1lhatunk a k\u00f3dban, pl. oszt\u00e1lyra, met\u00f3dush\u00edv\u00e1sra kattintva. Ezt a navig\u00e1ci\u00f3t (\u00e9s az egyszer\u0171 m\u00e1sik oszt\u00e1lyba kattint\u00e1st is) r\u00f6gz\u00edti, \u00e9s a historyban el\u0151re-h\u00e1tra gombokkal lehet l\u00e9pkedni. Ha van az eger\u00fcnk\u00f6n/billenty\u0171zet\u00fcnk\u00f6n ilyen gomb, \u00e9s netes b\u00f6ng\u00e9sz\u00e9s k\u00f6zben akt\u00edvan haszn\u00e1ljuk, ezt a funkci\u00f3t nagyon hasznosnak fogjuk tal\u00e1lni. Sz\u00edn ikonja a sor elej\u00e9n; kiemelve jobb oldalon, hogy melyik n\u00e9zeten vagyunk; szabadszavas kieg\u00e9sz\u00edt\u00e9s; a \"Hello world\" igaz\u00e1b\u00f3l @string/very_very_very_long_hello_world . Billenty\u0171kombin\u00e1ci\u00f3k \u00b6 CTRL + ALT + L : K\u00f3dform\u00e1z\u00e1s CTRL + SPACE : K\u00f3dkieg\u00e9sz\u00edt\u00e9s SHIFT + F6 \u00c1tnevez\u00e9s (Mindenhol) F2 : A k\u00f6vetkez\u0151 error-ra ugrik. Ha nincs error, akkor warningra. CTRL + Z illetve CTRL + SHIFT + Z : Visszavon\u00e1s \u00e9s M\u00e9gis CTRL + P : Param\u00e9terek mutat\u00e1sa ALT + INSERT : Met\u00f3dus gener\u00e1l\u00e1sa CTRL + O : Met\u00f3dus fel\u00fcldefini\u00e1l\u00e1sa CTRL + F9 : Ford\u00edt\u00e1s SHIFT + F10 : Ford\u00edt\u00e1s \u00e9s futtat\u00e1s SHIFT SHIFT : Keres\u00e9s mindenhol CTRL + N : Keres\u00e9s oszt\u00e1lyokban CTRL + SHIFT + N : Keres\u00e9s f\u00e1jlokban CTRL + ALT + SHIFT + N : Keres\u00e9s szimb\u00f3lumokban (p\u00e9ld\u00e1ul f\u00fcggv\u00e9nyek, property-k) CTRL + SHIFT + A : Keres\u00e9s a be\u00e1ll\u00edt\u00e1sokban, kiadhat\u00f3 parancsokban. Eszk\u00f6z\u00f6k, szerkeszt\u0151k \u00b6 A View men\u00fc Tool Windows men\u00fcpontj\u00e1ban lehet\u0151s\u00e9g van k\u00fcl\u00f6nb\u00f6z\u0151 ablakok ki- \u00e9s bekapcsol\u00e1s\u00e1ra. Laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel tekints\u00e9k \u00e1t az al\u00e1bbi eszk\u00f6z\u00f6ket! Project Structure TODO Logcat Terminal Event Log Gradle Lehet\u0151s\u00e9g van felosztani a szerkeszt\u0151ablakot, ehhez kattinsunk egy megnyitott f\u00e1jl tabf\u00fcl\u00e9re jobb gombbal, Split Vertically/Horizontally ! Hasznos be\u00e1ll\u00edt\u00e1sok \u00b6 A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel \u00e1ll\u00edts\u00e1k be a k\u00f6vetkez\u0151 hasznos funkci\u00f3kat: kis- nagybet\u0171 \u00e9rz\u00e9kenys\u00e9g kikapcsol\u00e1sa a k\u00f3dkieg\u00e9sz\u00edt\u0151ben (settingsben keres\u00e9s: sensitive ) \"laptop m\u00f3d\" ki- \u00e9s bekapcsol\u00e1sa ( File -> Power Save Mode ) sorsz\u00e1moz\u00e1s bekapcsol\u00e1sa (k\u00f3d melletti r\u00e9szen bal oldalt: jobb eg\u00e9rgomb, Show Line Numbers ) Gener\u00e1lhat\u00f3 elemek \u00b6 A Studio sok sablont tartalmaz, r\u00f6viden tekints\u00e9k \u00e1t a lehet\u0151s\u00e9geket: Projektf\u00e1ban, projektre jobb gombbal kattintva -> new -> module Projektf\u00e1ban, modulon bel\u00fcl, \"java\"-ra kattintva jobb gombbal -> new Forr\u00e1sk\u00f3dban ALT + INSERT billenty\u0171kombin\u00e1ci\u00f3ra Android Profiler \u00b6 A k\u00e9sz\u00fcl\u00e9k er\u0151forr\u00e1shaszn\u00e1lata monitorozhat\u00f3 ezen a fel\u00fcleten, amelyet az eml\u00edtett View -> Tool Windows -b\u00f3l \u00e9rhet\u00fcnk el. P\u00e9ld\u00e1ul r\u00e9szletes inform\u00e1ci\u00f3t kaphatunk a h\u00e1l\u00f3zati forgalomr\u00f3l: Database Inspector \u00b6 A k\u00e9sz\u00fcl\u00e9ken debuggolt alkalmaz\u00e1sunknak az adatb\u00e1zis\u00e1t is meg tudjuk tekinteni. Device File Explorer \u00b6 A k\u00e9sz\u00fcl\u00e9ken l\u00e9v\u0151 f\u00e1jlrendszert is b\u00f6ng\u00e9szhetj\u00fck . Feladatok (10 x 0.5 pont) \u00b6 Az \u00faj alkalmaz\u00e1st futtass\u00e1k emul\u00e1toron (akinek saj\u00e1t k\u00e9sz\u00fcl\u00e9ke van, az is pr\u00f3b\u00e1lja ki)! Helyezzenek breakpointot a k\u00f3dba, \u00e9s debug m\u00f3dban ind\u00edts\u00e1k az alkalmaz\u00e1st! (\u00c9rdemes megyfigyelni, hogy most m\u00e1sik Gradle Task fut a k\u00e9perny\u0151 alj\u00e1n.) Ind\u00edtsanak h\u00edv\u00e1st \u00e9s k\u00fcldjenek SMS-t az emul\u00e1torra! Mit tapasztalnak? Ind\u00edtsanak h\u00edv\u00e1st \u00e9s k\u00fcldjenek SMS-t az emul\u00e1torr\u00f3l! Mit tapasztalnak? Tekintse \u00e1t az Android Profiler n\u00e9zet funkci\u00f3it a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel! V\u00e1ltoztassa meg a k\u00e9sz\u00fcl\u00e9k tart\u00f3zkod\u00e1si hely\u00e9t az emul\u00e1tor megfelel\u0151 panelj\u00e9nek seg\u00edts\u00e9g\u00e9vel! Vizsg\u00e1lja meg az elind\u00edtott HelloWorld projekt nyitott sz\u00e1lait, mem\u00f3riafoglal\u00e1s\u00e1t! Vizsg\u00e1lja meg a Logcat panel tartalm\u00e1t! Vizsg\u00e1lja meg az Analyze -> Inspect code eredm\u00e9ny\u00e9t! Keresse ki a l\u00e9trehozott HelloWorld projekt mapp\u00e1j\u00e1t \u00e9s a build k\u00f6nyvt\u00e1ron bel\u00fcl vizsg\u00e1lja meg az .apk \u00e1llom\u00e1ny tartalm\u00e1t! Hol tal\u00e1lhat\u00f3 a leford\u00edtott k\u00f3d? BEADAND\u00d3 A labor teljes\u00edt\u00e9s\u00e9hez a fenti feladatokat kell v\u00e9grehajtani \u00e9s az eredm\u00e9nyeket dokument\u00e1lni. Ezt minden egyes feladatn\u00e1l egy k\u00e9perny\u0151k\u00e9ppel \u00e9s r\u00f6vid, n\u00e9h\u00e1ny mondatos magyar\u00e1zattal kell megtenni. A jegyz\u0151k\u00f6nyvet a repository-ban l\u00e9v\u0151 README.md f\u00e1jlban kell elk\u00e9sz\u00edteni. A dokument\u00e1ci\u00f3nak a k\u00e9pekkel egy\u00fctt helyesen kell megjelenni\u00fck a GitHub webes fel\u00fclet\u00e9n is! Ezt ellen\u0151rizd a bead\u00e1s sor\u00e1n: nyisd meg a repository-d webes fel\u00fclet\u00e9t, v\u00e1ltsd \u00e1t a megfelel\u0151 \u00e1gra, \u00e9s a GitHub automatikusan renderelni fogja a README.md f\u00e1jlt a k\u00e9pekkel egy\u00fctt.","title":"Labor 01 - Hello World"},{"location":"laborok/01-android-hello-world/#labor-01-hello-world","text":"Az els\u0151 labor rendhagy\u00f3 a t\u00f6bbihez k\u00e9pest. Itt kev\u00e9s k\u00f3ddal fogunk tal\u00e1lkozni, ink\u00e1bb az alapok \u00e1tn\u00e9z\u00e9s\u00e9n van a hangs\u00faly. A labor c\u00e9lja, hogy bemutassa az Android fejleszt\u0151k\u00f6rnyezetet, az alkalmaz\u00e1sk\u00e9sz\u00edt\u00e9s, illetve a tesztel\u00e9s \u00e9s ford\u00edt\u00e1s folyamat\u00e1t, az alkalmaz\u00e1s fel\u00fcgyelet\u00e9t, valamint az emul\u00e1tor \u00e9s a fejleszt\u0151k\u00f6rnyezet funkci\u00f3it. Ismertetj\u00fck egy Hello World alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9s\u00e9nek m\u00f3dj\u00e1t \u00e9s labor sor\u00e1n a laborvezet\u0151 r\u00e9szletesen bemutatja az eszk\u00f6z\u00f6ket. A labor v\u00e9g\u00e9n egy jegyz\u0151k\u00f6nyvet kell beadni a jegy megszerz\u00e9s\u00e9hez. A m\u00e9r\u00e9s az al\u00e1bbi t\u00e9m\u00e1kat \u00e9rinti: Az Android platform alapfogalmainak ismerete Android Studio fejleszt\u0151k\u00f6rnyezet alapok Android Emul\u00e1tor tulajdons\u00e1gai Android projekt l\u00e9trehoz\u00e1sa \u00e9s futtat\u00e1sa emul\u00e1toron Manifest \u00e1llom\u00e1ny fel\u00e9p\u00edt\u00e9se Android Profiler","title":"Labor 01 - Hello World"},{"location":"laborok/01-android-hello-world/#elokeszuletek","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t .","title":"El\u0151k\u00e9sz\u00fcletek"},{"location":"laborok/01-android-hello-world/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/01-android-hello-world/#markdown-fajl-megnyitasa","text":"A feladatok megold\u00e1sa sor\u00e1n a dokument\u00e1ci\u00f3t markdown form\u00e1tumban k\u00e9sz\u00edtsd. Az el\u0151bb let\u00f6lt\u00f6tt git repository-t nyisd meg egy markdown kompatibilis szerkeszt\u0151vel. Javasolt a Visual Studio Code haszn\u00e1lata: Ind\u00edtsd el a VS Code-ot. A File > Open Folder... men\u00fcvel nyisd meg a git repository k\u00f6nyvt\u00e1r\u00e1t. A bal oldali f\u00e1ban keresd meg a README.md f\u00e1jlt \u00e9s dupla kattint\u00e1ssal nyisd meg. Ezt a f\u00e1jlt szerkeszd. Ha k\u00e9pet k\u00e9sz\u00edtesz, azt is tedd a repository al\u00e1 a t\u00f6bbi f\u00e1jl mell\u00e9. \u00cdgy relat\u00edv el\u00e9r\u00e9si \u00fatvonallal (f\u00e1jln\u00e9v) fogod tudni hivatkozni. F\u00e1jln\u00e9v: csupa kisbet\u0171 \u00e9kezet n\u00e9lk\u00fcl A k\u00e9pek f\u00e1jlnev\u00e9ben ne haszn\u00e1lj \u00e9kezetes karaktereket, sz\u00f3k\u00f6z\u00f6ket, se kis- \u00e9s nagybet\u0171ket keverve. A k\u00fcl\u00f6nb\u00f6z\u0151 platformok \u00e9s a git elt\u00e9r\u0151en kezelik a f\u00e1jlneveket. A GitHub webes fel\u00fclet\u00e9n akkor fog minden rendben megjelenni, ha csak az angol \u00e1b\u00e9c\u00e9 kisbet\u0171it haszn\u00e1lod a f\u00e1jlnevekben. A k\u00e9nyelmes szerkeszt\u00e9shez nyisd meg az el\u0151n\u00e9zet funkci\u00f3t ( Ctrl-K + V ). M\u00e1s szerkeszt\u0151eszk\u00f6z Ha nem szimpatikus ez a szerkeszt\u0151, haszn\u00e1lhatod a GitHub webes fel\u00fclet\u00e9t is a dokument\u00e1ci\u00f3 szerkeszt\u00e9s\u00e9hez, itt is van el\u0151n\u00e9zet. Ekkor a f\u00e1jlok felt\u00f6lt\u00e9se kicsit k\u00f6r\u00fclm\u00e9nyesebb lesz.","title":"Markdown f\u00e1jl megnyit\u00e1sa"},{"location":"laborok/01-android-hello-world/#android-alapok","text":"","title":"Android alapok"},{"location":"laborok/01-android-hello-world/#forditas-menete-android-platformon","text":"A projekt l\u00e9trehoz\u00e1sa ut\u00e1n a forr\u00e1sk\u00f3d az src k\u00f6nyvt\u00e1rban, m\u00edg a felhaszn\u00e1l\u00f3i fel\u00fclet le\u00edr\u00e1s\u00e1ra szolg\u00e1l\u00f3 XML \u00e1llom\u00e1nyok a res k\u00f6nyvt\u00e1rban tal\u00e1lhat\u00f3k. Az er\u0151forr\u00e1s \u00e1llom\u00e1nyokat egy R.java \u00e1llom\u00e1ny k\u00f6ti \u00f6ssze a forr\u00e1sk\u00f3ddal, \u00edgy k\u00f6nnyed\u00e9n el\u00e9rhetj\u00fck Java/Kotlin oldalr\u00f3l az XML-ben defini\u00e1lt fel\u00fcleti elemeket. Az Android projekt ford\u00edt\u00e1s\u00e1nak eredm\u00e9nye egy APK \u00e1llom\u00e1ny, melyet k\u00f6zvetlen\u00fcl telep\u00edthet\u00fcnk mobil eszk\u00f6zre. Ford\u00edt\u00e1s menete Android platformon A fejleszt\u0151 elk\u00e9sz\u00edti a Kotlin forr\u00e1sk\u00f3dot, valamint az XML alap\u00fa felhaszn\u00e1l\u00f3i fel\u00fclet le\u00edr\u00e1st a sz\u00fcks\u00e9ges er\u0151forr\u00e1s \u00e1llom\u00e1nyokkal. A fejleszt\u0151k\u00f6rnyezet az er\u0151forr\u00e1s \u00e1llom\u00e1nyokb\u00f3l folyamatosan naprak\u00e9szen tartja az R.java er\u0151forr\u00e1s f\u00e1jlt a fejleszt\u00e9shez \u00e9s a ford\u00edt\u00e1shoz. FONTOS Az R.java \u00e1llom\u00e1ny gener\u00e1lt, k\u00e9zzel SOHA ne m\u00f3dos\u00edtsuk! (Az Android Studio egy\u00e9bk\u00e9nt nem is hagyja.) A fejleszt\u0151 a Manifest \u00e1llom\u00e1nyban be\u00e1ll\u00edtja az alkalmaz\u00e1s hozz\u00e1f\u00e9r\u00e9si jogosults\u00e1gait (pl. Internet el\u00e9r\u00e9s, szenzorok haszn\u00e1lata, stb.), illetve ha fut\u00e1s idej\u0171 jogosults\u00e1gok sz\u00fcks\u00e9gesek, ezt kezeli. A ford\u00edt\u00f3 a forr\u00e1sk\u00f3db\u00f3l, az er\u0151forr\u00e1sokb\u00f3l \u00e9s a k\u00fcls\u0151 k\u00f6nyvt\u00e1rakb\u00f3l el\u0151\u00e1ll\u00edtja az ART virtu\u00e1lis g\u00e9p g\u00e9pi k\u00f3dj\u00e1t. A g\u00e9pi k\u00f3db\u00f3l \u00e9s az er\u0151forr\u00e1sokb\u00f3l el\u0151\u00e1ll a nem al\u00e1\u00edrt APK \u00e1llom\u00e1ny. V\u00e9g\u00fcl a rendszer v\u00e9grehajtja az al\u00e1\u00edr\u00e1st \u00e9s el\u0151\u00e1ll a k\u00e9sz\u00fcl\u00e9kekre telep\u00edthet\u0151, al\u00e1\u00edrt APK. Az Android Studio a Gradle build rendszert haszn\u00e1lja ezeknek a l\u00e9p\u00e9seknek az elv\u00e9g\u00e9z\u00e9s\u00e9hez. Megjegyz\u00e9sek A teljes folyamat a fejleszt\u0151i g\u00e9pen megy v\u00e9gbe, a k\u00e9sz\u00fcl\u00e9kekre m\u00e1r csak bin\u00e1ris \u00e1llom\u00e1ny jut el. A k\u00fcls\u0151 k\u00f6nyvt\u00e1rak \u00e1ltal\u00e1ban JAR \u00e1llom\u00e1nyk\u00e9nt, vagy egy m\u00e1sik projekt hozz\u00e1ad\u00e1s\u00e1val illeszthet\u0151k az aktu\u00e1lis projekthez (de ezt nem kell k\u00e9zzel megtenn\u00fcnk, a f\u00fcgg\u0151s\u00e9gek kezel\u00e9s\u00e9ben is a Gradle fog seg\u00edteni). Az APK \u00e1llom\u00e1ny legink\u00e1bb a Java vil\u00e1gban ismert JAR \u00e1llom\u00e1nyokhoz hasonl\u00edthat\u00f3. A Manifest \u00e1llom\u00e1nyban meg kell adni a t\u00e1mogatni k\u00edv\u00e1nt Android verzi\u00f3t, mely felfele kompatibilis az \u00fajabb verzi\u00f3kkal, enn\u00e9l r\u00e9gebbi verzi\u00f3ra azonban az alkalmaz\u00e1s m\u00e1r nem telep\u00edthet\u0151. Az Android folyamatosan friss\u00fcl\u0151 verzi\u00f3ival folymatosan l\u00e9p\u00e9st kell tartaniuk a fejleszt\u0151knek. Az Android alkalmaz\u00e1sokat tipikusan a Google Play Store-ban szokt\u00e1k publik\u00e1lni, \u00edgy az APK form\u00e1tumban val\u00f3 terjeszt\u00e9s nem annyira elterjedt.","title":"Ford\u00edt\u00e1s menete Android platformon"},{"location":"laborok/01-android-hello-world/#sdk-es-konyvtarai","text":"A developer.android.com/studio oldalr\u00f3l let\u00f6lthet\u0151 az IDE \u00e9s az SDK. Ennek fontosabb mapp\u00e1it, eszk\u00f6zeit tekints\u00e9k \u00e1t a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel! SDK szerkezet: docs: Dokument\u00e1ci\u00f3 extras: K\u00fcl\u00f6nb\u00f6z\u0151 extra szoftverek helye. Maven repository, support libes anyagok, analytics SDK, Google Android USB driver (amennyiben SDK managerrel ezt is let\u00f6lt\u00f6tt\u00fck) stb. platform-tools: Fastboot \u00e9s ADB bin\u00e1risok helye (legt\u00f6bbet haszn\u00e1lt eszk\u00f6z\u00f6k) platforms , samples , sources , system-images: Minden API levelhez k\u00fcl\u00f6n almapp\u00e1ban a platform anyagok, forr\u00e1sok, p\u00e9ldaprojektek, OS image-ek tools: Ford\u00edt\u00e1st \u00e9s tesztel\u00e9st seg\u00edt\u0151 eszk\u00f6z\u00f6k, SDK manager, 9Patch drawer, emul\u00e1tor bin\u00e1risok stb.","title":"SDK \u00e9s k\u00f6nyvt\u00e1rai"},{"location":"laborok/01-android-hello-world/#avd-es-sdk-manager","text":"Az SDK kezel\u00e9s\u00e9re az SDK managert haszn\u00e1ljuk, ezzel lehet let\u00f6lteni \u00e9s frissen tartani az eszk\u00f6zeinket. Ind\u00edt\u00e1sa az Android Studion kereszt\u00fcl lehets\u00e9ges. Az SDK Manager ikonja a fenti toolbaron: SDK manager fel\u00fclete: Megjegyz\u00e9s Kor\u00e1bban l\u00e9tezett egy standalone SDK manager de ennek haszn\u00e1lata m\u00e1ra deprecated lett. Ha online forr\u00e1sokban ilyet l\u00e1tunk ne lep\u0151dj\u00fcnk meg. Ind\u00edtsuk el az AVD managert, \u00e9s vizsg\u00e1ljuk meg a laborvezet\u0151vel, hogy rendelkez\u00e9sre \u00e1ll-e minden, ami az els\u0151 alkalmaz\u00e1sunkhoz kelleni fog.","title":"AVD \u00e9s SDK manager"},{"location":"laborok/01-android-hello-world/#avd","text":"Az AVD az Android Virtual Device r\u00f6vid\u00edt\u00e9se. Ahogy arr\u00f3l m\u00e1r el\u0151ad\u00e1son is sz\u00f3 esett, nem csak val\u00f3di eszk\u00f6z\u00f6n futtathatjuk a k\u00f3dunkat, hanem emul\u00e1toron is. (Mi is a k\u00fcl\u00f6nbs\u00e9g szimul\u00e1tor \u00e9s emul\u00e1tor k\u00f6z\u00f6tt?) Az AVD ind\u00edt\u00e1sa a fejleszt\u0151i k\u00f6rnyezeten kereszt\u00fcl lehets\u00e9ges (illetve parancssorb\u00f3l is, de ennek a haszn\u00e1lat\u00e1ra csak speci\u00e1lis esetekben van sz\u00fcks\u00e9g). Az AVD Manager ikonja: A fenti k\u00e9pen bal oldalon a l\u00e9tez\u0151 virtu\u00e1lis eszk\u00f6z\u00f6k list\u00e1j\u00e1t tal\u00e1ljuk, jobb oldalon pedig az \u00fan. eszk\u00f6z defin\u00edci\u00f3k\u00e9t. Itt n\u00e9h\u00e1ny el\u0151re elk\u00e9sz\u00edtett sablon \u00e1ll rendelkez\u00e9sre. Magunk is k\u00e9sz\u00edthet\u00fcnk ilyet, ha tipikusan egy adott eszk\u00f6zre szeretn\u00e9nk fejleszteni (pl. Galaxy S4). K\u00e9sz\u00edts\u00fcnk \u00faj emul\u00e1tort! \u00c9rtelemszer\u0171en csak olyan API szint\u0171 eszk\u00f6zt k\u00e9sz\u00edthet\u00fcnk, amilyenek rendelkez\u00e9sre \u00e1llnak az SDK manageren kereszt\u00fcl. A bal oldali ablakon, kattintsunk a bal als\u00f3 sarokban tal\u00e1lhat\u00f3 Create Virtual Device... gombra! V\u00e1lasszunk az el\u0151re defini\u00e1lt k\u00e9sz\u00fcl\u00e9k sablonokb\u00f3l (pl. Nexus 5X ), majd nyomjuk meg a Next gombot. D\u00f6nts\u00fck el, hogy milyen Android verzi\u00f3j\u00fa emul\u00e1tort k\u00edv\u00e1nunk haszn\u00e1lni. CPU/ABI alapvet\u0151en x86_64 legyen, mivel ezekhez kapunk hardveres gyors\u00edt\u00e1st is. Itt v\u00e1lasszunk a rendelkez\u00e9sre \u00e1ll\u00f3k k\u00f6z\u00fcl egyet, majd Next . Az eszk\u00f6z r\u00e9szletes konfigur\u00e1ci\u00f3ja. A virtu\u00e1lis eszk\u00f6z neve legyen p\u00e9ld\u00e1ul Labor_0 . V\u00e1lasszuk ki az alap\u00e9rtelmezett orient\u00e1ci\u00f3t, tetsz\u00e9s szerint kapcsoljuk ki vagy be a k\u00e9sz\u00fcl\u00e9k keret\u00e9nek megjelen\u00edt\u00e9s\u00e9t. A Show Advanced Settings alatt tov\u00e1bbi opci\u00f3kat tal\u00e1lunk: Kamera opci\u00f3k: WebcamX , hardveres kamera, ami a sz\u00e1m\u00edt\u00f3g\u00e9pre van csatlakoztatva Emulated , egy egyszer\u0171 szoftveres megold\u00e1s, most legal\u00e1bb az egyik kamera legyen ilyen . VirtualScene , egy kifinomultabb szoftveres megold\u00e1s, amelyben egy 3D vil\u00e1gban mozgathatjuk a kamer\u00e1t. H\u00e1l\u00f3zat: \u00c1ll\u00edthatjuk a sebess\u00e9g\u00e9t \u00e9s a k\u00e9sleltet\u00e9s\u00e9t is kommunik\u00e1ci\u00f3s technol\u00f3gi\u00e1k szerint. Boot Option : Nemr\u00e9g jelent meg az Android emul\u00e1tor \u00e1llapot\u00e1r\u00f3l val\u00f3 pillanatk\u00e9p elment\u00e9s\u00e9nek lehet\u0151s\u00e9ge. Ez azt takarja, hogy a virtu\u00e1lis oper\u00e1ci\u00f3s rendszer csak felf\u00fcggeszt\u00e9sre ker\u00fcl az emul\u00e1tor bez\u00e1r\u00e1skor (p\u00e9ld\u00e1ul a megnyitott alkalmaz\u00e1s is megmarad, a teljes \u00e1llapot\u00e1val), \u00e9s Quick boot esetben a teljes OS ind\u00edt\u00e1sa helyett m\u00e1sodperceken bel\u00fcl elindul az emul\u00e1lt rendszer. Cold Boot esetben minden alkalommal le\u00e1ll\u00edtja \u00e9s \u00fajra ind\u00edtja a virt\u00e1lis eszk\u00f6z teljes oper\u00e1ci\u00f3s rendszer\u00e9t. Mem\u00f3ria \u00e9s t\u00e1rhely: RAM: Ha kev\u00e9s a rendszermem\u00f3ri\u00e1nk, nem \u00e9rdemes 768 MB-n\u00e1l t\u00f6bbet adni, mert k\u00f6nnyen futhatunk probl\u00e9m\u00e1kba. Ha az emul\u00e1tor lefagy, vagy az eg\u00e9sz OS meg\u00e1ll m\u0171k\u00f6d\u00e9s k\u00f6zben, akkor \u00e1ll\u00edtsuk alacsonyabbra ezt az \u00e9rt\u00e9ket. 8 GB vagy t\u00f6bb rendszermem\u00f3ria mellett nyugodtan \u00e1ll\u00edthatjuk az emul\u00e1tor mem\u00f3ri\u00e1j\u00e1t 1024, 1536, vagy 2048 MB-ra. VM heap: az alkalmaz\u00e1sok virtu\u00e1lis g\u00e9p\u00e9nek sz\u00f3l, maradhat az alap\u00e9rt\u00e9k. Tudni kell, hogy k\u00e9sz\u00fcl\u00e9kek eset\u00e9ben gy\u00e1rt\u00f3nk\u00e9nt v\u00e1ltozik. Bels\u0151 flash mem\u00f3ria \u00e9s SD k\u00e1rtya m\u00e9rete, alapvet\u0151en j\u00f3k az alap\u00e9rtelmezett be\u00e1ll\u00edt\u00e1sai. Ha mindent rendben tal\u00e1l az ablak, akkor Finish ! Az Android Virtual Device Manager-ben megjelent az im\u00e9nt l\u00e9trehozott eszk\u00f6z\u00fcnk. Itt lehet\u0151s\u00e9g van a kor\u00e1bban megadott param\u00e9terek szerkeszt\u00e9s\u00e9re, a \"k\u00e9sz\u00fcl\u00e9kr\u0151l\" a felhaszn\u00e1l\u00f3i adatok t\u00f6rl\u00e9s\u00e9re ( Wipe Data - Teljes vissza\u00e1ll\u00edt\u00e1s), illetve az emul\u00e1tor p\u00e9ld\u00e1ny duplik\u00e1l\u00e1s\u00e1ra vagy t\u00f6rl\u00e9s\u00e9re. A Play gombbal ind\u00edtsuk el az \u00faj emul\u00e1tort! Az elind\u00edtott emul\u00e1toron pr\u00f3b\u00e1ljuk ki az API Demos \u00e9s Dev Tools alkalmaz\u00e1sokat! Megjegyz\u00e9s A gy\u00e1ri emul\u00e1toron k\u00edv\u00fcl t\u00f6bb alternat\u00edva is l\u00e9tezik, mint pl. a Genymotion vagy a BigNox , viszont a Google f\u00e9le emul\u00e1tor a legelterjedtebb, \u00edgy amennyiben ezzel nem jelentkeznek probl\u00e9m\u00e1ink, maradjunk enn\u00e9l. Tesztel\u00e9s c\u00e9lj\u00e1b\u00f3l nagyon j\u00f3l haszn\u00e1lhat\u00f3 az emul\u00e1tor, amely az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 plusz funkci\u00f3kat is adja. Lehet\u0151s\u00e9g van t\u00f6bbek k\u00f6z\u00f6tt egyedi hely be\u00e1ll\u00edt\u00e1s\u00e1ra, bej\u00f6v\u0151 h\u00edv\u00e1s szimul\u00e1l\u00e1s\u00e1ra, stb. A panelt a fut\u00f3 emul\u00e1tor jobb oldal\u00e1n tal\u00e1lhat\u00f3 vez\u00e9rl\u0151 gombok k\u00f6z\u00fcl a ... gombbal lehet megnyitni:","title":"AVD"},{"location":"laborok/01-android-hello-world/#fejlesztoi-kornyezet","text":"Android fejleszt\u00e9sre a labor sor\u00e1n a JetBrains IntelliJ alapjain nyugv\u00f3 Android Studio-t fogjuk haszn\u00e1lni. A Studio-val ismerked\u0151k sz\u00e1m\u00e1ra hasznos funkci\u00f3 a Tip of the day , \u00e9rdemes egyb\u0151l kipr\u00f3b\u00e1lni, megn\u00e9zni az adott funkci\u00f3t. Indul\u00e1skor alap\u00e9rtelmezetten a legut\u00f3bbi projekt ny\u00edlik meg, ha nincs ilyen, vagy ha minden projekt\u00fcnket bez\u00e1rtuk, akkor a nyit\u00f3 k\u00e9perny\u0151. (A legut\u00f3bbi projekt \u00fajranyit\u00e1s\u00e1t a Settings -> Appeareance & Behavior -> System Settings -> Reopen last project on startup opci\u00f3val ki is kapcsolhatjuk.)","title":"Fejleszt\u0151i k\u00f6rnyezet"},{"location":"laborok/01-android-hello-world/#hello-world","text":"A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel k\u00e9sz\u00edtsenek egy egyszer\u0171 Hello World alkalmaz\u00e1st, a var\u00e1zsl\u00f3 n\u00e9zeten az Include Kotlin support legyen bepip\u00e1lva! FILE PATH A projekt a repository-ban l\u00e9v\u0151 HelloWorld k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n!","title":"Hello World"},{"location":"laborok/01-android-hello-world/#android-studio","text":"Ez a r\u00e9sz azoknak sz\u00f3l, akik kor\u00e1bban m\u00e1r haszn\u00e1lt\u00e1k az Eclipse nev\u0171 IDE-t, \u00e9s szeretn\u00e9k megismerni a k\u00fcl\u00f6nbs\u00e9geket az Android Studio-hoz k\u00e9pest. Import r\u00e9gi projektekb\u0151l: Android Studioban lehets\u00e9ges a projekt import\u00e1l\u00e1sa r\u00e9gebbi verzi\u00f3j\u00fa projektekb\u0151l \u00e9s a r\u00e9gi Eclipse projektekb\u0151l is. Projektstrukt\u00fara: Az Android Studio Gradle-lel ford\u00edt, \u00e9s m\u00e1s fel\u00e9p\u00edt\u00e9st haszn\u00e1l. Projekten bel\u00fcl: .idea : IDE f\u00e1jlok app : forr\u00e1s build : ford\u00edtott \u00e1llom\u00e1nyok libs : libraryk src : forr\u00e1sk\u00f3d, azon bel\u00fcl is k\u00fcl\u00f6n projekt a tesztnek, \u00e9s azon bel\u00fcl pedig res k\u00f6nyvt\u00e1r, illetve java . Ut\u00f3bbin bel\u00fcl m\u00e1r a csomagok vannak. gradle : Gradle f\u00e1jlok Hasznos funkci\u00f3k: IntelliSense, fejlett refaktor\u00e1l\u00e1s t\u00e1mogat\u00e1s Ha egy sorban sz\u00ednre, vagy k\u00e9pi er\u0151forr\u00e1sra hivatkozunk, a sor elej\u00e9re kitesz egy miniat\u0171r v\u00e1ltozatot. Ha k\u00f6zvetve hivatkozott er\u0151forr\u00e1st (ak\u00e1r resources.get... , ak\u00e1r R... ) adunk meg, \u00f6sszecsukja a hivatkoz\u00e1st \u00e9s a t\u00e9nyleges \u00e9rt\u00e9ket mutatja. Ha r\u00e1vissz\u00fck az egeret felfedi, ha kattintunk kibontja a hivatkoz\u00e1st. N\u00e9vtelen bels\u0151 oszt\u00e1lyokkal is hasonl\u00f3t tud, jav\u00edtva a k\u00f3d olvashat\u00f3s\u00e1g\u00e1t. K\u00f3dkieg\u00e9sz\u00edt\u00e9sn\u00e9l szabad a keres\u0151, a sz\u00f3t\u00f6red\u00e9ket keresi, nem pedig a sz\u00f3val kezd\u0151d\u0151 lehet\u0151s\u00e9geket (l\u00e1sd k\u00e9pen) V\u00e1ltoz\u00f3n\u00e9v aj\u00e1nl\u00e1s: amikor v\u00e1ltoz\u00f3n\u00e9vre van sz\u00fcks\u00e9g\u00fcnk, nyomjunk Ctrl+Space -t. Ha adottak a k\u00f6r\u00fclm\u00e9nyek, a Studio eg\u00e9sz j\u00f3 neveket tud felaj\u00e1nlani. Szigor\u00fa lint. A Studio megengedi a warningot. Ez\u00e9rt szigor\u00fabb a lint, t\u00f6bb mindenre figyelmeztet (olyan apr\u00f3s\u00e1gra is, hogy egy View egyik oldal\u00e1n van padding, a m\u00e1sikon nincs) Layout szerkeszt\u00e9s. A grafikus layout \u00e9p\u00edt\u00e9s lehets\u00e9ges. CTRL-t lenyomva navig\u00e1lhatunk a k\u00f3dban, pl. oszt\u00e1lyra, met\u00f3dush\u00edv\u00e1sra kattintva. Ezt a navig\u00e1ci\u00f3t (\u00e9s az egyszer\u0171 m\u00e1sik oszt\u00e1lyba kattint\u00e1st is) r\u00f6gz\u00edti, \u00e9s a historyban el\u0151re-h\u00e1tra gombokkal lehet l\u00e9pkedni. Ha van az eger\u00fcnk\u00f6n/billenty\u0171zet\u00fcnk\u00f6n ilyen gomb, \u00e9s netes b\u00f6ng\u00e9sz\u00e9s k\u00f6zben akt\u00edvan haszn\u00e1ljuk, ezt a funkci\u00f3t nagyon hasznosnak fogjuk tal\u00e1lni. Sz\u00edn ikonja a sor elej\u00e9n; kiemelve jobb oldalon, hogy melyik n\u00e9zeten vagyunk; szabadszavas kieg\u00e9sz\u00edt\u00e9s; a \"Hello world\" igaz\u00e1b\u00f3l @string/very_very_very_long_hello_world .","title":"Android Studio"},{"location":"laborok/01-android-hello-world/#billentyukombinaciok","text":"CTRL + ALT + L : K\u00f3dform\u00e1z\u00e1s CTRL + SPACE : K\u00f3dkieg\u00e9sz\u00edt\u00e9s SHIFT + F6 \u00c1tnevez\u00e9s (Mindenhol) F2 : A k\u00f6vetkez\u0151 error-ra ugrik. Ha nincs error, akkor warningra. CTRL + Z illetve CTRL + SHIFT + Z : Visszavon\u00e1s \u00e9s M\u00e9gis CTRL + P : Param\u00e9terek mutat\u00e1sa ALT + INSERT : Met\u00f3dus gener\u00e1l\u00e1sa CTRL + O : Met\u00f3dus fel\u00fcldefini\u00e1l\u00e1sa CTRL + F9 : Ford\u00edt\u00e1s SHIFT + F10 : Ford\u00edt\u00e1s \u00e9s futtat\u00e1s SHIFT SHIFT : Keres\u00e9s mindenhol CTRL + N : Keres\u00e9s oszt\u00e1lyokban CTRL + SHIFT + N : Keres\u00e9s f\u00e1jlokban CTRL + ALT + SHIFT + N : Keres\u00e9s szimb\u00f3lumokban (p\u00e9ld\u00e1ul f\u00fcggv\u00e9nyek, property-k) CTRL + SHIFT + A : Keres\u00e9s a be\u00e1ll\u00edt\u00e1sokban, kiadhat\u00f3 parancsokban.","title":"Billenty\u0171kombin\u00e1ci\u00f3k"},{"location":"laborok/01-android-hello-world/#eszkozok-szerkesztok","text":"A View men\u00fc Tool Windows men\u00fcpontj\u00e1ban lehet\u0151s\u00e9g van k\u00fcl\u00f6nb\u00f6z\u0151 ablakok ki- \u00e9s bekapcsol\u00e1s\u00e1ra. Laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel tekints\u00e9k \u00e1t az al\u00e1bbi eszk\u00f6z\u00f6ket! Project Structure TODO Logcat Terminal Event Log Gradle Lehet\u0151s\u00e9g van felosztani a szerkeszt\u0151ablakot, ehhez kattinsunk egy megnyitott f\u00e1jl tabf\u00fcl\u00e9re jobb gombbal, Split Vertically/Horizontally !","title":"Eszk\u00f6z\u00f6k, szerkeszt\u0151k"},{"location":"laborok/01-android-hello-world/#hasznos-beallitasok","text":"A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel \u00e1ll\u00edts\u00e1k be a k\u00f6vetkez\u0151 hasznos funkci\u00f3kat: kis- nagybet\u0171 \u00e9rz\u00e9kenys\u00e9g kikapcsol\u00e1sa a k\u00f3dkieg\u00e9sz\u00edt\u0151ben (settingsben keres\u00e9s: sensitive ) \"laptop m\u00f3d\" ki- \u00e9s bekapcsol\u00e1sa ( File -> Power Save Mode ) sorsz\u00e1moz\u00e1s bekapcsol\u00e1sa (k\u00f3d melletti r\u00e9szen bal oldalt: jobb eg\u00e9rgomb, Show Line Numbers )","title":"Hasznos be\u00e1ll\u00edt\u00e1sok"},{"location":"laborok/01-android-hello-world/#generalhato-elemek","text":"A Studio sok sablont tartalmaz, r\u00f6viden tekints\u00e9k \u00e1t a lehet\u0151s\u00e9geket: Projektf\u00e1ban, projektre jobb gombbal kattintva -> new -> module Projektf\u00e1ban, modulon bel\u00fcl, \"java\"-ra kattintva jobb gombbal -> new Forr\u00e1sk\u00f3dban ALT + INSERT billenty\u0171kombin\u00e1ci\u00f3ra","title":"Gener\u00e1lhat\u00f3 elemek"},{"location":"laborok/01-android-hello-world/#android-profiler","text":"A k\u00e9sz\u00fcl\u00e9k er\u0151forr\u00e1shaszn\u00e1lata monitorozhat\u00f3 ezen a fel\u00fcleten, amelyet az eml\u00edtett View -> Tool Windows -b\u00f3l \u00e9rhet\u00fcnk el. P\u00e9ld\u00e1ul r\u00e9szletes inform\u00e1ci\u00f3t kaphatunk a h\u00e1l\u00f3zati forgalomr\u00f3l:","title":"Android Profiler"},{"location":"laborok/01-android-hello-world/#database-inspector","text":"A k\u00e9sz\u00fcl\u00e9ken debuggolt alkalmaz\u00e1sunknak az adatb\u00e1zis\u00e1t is meg tudjuk tekinteni.","title":"Database Inspector"},{"location":"laborok/01-android-hello-world/#device-file-explorer","text":"A k\u00e9sz\u00fcl\u00e9ken l\u00e9v\u0151 f\u00e1jlrendszert is b\u00f6ng\u00e9szhetj\u00fck .","title":"Device File Explorer"},{"location":"laborok/01-android-hello-world/#feladatok-10-x-05-pont","text":"Az \u00faj alkalmaz\u00e1st futtass\u00e1k emul\u00e1toron (akinek saj\u00e1t k\u00e9sz\u00fcl\u00e9ke van, az is pr\u00f3b\u00e1lja ki)! Helyezzenek breakpointot a k\u00f3dba, \u00e9s debug m\u00f3dban ind\u00edts\u00e1k az alkalmaz\u00e1st! (\u00c9rdemes megyfigyelni, hogy most m\u00e1sik Gradle Task fut a k\u00e9perny\u0151 alj\u00e1n.) Ind\u00edtsanak h\u00edv\u00e1st \u00e9s k\u00fcldjenek SMS-t az emul\u00e1torra! Mit tapasztalnak? Ind\u00edtsanak h\u00edv\u00e1st \u00e9s k\u00fcldjenek SMS-t az emul\u00e1torr\u00f3l! Mit tapasztalnak? Tekintse \u00e1t az Android Profiler n\u00e9zet funkci\u00f3it a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel! V\u00e1ltoztassa meg a k\u00e9sz\u00fcl\u00e9k tart\u00f3zkod\u00e1si hely\u00e9t az emul\u00e1tor megfelel\u0151 panelj\u00e9nek seg\u00edts\u00e9g\u00e9vel! Vizsg\u00e1lja meg az elind\u00edtott HelloWorld projekt nyitott sz\u00e1lait, mem\u00f3riafoglal\u00e1s\u00e1t! Vizsg\u00e1lja meg a Logcat panel tartalm\u00e1t! Vizsg\u00e1lja meg az Analyze -> Inspect code eredm\u00e9ny\u00e9t! Keresse ki a l\u00e9trehozott HelloWorld projekt mapp\u00e1j\u00e1t \u00e9s a build k\u00f6nyvt\u00e1ron bel\u00fcl vizsg\u00e1lja meg az .apk \u00e1llom\u00e1ny tartalm\u00e1t! Hol tal\u00e1lhat\u00f3 a leford\u00edtott k\u00f3d? BEADAND\u00d3 A labor teljes\u00edt\u00e9s\u00e9hez a fenti feladatokat kell v\u00e9grehajtani \u00e9s az eredm\u00e9nyeket dokument\u00e1lni. Ezt minden egyes feladatn\u00e1l egy k\u00e9perny\u0151k\u00e9ppel \u00e9s r\u00f6vid, n\u00e9h\u00e1ny mondatos magyar\u00e1zattal kell megtenni. A jegyz\u0151k\u00f6nyvet a repository-ban l\u00e9v\u0151 README.md f\u00e1jlban kell elk\u00e9sz\u00edteni. A dokument\u00e1ci\u00f3nak a k\u00e9pekkel egy\u00fctt helyesen kell megjelenni\u00fck a GitHub webes fel\u00fclet\u00e9n is! Ezt ellen\u0151rizd a bead\u00e1s sor\u00e1n: nyisd meg a repository-d webes fel\u00fclet\u00e9t, v\u00e1ltsd \u00e1t a megfelel\u0151 \u00e1gra, \u00e9s a GitHub automatikusan renderelni fogja a README.md f\u00e1jlt a k\u00e9pekkel egy\u00fctt.","title":"Feladatok (10 x 0.5 pont)"},{"location":"laborok/02-android-ui/","text":"Labor 02 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9s \u00b6 Bevezet\u0151 \u00b6 A labor sor\u00e1n egy t\u00f6megk\u00f6zleked\u00e9si v\u00e1llalat sz\u00e1m\u00e1ra meg\u00e1lmodott alkalmaz\u00e1s v\u00e1z\u00e1t k\u00e9sz\u00edtj\u00fck el. Az alkalmaz\u00e1ssal a felhaszn\u00e1l\u00f3k k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171vekre v\u00e1s\u00e1rolhatnak majd b\u00e9rleteket. Az \u00fczleti logik\u00e1t (az authentik\u00e1ci\u00f3t, a bevitt adatok ellen\u0151rz\u00e9s\u00e9t, a fizet\u00e9s lebonyol\u00edt\u00e1s\u00e1t) egyel\u0151re csak szimul\u00e1lni fogjuk, a labor f\u00f3kusza a fel\u00fcletek \u00e9s a k\u00f6zt\u00fck val\u00f3 navig\u00e1ci\u00f3 elk\u00e9sz\u00edt\u00e9se lesz. IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151. El\u0151k\u00e9sz\u00fcletek \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Android, Java, Kotlin Az Android hagyom\u00e1nyosan Java nyelven volt fejleszthet\u0151, azonban az ut\u00f3bbi \u00e9vekben a Google \u00e1t\u00e1llt a Kotlin nyelvre. Ez egy sokkal modernebb nyelv, mint a Java, sok olyan nyelvi elemet ad, amit k\u00e9nyelmes haszn\u00e1lni, valamint \u00faj nyelvi szab\u00e1lyokat, amikkel p\u00e9ld\u00e1ul elker\u00fclhet\u0151ek a Java nyelven gyakori NullPointerException jelleg\u0171 hib\u00e1k. M\u00e1sr\u00e9szr\u0151l viszont a nyelv sok mindenben t\u00e9r el a hagyom\u00e1nyosan C jelleg\u0171 szintaktik\u00e1t k\u00f6vet\u0151 nyelvekt\u0151l, amit majd l\u00e1tni is fogunk. A labor el\u0151tt \u00e9rdemes megismerkedni a nyelvvel, egyr\u00e9szt a fent l\u00e1that\u00f3 linken, m\u00e1sr\u00e9szt ezt az \u00f6sszefoglal\u00f3 cikket \u00e1tolvasva. Projekt l\u00e9trehoz\u00e1sa \u00b6 Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd: Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get. A projekt neve legyen PublicTransport , a kezd\u0151 package hu.bme.aut.android.publictransport , a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl a PublicTransport mappa. Nyelvnek v\u00e1lasszuk a Kotlin -t. A minimum API szint legyen API21: Android 5.0. Az instant app t\u00e1mogat\u00e1st, valamint a Use legacy android.support libraries pontot ne pip\u00e1ljuk be. A projekt l\u00e9trehoz\u00e1sakor, a ford\u00edt\u00f3 keretrendszernek rengeteg f\u00fcgg\u0151s\u00e9get kell let\u00f6ltenie. Am\u00edg ez nem t\u00f6rt\u00e9nt meg, addig a projektben neh\u00e9zkes navig\u00e1lni, hi\u00e1nyzik a k\u00f3dkieg\u00e9sz\u00edt\u00e9s, stb... \u00c9ppen ez\u00e9rt ezt tan\u00e1csos kiv\u00e1rni, azonban ez ak\u00e1r 5 percet is ig\u00e9nybe vehet az els\u0151 alkalommal! Az ablak alj\u00e1n l\u00e1that\u00f3 inform\u00e1ci\u00f3s s\u00e1vot kell figyelni. L\u00e1thatjuk, hogy l\u00e9trej\u00f6tt egy projekt, amiben van egy Activity, MainActivity n\u00e9ven, valamint egy hozz\u00e1 tartoz\u00f3 layout f\u00e1jl activity_main.xml n\u00e9ven. Nevezz\u00fck ezeket \u00e1t LoginActivity -re, illetve activity_login.xml -re. Ezt a jobb gomb > Refactor > Rename men\u00fcpontban lehet megtenni (vagy Shift+F6). Az \u00e1tnevez\u00e9sn\u00e9l tal\u00e1lhat\u00f3 egy Scope nev\u0171 be\u00e1ll\u00edt\u00e1s. Ezt \u00e1ll\u00edtsuk \u00fagy be, hogy csak a jelenlegi projekten bel\u00fcl nevezze \u00e1t a dolgokat (Project Files). \u00c9rdemes megfigyelni, hogy az \u00e1tnevez\u00e9s \"okos\". A layout f\u00e1jl \u00e1tnevez\u00e9se eset\u00e9n a LoginActivity-ben nem kell k\u00e9zzel \u00e1t\u00edrnunk a layout f\u00e1jl azonos\u00edt\u00f3j\u00e1t, mert ezt a rendszer megteszi. Ugyanez igaz a manifest f\u00e1jlra is. Splash k\u00e9perny\u0151 (0.5 pont) \u00b6 Az els\u0151 Activity-nk a nev\u00e9hez h\u00edven a felhaszn\u00e1l\u00f3 bejelentkez\u00e9s\u00e9\u00e9rt lesz felel\u0151s, azonban m\u00e9g miel\u0151tt ez megjelenik a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra, egy splash k\u00e9perny\u0151vel fogjuk \u00fcdv\u00f6z\u00f6lni. Ez egy eleg\u00e1ns megold\u00e1s arra, hogy az alkalmaz\u00e1s bet\u00f6lt\u00e9s\u00e9ig ne egy egysz\u00edn\u0171 k\u00e9perny\u0151 legyen a felhaszn\u00e1l\u00f3 el\u0151tt, hanem egy tetsz\u0151leges saj\u00e1t design. El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1shoz k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt , ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio-ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk, esetleg a mapp\u00e1n jobb klikk > Show in Explorer). Hozzunk l\u00e9tre egy \u00faj XML f\u00e1jlt a drawable mapp\u00e1ban splash_background.xml n\u00e9ven. Ez lesz a splash k\u00e9perny\u0151nk\u00f6n megjelen\u0151 grafika. A tartalma az al\u00e1bbi legyen: <?xml version=\"1.0\" encoding=\"utf-8\"?> <layer-list xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item> <bitmap android:gravity= \"fill_horizontal|clip_vertical\" android:src= \"@drawable/splash_image\" /> </item> </layer-list> Jelen esetben egyetlen k\u00e9pet tesz\u00fcnk ide, de tov\u00e1bbi item -ek felv\u00e9tel\u00e9vel komplexebb dolgokat is \u00f6ssze\u00e1ll\u00edthatn\u00e1nk itt. Tipikus megold\u00e1s p\u00e9ld\u00e1ul egy egysz\u00edn\u0171 h\u00e1tt\u00e9r be\u00e1ll\u00edt\u00e1sa, amin az alkalmaz\u00e1s ikonja l\u00e1tszik. Nyissuk meg a values/themes.xml f\u00e1jlt. Ez defini\u00e1lja az alkalmaz\u00e1sban haszn\u00e1lt k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e9m\u00e1kat. A splash k\u00e9perny\u0151h\u00f6z egy \u00faj t\u00e9m\u00e1t fogunk l\u00e9trehozni, amelyben az el\u0151bb l\u00e9trehozott drawable-t \u00e1ll\u00edtjuk be az alkalmaz\u00e1sablakunk h\u00e1tter\u00e9nek (mivel ez l\u00e1tszik val\u00f3j\u00e1ban, am\u00edg nem t\u00f6lt\u00f6tt be a UI t\u00f6bbi r\u00e9sze). Ezt \u00edgy tehetj\u00fck meg: <style name= \"SplashTheme\" parent= \"Theme.AppCompat.NoActionBar\" > <item name= \"android:windowBackground\" > @drawable/splash_background </item> </style> A fenti t\u00e9m\u00e1t illessz\u00fck be a night min\u0151s\u00edt\u0151vel ell\u00e1tott themes.xml f\u00e1jlba is. A t\u00e9ma haszn\u00e1lat\u00e1hoz az alkalmaz\u00e1sunk manifest f\u00e1jlj\u00e1t ( AndroidManifest.xml ) kell m\u00f3dos\u00edtanunk. Ezt megnyitva l\u00e1thatjuk, hogy jelenleg a teljes alkalmaz\u00e1s az AppTheme nev\u0171 t\u00e9m\u00e1t haszn\u00e1lja. <application ... android:theme= \"@style/Theme.PublicTransport\" > Mi ezt nem akarjuk megv\u00e1ltoztatni, hanem csak a LoginActivity -nek akarunk egy \u00faj t\u00e9m\u00e1t adni. Ezt \u00edgy tehetj\u00fck meg: <activity android:name= \".LoginActivity\" android:theme= \"@style/SplashTheme\" > ... </activity> Mivel a bet\u00f6lt\u00e9s ut\u00e1n m\u00e1r nem lesz sz\u00fcks\u00e9g\u00fcnk erre a h\u00e1tt\u00e9rre, a LoginActivity.kt f\u00e1jlban a bet\u00f6lt\u00e9s befejezt\u00e9vel vissza\u00e1ll\u00edthatjuk az eredeti t\u00e9m\u00e1t, amely feh\u00e9r h\u00e1tt\u00e9rrel rendelkezik. Ezt az onCreate f\u00fcggv\u00e9ny elej\u00e9n tegy\u00fck meg, m\u00e9g a super h\u00edv\u00e1s el\u0151tt: override fun onCreate ( savedInstanceState : Bundle?) { setTheme ( R . style . Theme_PublicTransport ) ... } Most m\u00e1r futtathatjuk az alkalmaz\u00e1st, \u00e9s bet\u00f6lt\u00e9s k\u00f6zben l\u00e1tnunk kell a berakott k\u00e9pet. A splash k\u00e9perny\u0151 \u00e1ltal\u00e1ban akkor hasznos, ha az alkalmaz\u00e1s inicializ\u00e1l\u00e1sa sok\u00e1ig tart. Mivel a mostani alkalmaz\u00e1sunk m\u00e9g nagyon gyorsan indul el, szimul\u00e1lhatunk egy kis t\u00f6lt\u00e9si id\u0151t az al\u00e1bbi m\u00f3don: override fun onCreate ( savedInstanceState : Bundle?) { try { Thread . sleep ( 1000 ) } catch ( e : InterruptedException ) { e . printStackTrace () } setTheme ( R . style . Theme_PublicTransport ); ... } BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a splash k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. Login k\u00e9perny\u0151 (0.5 pont) \u00b6 Most m\u00e1r elk\u00e9sz\u00edthetj\u00fck a login k\u00e9perny\u0151t. A felhaszn\u00e1l\u00f3t\u00f3l egy email c\u00edmet, illetve egy sz\u00e1mokb\u00f3l \u00e1ll\u00f3 jelsz\u00f3t fogunk bek\u00e9rni, \u00e9s egyel\u0151re csak azt fogjuk ellen\u0151rizni, hogy be\u00edrt-e valamit a mez\u0151kbe. Az activity_login.xml f\u00e1jlba ker\u00fclj\u00f6n az al\u00e1bbi k\u00f3d. Alap\u00e9rtelmezetten egy grafikus szerkeszt\u0151 ny\u00edlik meg, ezt \u00e1t kell \u00e1ll\u00edtani a sz\u00f6veges szerkeszt\u0151re. Ezt az Android Studio verzi\u00f3j\u00e1t\u00f3l f\u00fcgg\u0151en a jobb fels\u0151, vagy a jobb als\u00f3 sarokban lehet megtenni: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_margin= \"16dp\" android:orientation= \"vertical\" tools:context= \".LoginActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"16dp\" android:text= \"Please enter your credentials\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Email\" /> <EditText android:id= \"@+id/etEmailAddress\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Password\" /> <EditText android:id= \"@+id/etPassword\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/btnLogin\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"Login\" /> </LinearLayout> A haszn\u00e1lt elrendez\u00e9s teljesen line\u00e1ris, csak egym\u00e1s al\u00e1 helyez\u00fcnk el benne k\u00fcl\u00f6nb\u00f6z\u0151 View-kat egy LinearLayout -ban. Az EditText -eknek \u00e9s a Button -nek adtunk ID-kat, hogy k\u00e9s\u0151bb k\u00f3db\u00f3l el\u00e9rj\u00fck \u0151ket. Az alkalmaz\u00e1st \u00fajra futtatva megjelenik a layout, azonban most m\u00e9g b\u00e1rmilyen sz\u00f6veget be tudnunk \u00edrni a k\u00e9t beviteli mez\u0151be. Az EditText oszt\u00e1ly lehet\u0151s\u00e9get ad sz\u00e1mos speci\u00e1lis input kezel\u00e9s\u00e9re, XML k\u00f3dban az inputType attrib\u00fatum megad\u00e1s\u00e1val. Jelen esetben az email c\u00edmet kezel\u0151 EditText -hez a textEmailAddress \u00e9rt\u00e9ket, a m\u00e1sikhoz pedig a numberPassword \u00e9rt\u00e9ket haszn\u00e1lhatjuk. <EditText android:id= \"@+id/etEmailAddress\" ... android:inputType= \"textEmailAddress\" /> <EditText android:id= \"@+id/etPassword\" ... android:inputType= \"numberPassword\" /> Ha most kipr\u00f3b\u00e1ljuk az alkalmaz\u00e1st, m\u00e1r l\u00e1tjuk a be\u00e1ll\u00edt\u00e1sok hat\u00e1s\u00e1t: A legt\u00f6bb billenty\u0171zettel az els\u0151 mez\u0151h\u00f6z most m\u00e1r megjelenik a @ szimb\u00f3lum, a m\u00e1sodikn\u00e1l pedig csak sz\u00e1mokat \u00edrhatunk be. Mivel a m\u00e1sodik mez\u0151t jelsz\u00f3 t\u00edpus\u00fanak \u00e1ll\u00edtottuk be, a karakterek a megszokott m\u00f3don elrejt\u00e9sre ker\u00fclnek a be\u00edr\u00e1suk ut\u00e1n. M\u00e9g egy dolgunk van ezen a k\u00e9perny\u0151n, az input ellen\u0151rz\u00e9se. Ezt a LoginActivity.kt f\u00e1jlban tehetj\u00fck meg. A layout-unkat alkot\u00f3 View -kat az onCreate f\u00fcggv\u00e9nyben l\u00e9v\u0151 setContentView h\u00edv\u00e1s ut\u00e1n tudjuk el\u0151sz\u00f6r el\u00e9rni. Ezt csin\u00e1lhatn\u00e1nk a klasszikus m\u00f3don, azaz p\u00e9ld\u00e1nyos\u00edtunk egy gombot, a findViewById met\u00f3dussal referenci\u00e1t szerz\u00fcnk a fel\u00fcleten l\u00e9v\u0151 vez\u00e9rl\u0151re, \u00e9s a p\u00e9ld\u00e1nyon be\u00e1ll\u00edtjuk az esem\u00e9nykezel\u0151t: val btnLogin = findViewById < Button > ( R . id . btnLogin ) btnLogin . setOnClickListener { ... } Azonban a findViewById h\u00edv\u00e1snak sz\u00e1mos probl\u00e9m\u00e1ja van . Ezekr\u0151l b\u0151vebben az el\u0151ad\u00e1son lesz sz\u00f3 (pl.: Null safety , type safety ). Ez\u00e9rt ehelyett \"n\u00e9zetk\u00f6t\u00e9st\", azaz ViewBinding -ot fogunk haszn\u00e1lni. A ViewBinding a k\u00f3d\u00edr\u00e1st k\u00f6nny\u00edti meg sz\u00e1munkra. Amennyiben ezt haszn\u00e1ljuk, az automatikusan gener\u00e1l\u00f3d\u00f3 binding oszt\u00e1lyokon kereszt\u00fcl k\u00f6zvetlen referenci\u00e1n kereszt\u00fcl tudunk el\u00e9rni minden ID -val rendelkez\u0151 er\u0151forr\u00e1st az XML f\u00e1jljainkban. El\u0151sz\u00f6r is be kell kapcsolnunk a modulunkra a ViewBinding -ot. Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android tagen bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u00e9st (Ezek ut\u00e1n kattintsunk jobb fel\u00fcl a Sync Now gombra.): android { ... buildFeatures { viewBinding true } } Ezzel ut\u00e1n m\u00e1r a teljes modulunkban automatikusan el\u00e9rhet\u0151v\u00e9 v\u00e1lt a ViewBinding . ViewBinding Ebben az esetben a modul minden egyes XML layout f\u00e1jlj\u00e1hoz gener\u00e1l\u00f3dik egy \u00fagynevezett binding oszt\u00e1ly. Minden binding oszt\u00e1ly tartalmaz referenci\u00e1t az adott XML layout er\u0151forr\u00e1s gy\u00f6k\u00e9r elem\u00e9re \u00e9s az \u00f6sszes ID-val rendelkez\u0151 view-ra. A gener\u00e1lt oszt\u00e1ly neve \u00fagy \u00e1ll el\u0151, hogy az XML layout nev\u00e9t Pascal form\u00e1tumba alak\u00edtja a rendszer \u00e9s a v\u00e9g\u00e9re illeszti, hogy Binding . Azaz p\u00e9ld\u00e1ul a result_profile.xml er\u0151forr\u00e1sf\u00e1jlb\u00f3l az al\u00e1bbi binding oszt\u00e1ly gener\u00e1l\u00f3dik: ResultProfileBinding . <LinearLayout ... > <TextView android:id= \"@+id/name\" /> <ImageView android:cropToPadding= \"true\" /> <Button android:id= \"@+id/button\" android:background= \"@drawable/rounded_button\" /> </LinearLayout> A gener\u00e1lt oszt\u00e1lynak k\u00e9t mez\u0151je van. A name id-val rendelkez\u0151 TextView \u00e9s a button id-j\u00fa Button . A layout-ban szerepl\u0151 ImageView-nak nincs id-ja, ez\u00e9rt nem szerepel a binding oszt\u00e1lyban. Minden gener\u00e1lt oszt\u00e1ly tartalmaz egy getRoot() met\u00f3dust, amely direkt referenciak\u00e9nt szolg\u00e1l a layout gy\u00f6ker\u00e9re. A p\u00e9ld\u00e1ban a getRoot() met\u00f3dus a LinearLayout -tal t\u00e9r vissza. A ViewBinding haszn\u00e1lat\u00e1hoz teh\u00e1t az Activity -nkben csak p\u00e9ld\u00e1nyos\u00edtanunk kell a binding objektumot, amin kereszt\u00fcl majd el\u00e9rhetj\u00fck az er\u0151forr\u00e1sainkat. A binding p\u00e9ld\u00e1ny m\u0171k\u00f6d\u00e9s\u00e9hez h\u00e1rom dolgot kell tenn\u00fcnk: A gener\u00e1lt binding oszt\u00e1ly statikus inflate f\u00fcggv\u00e9ny\u00e9vel p\u00e9ld\u00e1nyos\u00edtjuk a binding oszt\u00e1lyunkat az Activity -hez. Referenci\u00e1t szerz\u00fcnk a gy\u00f6k\u00e9relemre. Ezt k\u00e9tf\u00e9lek\u00e9ppen is megtehetj\u00fck. Vagy megh\u00edvjuk a getRoot() met\u00f3dust, vagy a Kotlin property syntax-ot haszn\u00e1lva. Ezt a gy\u00f6k\u00e9relemet odaadjuk a setContentView() f\u00fcggv\u00e9nynek, hogy ez legyen az akt\u00edv view a k\u00e9perny\u0151n: private lateinit var binding : ActivityLoginBinding override fun onCreate ( savedInstanceState : Bundle?) { try { Thread . sleep ( 1000 ) } catch ( e : InterruptedException ) { e . printStackTrace () } setTheme ( R . style . Theme_PublicTransport ) super . onCreate ( savedInstanceState ) binding = ActivityLoginBinding . inflate ( layoutInflater ) setContentView ( binding . root ) } lateinit A lateinit kulcssz\u00f3val megjel\u00f6lt property-ket a ford\u00edt\u00f3 megengedi inicializ\u00e1latlanul hagyni az oszt\u00e1ly konstruktor\u00e1nak lefut\u00e1sa ut\u00e1nig, an\u00e9lk\u00fcl, hogy nullable-k\u00e9nt k\u00e9ne azokat megjel\u00f6ln\u00fcnk (ami k\u00e9s\u0151bb k\u00e9nyelmetlenn\u00e9 tenn\u00e9 a haszn\u00e1latukat, mert mindig ellen\u0151rizn\u00fcnk k\u00e9ne, hogy null -e az \u00e9rt\u00e9k\u00fck). Ez praktikus olyan esetekben, amikor egy oszt\u00e1ly inicializ\u00e1l\u00e1sa nem a konstruktor\u00e1ban t\u00f6rt\u00e9nik (p\u00e9ld\u00e1ul ahogy az Activity -k eset\u00e9ben az onCreate -ben), mert k\u00e9s\u0151bb az esetleges null eset lekezel\u00e9se n\u00e9lk\u00fcl haszn\u00e1lhatjuk majd a property-t. A lateinit haszn\u00e1lat\u00e1val \u00e1tv\u00e1llaljuk a felel\u0151ss\u00e9get a ford\u00edt\u00f3t\u00f3l, hogy a property-t az els\u0151 haszn\u00e1lata el\u0151tt inicializ\u00e1lni fogjuk - ellenkez\u0151 esetben kiv\u00e9telt kapunk. Ezek ut\u00e1n m\u00e1r be is \u00e1ll\u00edthatjuk a gombunk esem\u00e9nykezel\u0151it: binding . btnLogin . setOnClickListener { if ( binding . etEmailAddress . text . toString (). isEmpty ()) { binding . etEmailAddress . requestFocus () binding . etEmailAddress . error = \"Please enter your email address\" } else if ( binding . etPassword . text . toString (). isEmpty ()) { binding . etPassword . requestFocus () binding . etPassword . error = \"Please enter your password\" } else { // TODO login } } Amennyiben valamelyik EditText \u00fcres volt, a requestFocus f\u00fcggv\u00e9ny megh\u00edv\u00e1s\u00e1val akt\u00edvv\u00e1 tessz\u00fck, majd az error property be\u00e1ll\u00edt\u00e1s\u00e1val ki\u00edrunk r\u00e1 egy hiba\u00fczenetet. Ez egy k\u00e9nyelmes, be\u00e9p\u00edtett megold\u00e1s input hib\u00e1k jelz\u00e9s\u00e9re. \u00cdgy nem kell p\u00e9ld\u00e1ul egy k\u00fcl\u00f6n TextView -t haszn\u00e1lnunk erre a c\u00e9lra, \u00e9s abba bele\u00edrni a fell\u00e9p\u0151 hib\u00e1t. Ezt m\u00e1r ak\u00e1r ki is pr\u00f3b\u00e1lhatjuk, b\u00e1r helyes adatok megad\u00e1sa eset\u00e9n m\u00e9g nem t\u00f6rt\u00e9nik semmi. setOnClickListener A setOnClickListener f\u00fcggv\u00e9ny val\u00f3j\u00e1ban olyan objektumot v\u00e1r param\u00e9terk\u00e9nt, ami megval\u00f3s\u00edtja a View.OnClickListener interf\u00e9szt. Ezt Java-ban anonim objektumokkal szok\u00e1s megoldani, amit meg lehet tenni Kotlin nyelven is.Ehelyett azonban \u00e9rdemesebb kihaszn\u00e1lni, hogy a Kotlin rendelkezik igazi f\u00fcggv\u00e9ny t\u00edpusokkal, \u00edgy megadhat\u00f3 egy olyan lambda kifejez\u00e9s , amelynek a fejl\u00e9ce megegyezik az elv\u00e1rt interf\u00e9sz egyetlen f\u00fcggv\u00e9ny\u00e9nek fejl\u00e9c\u00e9vel. Ez alapj\u00e1n pedig a SAM conversion nev\u0171 nyelvi funkci\u00f3 a h\u00e1tt\u00e9rben a lambda alapj\u00e1n l\u00e9trehozza a megfelel\u0151 View.OnClickListener p\u00e9ld\u00e1nyt. BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a login k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod az e-mail mez\u0151be beg\u00e9pelve . A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. Lehet\u0151s\u00e9gek list\u00e1ja (1 pont) \u00b6 A k\u00f6vetkez\u0151 k\u00e9perny\u0151n a felhaszn\u00e1l\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171t\u00edpusok k\u00f6z\u00fcl v\u00e1laszhat. Egyel\u0151re h\u00e1rom szolg\u00e1ltat\u00e1s m\u0171k\u00f6dik a fikt\u00edv v\u00e1llalatunkban: biciklik, buszok illetve vonatok. Hozzunk ehhez l\u00e9tre egy \u00faj Activity-t (a package-\u00fcnk\u00f6n jobb klikk > New > Activity > Empty Activity), nevezz\u00fck el ListActivity -nek. Most, hogy ez m\u00e1r l\u00e9tezik, menj\u00fcnk vissza a LoginActivity k\u00f3dj\u00e1ban l\u00e9v\u0151 TODO-hoz, \u00e9s ind\u00edtsuk ott el ezt az \u00faj Activity-t: binding . btnLogin . setOnClickListener { ... else { startActivity ( Intent ( this , ListActivity :: class . java )) } } Folytassuk a layout elk\u00e9sz\u00edt\u00e9s\u00e9vel a munk\u00e1t, az activity_list.xml tartalm\u00e1t cser\u00e9lj\u00fck ki az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:weightSum= \"3\" tools:context= \".ListActivity\" > <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> Ism\u00e9t egy f\u00fcgg\u0151leges LinearLayout-ot haszn\u00e1lunk, most azonban s\u00falyokat adunk meg benne. A gy\u00f6k\u00e9relemben megadjuk, hogy a s\u00falyok \u00f6sszege ( weightSum ) 3 lesz, \u00e9s mindh\u00e1rom gyerek\u00e9nek 1 -es s\u00falyt ( layout_weight ), \u00e9s 0dp magass\u00e1got adunk. Ezzel azt \u00e9rj\u00fck el, hogy h\u00e1rom egyenl\u0151 r\u00e9szre osztjuk a k\u00e9perny\u0151t, amit a h\u00e1rom FrameLayout fog elfoglalni. A FrameLayout egy nagyon egyszer\u0171 \u00e9s gyors elrendez\u00e9s, amely l\u00e9nyeg\u00e9ben csak egym\u00e1s tetej\u00e9re teszi a gyerekeik\u00e9nt szerepl\u0151 View-kat. Ezeken bel\u00fcl egy-egy k\u00e9pet, illetve azokon egy-egy feliratot fogunk elhelyezni. A h\u00e1rom s\u00e1vb\u00f3l az els\u0151t \u00edgy k\u00e9sz\u00edthetj\u00fck el: <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > <ImageButton android:id= \"@+id/btnBike\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:gravity= \"center\" android:padding= \"0dp\" android:scaleType= \"centerCrop\" android:src= \"@drawable/bikes\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"@string/bike\" android:textColor= \"#FFF\" android:textSize= \"36sp\" /> </FrameLayout> Az itt haszn\u00e1lt ImageButton pont az, aminek hangzik: egy olyan gomb, amelyen egy k\u00e9pet helyezhet\u00fcnk el. Azt, hogy ez melyik legyen, az src attrib\u00fatummal adtuk meg. Az ut\u00e1na szerepl\u0151 TextView feh\u00e9r sz\u00ednnel \u00e9s nagy m\u00e9ret\u0171 bet\u0171kkel a k\u00e9p f\u00f6l\u00e9 fog ker\u00fclni, ebbe \u00edrjuk bele a j\u00e1rm\u0171 nev\u00e9t. A @string/bike hib\u00e1t jelez. Mint l\u00e1that\u00f3, itt sem egy konkr\u00e9t sz\u00f6veget, hanem egy hivatkoz\u00e1st haszn\u00e1lunk. Ez az\u00e9rt hasznos, mert \u00edgy egy helyre tudjuk szervezni a sz\u00f6veges er\u0151forr\u00e1sainkat ( strings.xml ), \u00edgy egyszer\u0171en lokaliz\u00e1lhatjuk az alkalmaz\u00e1sunkat er\u0151forr\u00e1smin\u0151s\u00edt\u0151k seg\u00edts\u00e9g\u00e9vel. Adjunk teh\u00e1t \u00e9rt\u00e9ket a @strings/bike elemnek. Ezt megtehetj\u00fck k\u00e9zzel is a strings.xml -ben, de Alt+Enter rel a helyi men\u00fcben is: <string name= \"bike\" > Bike </string> T\u00f6lts\u00fck ki ehhez hasonl\u00f3 m\u00f3don a m\u00e1sik k\u00e9t FrameLayout -ot is, ID-k\u00e9nt haszn\u00e1ljuk a @+id/btnBus \u00e9s @+id/btnTrain \u00e9rt\u00e9keket, k\u00e9pnek pedig haszn\u00e1lhatjuk a kor\u00e1bban m\u00e1r bem\u00e1solt @drawable/bus \u00e9s @drawable/trains er\u0151forr\u00e1sokat. Ne felejts\u00fck el a TextView -k sz\u00f6veg\u00e9t is \u00e9rtelemszer\u0171en \u00e1t\u00edrni. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1sunkat, bejelentkez\u00e9s ut\u00e1n a most elk\u00e9sz\u00edtett lista n\u00e9zethez kell jutnunk. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a j\u00e1rm\u00favek list\u00e1ja (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. R\u00e9szletes n\u00e9zet (1 pont) \u00b6 Miut\u00e1n a felhaszn\u00e1l\u00f3 kiv\u00e1lasztotta a k\u00edv\u00e1nt k\u00f6zleked\u00e9si eszk\u00f6zt, n\u00e9h\u00e1ny tov\u00e1bbi opci\u00f3t fogunk m\u00e9g felaj\u00e1nlani sz\u00e1m\u00e1ra. Ezen a k\u00e9perny\u0151n fogja kiv\u00e1lasztani a b\u00e9rleten szerepl\u0151 d\u00e1tumokat, illetve a r\u00e1 vonatkoz\u00f3 kedvezm\u00e9nyt, amennyiben van ilyen. Hozzuk l\u00e9tre ezt az \u00faj Activity-t DetailsActivity n\u00e9ven, a layout-j\u00e1t kezdj\u00fck az al\u00e1bbi k\u00f3ddal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:clipToPadding= \"false\" android:padding= \"16dp\" android:scrollbarStyle= \"outsideInset\" tools:context= \".DetailsActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" > </LinearLayout> </ScrollView> Az eddigiekhez k\u00e9pest itt \u00fajdons\u00e1g, hogy a haszn\u00e1lt LinearLayout -ot egy ScrollView -ba tessz\u00fck, mivel sok n\u00e9zetet fogunk egym\u00e1s alatt elhelyezni, \u00e9s alap\u00e9rtelmezetten egy LinearLayout nem g\u00f6rgethet\u0151, \u00edgy ezek bizonyos eszk\u00f6z\u00f6k\u00f6n m\u00e1r a k\u00e9perny\u0151n k\u00edv\u00fcl lenn\u00e9nek. Kezdj\u00fck el \u00f6sszerakni a sz\u00fcks\u00e9ges layout-ot a LinearLayout belsej\u00e9ben. Az oldal tetej\u00e9re elhelyez\u00fcnk egy c\u00edmet, amely a kiv\u00e1lasztott jegy t\u00edpus\u00e1t fogja megjelen\u00edteni. <TextView android:id= \"@+id/tvTicketType\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:textSize= \"24sp\" tools:text= \"Bus ticket\" /> Az itt haszn\u00e1lt tools n\u00e9vt\u00e9rrel megadott text attrib\u00fatum hat\u00e1sa csak az el\u0151n\u00e9zetben fog megjelenni, az alkalmaz\u00e1sban ezt majd a Kotlin k\u00f3db\u00f3l \u00e1ll\u00edtjuk be, az el\u0151z\u0151 k\u00e9perny\u0151n megnyomott gomb f\u00fcggv\u00e9ny\u00e9ben. Az els\u0151 be\u00e1ll\u00edt\u00e1s ezen a k\u00e9perny\u0151n a b\u00e9rlet \u00e9rv\u00e9nyess\u00e9g\u00e9nek id\u0151tartama lesz. Ezt az \u00e9rv\u00e9nyess\u00e9g els\u0151 \u00e9s utols\u00f3 napj\u00e1nak megad\u00e1s\u00e1val tessz\u00fck, amelyhez a DatePicker oszt\u00e1lyt haszn\u00e1ljuk fel. Ez alap\u00e9rtelmezetten egy teljes havi napt\u00e1r n\u00e9zetet jelen\u00edt meg, azonban a calendarViewShown=\"false\" \u00e9s a datePickerMode=\"spinner\" be\u00e1ll\u00edt\u00e1sokkal egy kompaktabb, \"p\u00f6rgethet\u0151\" v\u00e1laszt\u00f3t kapunk. <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Start date\" /> <DatePicker android:id= \"@+id/dpStartDate\" android:layout_width= \"match_parent\" android:layout_height= \"160dp\" android:calendarViewShown= \"false\" android:datePickerMode= \"spinner\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"End date\" /> <DatePicker android:id= \"@+id/dpEndDate\" android:layout_width= \"match_parent\" android:layout_height= \"160dp\" android:calendarViewShown= \"false\" android:datePickerMode= \"spinner\" /> Ezeknek a DatePicker -eknek is adtunk ID-kat, hiszen k\u00e9s\u0151bb sz\u00fcks\u00e9g\u00fcnk lesz a Kotlin k\u00f3dunkban a rajtuk be\u00e1ll\u00edtott \u00e9rt\u00e9kekre. M\u00e9g egy be\u00e1ll\u00edt\u00e1s van h\u00e1tra, az \u00e1rkateg\u00f3ria kiv\u00e1laszt\u00e1sa - nyugd\u00edjasoknak \u00e9s k\u00f6zalkalmazottaknak k\u00fcl\u00f6nb\u00f6z\u0151 kedvezm\u00e9nyeket adunk a jegyek \u00e1r\u00e1b\u00f3l. Mivel ezek k\u00f6z\u00fcl az opci\u00f3k k\u00f6z\u00fcl egyszerre csak egynek akarjuk megengedni a kiv\u00e1laszt\u00e1s\u00e1t, ez\u00e9rt RadioButton -\u00f6ket fogunk haszn\u00e1lni, amelyeket Androidon egy RadioGroup -pal kell \u00f6sszefognunk, hogy jelezz\u00fck, melyikek tartoznak \u00f6ssze. <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Price category\" /> <RadioGroup android:id= \"@+id/rgPriceCategory\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" > <RadioButton android:id= \"@+id/rbFullPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:checked= \"true\" android:text= \"Full price\" /> <RadioButton android:id= \"@+id/rbSenior\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Senior\" /> <RadioButton android:id= \"@+id/rbPublicServant\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Public servant\" /> </RadioGroup> FONTOS Fontos, hogy adjunk ID-t a teljes csoportnak, \u00e9s a benne l\u00e9v\u0151 minden opci\u00f3nak is, mivel k\u00e9s\u0151bb ezek alapj\u00e1n tudjuk majd megn\u00e9zni, hogy melyik van kiv\u00e1lasztva. V\u00e9g\u00fcl az oldal alj\u00e1n ki\u00edrjuk a kiv\u00e1lasztott b\u00e9rlet \u00e1r\u00e1t, illetve ide ker\u00fcl a megv\u00e1s\u00e1rl\u00e1shoz haszn\u00e1lhat\u00f3 gomb is. Az \u00e1rnak egyel\u0151re csak egy fix \u00e9rt\u00e9ket \u00edrunk ki. <TextView android:id= \"@+id/tvPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"8dp\" android:text= \"42000\" /> <Button android:id= \"@+id/btnPurchase\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"8dp\" android:text= \"Purchase pass\" /> Ne felejts\u00fck el, a stringeket itt is kiszervezni! Meg kell oldanunk m\u00e9g azt, hogy az el\u0151z\u0151 k\u00e9perny\u0151n tett v\u00e1laszt\u00e1s eredm\u00e9nye el\u00e9rhet\u0151 legyen a DetailsActivity -ben. Ezt \u00fagy tehetj\u00fck meg, hogy az Activity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent -be tesz\u00fcnk egy azonos\u00edt\u00f3t, amib\u0151l kider\u00fcl, hogy melyik t\u00edpust v\u00e1lasztotta a felhaszn\u00e1l\u00f3. Ehhez a DetailsActivity -ben vegy\u00fcnk fel egy konstanst, ami ennek a param\u00e9ternek a kulcsak\u00e9nt fog szolg\u00e1lni: class DetailsActivity : AppCompatActivity () { companion object { const val KEY_TRANSPORT_TYPE = \"KEY_TRANSPORT_TYPE\" } ... } Ezut\u00e1n menj\u00fcnk a ListActivity k\u00f3dj\u00e1hoz, \u00e9s vegy\u00fcnk fel konstansokat a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e1mogatott j\u00e1rm\u0171veknek: class ListActivity : AppCompatActivity () { companion object { const val TYPE_BIKE = 1 const val TYPE_BUS = 2 const val TYPE_TRAIN = 3 } ... } static A Kotlin egy nagy elt\u00e9r\u00e9se az eddig ismert, megszokott OOP nyelvekt\u0151l, hogy nincs benne static kulcssz\u00f3, \u00e9s \u00edgy nincsenek statikus v\u00e1ltoz\u00f3k vagy f\u00fcggv\u00e9nyek sem. Ehelyett minden oszt\u00e1lyhoz lehet defini\u00e1lni egy companion object -et , ami egy olyan singleton-t defini\u00e1l, ami az oszt\u00e1ly \u00f6sszes p\u00e9ld\u00e1ny\u00e1n kereszt\u00fcl el\u00e9rhet\u0151. R\u00f6viden, minden companion object -en bel\u00fcl defini\u00e1lt konstans, v\u00e1ltoz\u00f3, f\u00fcggv\u00e9ny \u00fagy viselkedik, mintha statikus lenne. Most m\u00e1r l\u00e9trehozhatjuk a gombok listener-jeit, amelyek elind\u00edtj\u00e1k a DetailsActivity -t, extr\u00e1nak belet\u00e9ve a kiv\u00e1lasztott t\u00edpust. Az els\u0151 gomb listenerj\u00e9nek be\u00e1ll\u00edt\u00e1s\u00e1t \u00edgy tehetj\u00fck meg a ViewBinding be\u00e1ll\u00edt\u00e1sa ut\u00e1n: lateinit var binding : ActivityListBinding ... override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityListBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . btnBike . setOnClickListener { val intent = Intent ( this , DetailsActivity :: class . java ) intent . putExtra ( DetailsActivity . KEY_TRANSPORT_TYPE , TYPE_BIKE ) startActivity ( intent ) } } A m\u00e1sik k\u00e9t gomb listener-je ugyanerre a mint\u00e1ra m\u0171k\u00f6dik, csup\u00e1n az \u00e1tadott t\u00edpus konstanst kell megv\u00e1ltoztatni benn\u00fck. Hozzuk l\u00e9tre ezeket is! (Ezt a viselked\u00e9st \u00e9rdemes lehet k\u00e9s\u0151bb kiszervezni egy k\u00fcl\u00f6n oszt\u00e1lyba, ami implement\u00e1lja az OnClickListener interf\u00e9szt, de ezt most nem tessz\u00fck meg.) M\u00e9g h\u00e1tra van az, hogy a DetailsActivity -ben kiolvassuk ezt az \u00e1tadott param\u00e9tert, \u00e9s megjelen\u00edts\u00fck a felhaszn\u00e1l\u00f3nak. Ezt az onCreate f\u00fcggv\u00e9ny\u00e9ben tehetj\u00fck meg, az Activity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent elk\u00e9r\u00e9s\u00e9vel ( intent property), majd az el\u0151bbi kulcs haszn\u00e1lat\u00e1val: val transportType = this . intent . getIntExtra ( KEY_TRANSPORT_TYPE , - 1 ) Ezt az \u00e1tadott sz\u00e1mot m\u00e9g le kell k\u00e9pezn\u00fcnk egy stringre, ehhez vegy\u00fcnk fel egy egyszer\u0171 seg\u00e9df\u00fcggv\u00e9nyt: private fun getTypeString ( transportType : Int ): String { return when ( transportType ) { ListActivity . TYPE_BUS -> \"Bus pass\" ListActivity . TYPE_TRAIN -> \"Train pass\" ListActivity . TYPE_BIKE -> \"Bike pass\" else -> \"Unknown pass type\" } } when Egy m\u00e1sik nagy elt\u00e9r\u00e9se a Kotlin-nak a megszokott nyelvekt\u0151l, hogy nincs benne switch . Helyette a Kotlin egy when nev\u0171 szerkezetet haszn\u00e1l, ami egyr\u00e9szr\u0151l egy kifejet\u00e9s (l\u00e1that\u00f3, hogy az \u00e9rt\u00e9ke vissza van adva), m\u00e1sr\u00e9szr\u0151l pedig sokkal sokoldal\u00fabb felt\u00e9teleket k\u00edn\u00e1l, mint a hagyom\u00e1nyos case . V\u00e9g\u00fcl pedig az onCreate f\u00fcggv\u00e9nybe visszat\u00e9rve meg kell keresn\u00fcnk a megfelel\u0151 TextView -t, \u00e9s be\u00e1ll\u00edtani a sz\u00f6veg\u00e9nek a f\u00fcggv\u00e9ny \u00e1ltal visszaadott \u00e9rt\u00e9ket (k\u00e9sz\u00edts\u00fck el a ViewBindingot is): binding . tvTicketType . text = getTypeString ( transportType ) Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! A DetailsActivity -ben meg kell jelennie a hozz\u00e1adott be\u00e1ll\u00edt\u00e1soknak, illetve a tetej\u00e9n a megfelel\u0151 jegy t\u00edpusnak. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a r\u00e9szletes n\u00e9zet (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. A b\u00e9rlet (1 pont) \u00b6 Az alkalmaz\u00e1s utols\u00f3 k\u00e9perny\u0151je m\u00e1r kifejezetten egyszer\u0171 lesz, ez mag\u00e1t a b\u00e9rletet fogja reprezent\u00e1lni. Itt a b\u00e9rlet t\u00edpus\u00e1t \u00e9s \u00e9rv\u00e9nyess\u00e9gi idej\u00e9t fogjuk megjelen\u00edteni, illetve egy QR k\u00f3dot, amivel ellen\u0151rizni lehet a b\u00e9rletet. Hozzuk l\u00e9tre a sz\u00fcks\u00e9ges Activity-t, PassActivity n\u00e9ven. Ennek az Activity-nek sz\u00fcks\u00e9ge lesz a jegy t\u00edpus\u00e1ra \u00e9s a kiv\u00e1lasztott d\u00e1tumokra - a QR k\u00f3d az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt egy fix k\u00e9p lesz. Az adatok \u00e1tad\u00e1s\u00e1hoz el\u0151sz\u00f6r vegy\u00fcnk fel k\u00e9t kulcsot a PassActivity -ben: class PassActivity : AppCompatActivity () { companion object { const val KEY_DATE_STRING = \"KEY_DATE_STRING\" const val KEY_TYPE_STRING = \"KEY_TYPE_STRING\" } ... } Ezeket az adatokat a DetailsActivity -ben kell \u00f6sszek\u00e9sz\u00edten\u00fcnk \u00e9s beleraknunk az Intent -be. Ehhez adjunk hozz\u00e1 a v\u00e1s\u00e1rl\u00e1s gombhoz egy listener-t az onCreate -ben: binding . btnPurchase . setOnClickListener { val typeString = getTypeString ( transportType ) val dateString = \" ${ getDateFrom ( binding . dpStartDate ) } - ${ getDateFrom ( binding . dpEndDate ) } \" val intent = Intent ( this , PassActivity :: class . java ) intent . putExtra ( PassActivity . KEY_TYPE_STRING , typeString ) intent . putExtra ( PassActivity . KEY_DATE_STRING , dateString ) startActivity ( intent ) } L\u00e1that\u00f3, hogy a Java-val ellent\u00e9tben a Kotlin t\u00e1mogatja a string interpol\u00e1ci\u00f3t . Ebben \u00f6sszegy\u0171jtj\u00fck a sz\u00fcks\u00e9ges adatokat, \u00e9s a megfelel\u0151 kulcsokkal elhelyezz\u00fck \u0151ket a PassActivity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent -ben. A getDateFrom egy seg\u00e9df\u00fcggv\u00e9ny lesz, ami egy DatePicker -t kap param\u00e9terk\u00e9nt, \u00e9s form\u00e1zott stringk\u00e9nt visszaadja az \u00e9ppen kiv\u00e1lasztott d\u00e1tumot, ennek implement\u00e1ci\u00f3ja a k\u00f6vetkez\u0151: private fun getDateFrom ( picker : DatePicker ): String { return String . format ( Locale . getDefault (), \"%04d.%02d.%02d.\" , picker . year , picker . month + 1 , picker . dayOfMonth ) } Megjegyz\u00e9s Itt a h\u00f3naphoz az\u00e9rt adtunk hozz\u00e1 egyet, mert ak\u00e1rcsak a Calendar oszt\u00e1ly eset\u00e9ben, a DatePicker oszt\u00e1lyn\u00e1l is 0 indexel\u00e9s\u0171ek a h\u00f3napok.) Most m\u00e1r elk\u00e9sz\u00edthetj\u00fck a PassActivity -t. Kezdj\u00fck a layout-j\u00e1val ( activity_pass.xml ), aminek m\u00e1r majdnem minden elem\u00e9t haszn\u00e1ltuk, az egyetlen \u00fajdons\u00e1g itt az ImageView haszn\u00e1lata. <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".PassActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_margin= \"16dp\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/tvTicketType\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:textSize= \"24sp\" tools:text= \"Train pass\" /> <TextView android:id= \"@+id/tvDates\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"16dp\" tools:text= \"1999.11.22. - 2012.12.21.\" /> <ImageView android:layout_width= \"300dp\" android:layout_height= \"300dp\" android:layout_gravity= \"center\" android:src= \"@drawable/qrcode\" /> </LinearLayout> </ScrollView> Az Activity Kotlin k\u00f3dj\u00e1ban pedig csak a k\u00e9t TextView sz\u00f6veg\u00e9t kell az Intent -ben megkapott \u00e9rt\u00e9kekre \u00e1ll\u00edtanunk az onCreate f\u00fcggv\u00e9nyben(illetve be\u00e1ll\u00edtani a ViewBindingot ): binding . tvTicketType . text = intent . getStringExtra ( KEY_TYPE_STRING ) binding . tvDates . text = intent . getStringExtra ( KEY_DATE_STRING ) BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. \u00d6n\u00e1ll\u00f3 feladat - Haj\u00f3 b\u00e9rlet (1 pont) \u00b6 V\u00e1llalatunk terjeszked\u00e9s\u00e9vel elindult a haj\u00f3j\u00e1ratokat aj\u00e1nl\u00f3 szolg\u00e1ltat\u00e1sunk is. Adjuk hozz\u00e1 ezt az \u00faj b\u00e9rlet t\u00edpust az alkalmaz\u00e1sunkhoz! Megold\u00e1s A sz\u00fcks\u00e9ges v\u00e1ltoztat\u00e1sok nagy r\u00e9sze a ListActivity -ben lesz. El\u0151sz\u00f6r friss\u00edts\u00fck az Activity layout-j\u00e1t: itt egy \u00faj FrameLayout -ot kell hozz\u00e1adnunk, amiben a gomb ID-ja legyen @+id/btnBoat . A sz\u00fcks\u00e9ges k\u00e9pet m\u00e1r tartalmazza a projekt, ezt @drawable/boat n\u00e9ven tal\u00e1ljuk meg. Ne felejts\u00fck el a gy\u00f6k\u00e9relem\u00fcnkk\u00e9nt szolg\u00e1l\u00f3 LinearLayout -ban \u00e1t\u00e1ll\u00edtani a weightSum attrib\u00fatumot 3 -r\u00f3l 4 -re, hiszen most m\u00e1r ennyi a benne tal\u00e1lhat\u00f3 View-k s\u00falyainak \u00f6sszege. (Kipr\u00f3b\u00e1lhatjuk, hogy mi t\u00f6rt\u00e9nik, ha p\u00e9ld\u00e1ul 1 -re, vagy 2.5 -re \u00e1ll\u00edtjuk ezt a sz\u00e1mot, a hat\u00e1s\u00e1nak m\u00e1r az el\u0151n\u00e9zetben is l\u00e1tszania kell.) Menj\u00fcnk az Activity Kotlin f\u00e1jlj\u00e1ba, \u00e9s k\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt vegy\u00fcnk fel egy \u00faj konstanst a haj\u00f3 t\u00edpus jel\u00f6l\u00e9s\u00e9re. const val TYPE_BOAT = 4 Az el\u0151z\u0151 h\u00e1rom t\u00edpussal azonos m\u00f3don keress\u00fck a haj\u00f3t kiv\u00e1laszt\u00f3 gombra ( btnBoat ) is \u00e1ll\u00edtsunk be r\u00e1 egy listener-t, amely elind\u00edtja a DetailsActivity -t, a TYPE_BOAT konstanst \u00e1tadva az Intent -ben param\u00e9terk\u00e9nt. M\u00e9g egy dolgunk maradt, a DetailsActivity k\u00f3dj\u00e1ban \u00e9rtelmezn\u00fcnk kell ezt a param\u00e9tert. Ehhez a getTypeString f\u00fcggv\u00e9nyen bel\u00fcl vegy\u00fcnk fel egy \u00faj \u00e1gat a when -ben: ListActivity . TYPE_BOAT -> \"Boat pass\" BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts k\u00e9t k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a j\u00e1rm\u0171 v\u00e1laszt\u00f3 k\u00e9perny\u0151 illetve a haj\u00f3 b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), \u00e9s az ezekhez tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9peket a megold\u00e1sban a repository-ba f6.png \u00e9s f7.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9pek sz\u00fcks\u00e9ges felt\u00e9telei a pontsz\u00e1m megszerz\u00e9s\u00e9nek. iMSc feladat \u00b6 Kor\u00e1bban a r\u00e9szletes n\u00e9zetben egy fix \u00e1rat \u00edrtunk ki a k\u00e9perny\u0151re. \u00cdrjuk meg a b\u00e9rlet \u00e1r\u00e1t kisz\u00e1mol\u00f3 logik\u00e1t, \u00e9s ahogy a felhaszn\u00e1l\u00f3 v\u00e1ltoztatja a b\u00e9rlet param\u00e9tereit, friss\u00edts\u00fck a megjelen\u00edtett \u00e1rat. Az \u00e1raz\u00e1s a k\u00f6vetkez\u0151 m\u00f3don m\u0171k\u00f6dj\u00f6n: K\u00f6zleked\u00e9si eszk\u00f6z B\u00e9rlet \u00e1ra naponta Bicikli 700 Busz 1000 Vonat 1500 Haj\u00f3 2500 Ebb\u0151l m\u00e9g az al\u00e1bbi kedvezm\u00e9nyeket adjuk: \u00c1rkateg\u00f3ria Kedvezm\u00e9ny m\u00e9rt\u00e9ke Teljes \u00e1r\u00fa 0% Nyugd\u00edjas 90% K\u00f6zalkalmazott 50% Tipp A sz\u00e1mol\u00e1sokhoz \u00e9s az esem\u00e9nykezel\u00e9shez a Calendar oszt\u00e1lyt, a DatePicker oszt\u00e1ly init f\u00fcggv\u00e9ny\u00e9t, illetve a RadioGroup oszt\u00e1ly setOnCheckedChangeListener oszt\u00e1ly\u00e1t \u00e9rdemes haszn\u00e1lni. K\u00fcl\u00f6nb\u00f6z\u0151 b\u00e9rlet napi \u00e1rak (1 IMSc pont) \u00b6 BEADAND\u00d3 (1 IMSc pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik egy t\u00f6bb napos b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rlet\u00e1rakkal kapcsolatos k\u00f3ddal , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f8.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. Sz\u00e1zal\u00e9kos kedvezm\u00e9nyek ( 1 IMSc pont) \u00b6 BEADAND\u00d3 (1 IMSc pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik egy t\u00f6bb napos kedvezm\u00e9nyes b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rletkedvezm\u00e9nyekkel kapcsolatos k\u00f3ddal , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f9.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Labor 02 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9s"},{"location":"laborok/02-android-ui/#labor-02-felhasznaloi-felulet-keszites","text":"","title":"Labor 02 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9s"},{"location":"laborok/02-android-ui/#bevezeto","text":"A labor sor\u00e1n egy t\u00f6megk\u00f6zleked\u00e9si v\u00e1llalat sz\u00e1m\u00e1ra meg\u00e1lmodott alkalmaz\u00e1s v\u00e1z\u00e1t k\u00e9sz\u00edtj\u00fck el. Az alkalmaz\u00e1ssal a felhaszn\u00e1l\u00f3k k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171vekre v\u00e1s\u00e1rolhatnak majd b\u00e9rleteket. Az \u00fczleti logik\u00e1t (az authentik\u00e1ci\u00f3t, a bevitt adatok ellen\u0151rz\u00e9s\u00e9t, a fizet\u00e9s lebonyol\u00edt\u00e1s\u00e1t) egyel\u0151re csak szimul\u00e1lni fogjuk, a labor f\u00f3kusza a fel\u00fcletek \u00e9s a k\u00f6zt\u00fck val\u00f3 navig\u00e1ci\u00f3 elk\u00e9sz\u00edt\u00e9se lesz. IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151.","title":"Bevezet\u0151"},{"location":"laborok/02-android-ui/#elokeszuletek","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t .","title":"El\u0151k\u00e9sz\u00fcletek"},{"location":"laborok/02-android-ui/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Android, Java, Kotlin Az Android hagyom\u00e1nyosan Java nyelven volt fejleszthet\u0151, azonban az ut\u00f3bbi \u00e9vekben a Google \u00e1t\u00e1llt a Kotlin nyelvre. Ez egy sokkal modernebb nyelv, mint a Java, sok olyan nyelvi elemet ad, amit k\u00e9nyelmes haszn\u00e1lni, valamint \u00faj nyelvi szab\u00e1lyokat, amikkel p\u00e9ld\u00e1ul elker\u00fclhet\u0151ek a Java nyelven gyakori NullPointerException jelleg\u0171 hib\u00e1k. M\u00e1sr\u00e9szr\u0151l viszont a nyelv sok mindenben t\u00e9r el a hagyom\u00e1nyosan C jelleg\u0171 szintaktik\u00e1t k\u00f6vet\u0151 nyelvekt\u0151l, amit majd l\u00e1tni is fogunk. A labor el\u0151tt \u00e9rdemes megismerkedni a nyelvvel, egyr\u00e9szt a fent l\u00e1that\u00f3 linken, m\u00e1sr\u00e9szt ezt az \u00f6sszefoglal\u00f3 cikket \u00e1tolvasva.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/02-android-ui/#projekt-letrehozasa","text":"Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd: Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get. A projekt neve legyen PublicTransport , a kezd\u0151 package hu.bme.aut.android.publictransport , a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl a PublicTransport mappa. Nyelvnek v\u00e1lasszuk a Kotlin -t. A minimum API szint legyen API21: Android 5.0. Az instant app t\u00e1mogat\u00e1st, valamint a Use legacy android.support libraries pontot ne pip\u00e1ljuk be. A projekt l\u00e9trehoz\u00e1sakor, a ford\u00edt\u00f3 keretrendszernek rengeteg f\u00fcgg\u0151s\u00e9get kell let\u00f6ltenie. Am\u00edg ez nem t\u00f6rt\u00e9nt meg, addig a projektben neh\u00e9zkes navig\u00e1lni, hi\u00e1nyzik a k\u00f3dkieg\u00e9sz\u00edt\u00e9s, stb... \u00c9ppen ez\u00e9rt ezt tan\u00e1csos kiv\u00e1rni, azonban ez ak\u00e1r 5 percet is ig\u00e9nybe vehet az els\u0151 alkalommal! Az ablak alj\u00e1n l\u00e1that\u00f3 inform\u00e1ci\u00f3s s\u00e1vot kell figyelni. L\u00e1thatjuk, hogy l\u00e9trej\u00f6tt egy projekt, amiben van egy Activity, MainActivity n\u00e9ven, valamint egy hozz\u00e1 tartoz\u00f3 layout f\u00e1jl activity_main.xml n\u00e9ven. Nevezz\u00fck ezeket \u00e1t LoginActivity -re, illetve activity_login.xml -re. Ezt a jobb gomb > Refactor > Rename men\u00fcpontban lehet megtenni (vagy Shift+F6). Az \u00e1tnevez\u00e9sn\u00e9l tal\u00e1lhat\u00f3 egy Scope nev\u0171 be\u00e1ll\u00edt\u00e1s. Ezt \u00e1ll\u00edtsuk \u00fagy be, hogy csak a jelenlegi projekten bel\u00fcl nevezze \u00e1t a dolgokat (Project Files). \u00c9rdemes megfigyelni, hogy az \u00e1tnevez\u00e9s \"okos\". A layout f\u00e1jl \u00e1tnevez\u00e9se eset\u00e9n a LoginActivity-ben nem kell k\u00e9zzel \u00e1t\u00edrnunk a layout f\u00e1jl azonos\u00edt\u00f3j\u00e1t, mert ezt a rendszer megteszi. Ugyanez igaz a manifest f\u00e1jlra is.","title":"Projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/02-android-ui/#splash-kepernyo-05-pont","text":"Az els\u0151 Activity-nk a nev\u00e9hez h\u00edven a felhaszn\u00e1l\u00f3 bejelentkez\u00e9s\u00e9\u00e9rt lesz felel\u0151s, azonban m\u00e9g miel\u0151tt ez megjelenik a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra, egy splash k\u00e9perny\u0151vel fogjuk \u00fcdv\u00f6z\u00f6lni. Ez egy eleg\u00e1ns megold\u00e1s arra, hogy az alkalmaz\u00e1s bet\u00f6lt\u00e9s\u00e9ig ne egy egysz\u00edn\u0171 k\u00e9perny\u0151 legyen a felhaszn\u00e1l\u00f3 el\u0151tt, hanem egy tetsz\u0151leges saj\u00e1t design. El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1shoz k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt , ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio-ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk, esetleg a mapp\u00e1n jobb klikk > Show in Explorer). Hozzunk l\u00e9tre egy \u00faj XML f\u00e1jlt a drawable mapp\u00e1ban splash_background.xml n\u00e9ven. Ez lesz a splash k\u00e9perny\u0151nk\u00f6n megjelen\u0151 grafika. A tartalma az al\u00e1bbi legyen: <?xml version=\"1.0\" encoding=\"utf-8\"?> <layer-list xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item> <bitmap android:gravity= \"fill_horizontal|clip_vertical\" android:src= \"@drawable/splash_image\" /> </item> </layer-list> Jelen esetben egyetlen k\u00e9pet tesz\u00fcnk ide, de tov\u00e1bbi item -ek felv\u00e9tel\u00e9vel komplexebb dolgokat is \u00f6ssze\u00e1ll\u00edthatn\u00e1nk itt. Tipikus megold\u00e1s p\u00e9ld\u00e1ul egy egysz\u00edn\u0171 h\u00e1tt\u00e9r be\u00e1ll\u00edt\u00e1sa, amin az alkalmaz\u00e1s ikonja l\u00e1tszik. Nyissuk meg a values/themes.xml f\u00e1jlt. Ez defini\u00e1lja az alkalmaz\u00e1sban haszn\u00e1lt k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e9m\u00e1kat. A splash k\u00e9perny\u0151h\u00f6z egy \u00faj t\u00e9m\u00e1t fogunk l\u00e9trehozni, amelyben az el\u0151bb l\u00e9trehozott drawable-t \u00e1ll\u00edtjuk be az alkalmaz\u00e1sablakunk h\u00e1tter\u00e9nek (mivel ez l\u00e1tszik val\u00f3j\u00e1ban, am\u00edg nem t\u00f6lt\u00f6tt be a UI t\u00f6bbi r\u00e9sze). Ezt \u00edgy tehetj\u00fck meg: <style name= \"SplashTheme\" parent= \"Theme.AppCompat.NoActionBar\" > <item name= \"android:windowBackground\" > @drawable/splash_background </item> </style> A fenti t\u00e9m\u00e1t illessz\u00fck be a night min\u0151s\u00edt\u0151vel ell\u00e1tott themes.xml f\u00e1jlba is. A t\u00e9ma haszn\u00e1lat\u00e1hoz az alkalmaz\u00e1sunk manifest f\u00e1jlj\u00e1t ( AndroidManifest.xml ) kell m\u00f3dos\u00edtanunk. Ezt megnyitva l\u00e1thatjuk, hogy jelenleg a teljes alkalmaz\u00e1s az AppTheme nev\u0171 t\u00e9m\u00e1t haszn\u00e1lja. <application ... android:theme= \"@style/Theme.PublicTransport\" > Mi ezt nem akarjuk megv\u00e1ltoztatni, hanem csak a LoginActivity -nek akarunk egy \u00faj t\u00e9m\u00e1t adni. Ezt \u00edgy tehetj\u00fck meg: <activity android:name= \".LoginActivity\" android:theme= \"@style/SplashTheme\" > ... </activity> Mivel a bet\u00f6lt\u00e9s ut\u00e1n m\u00e1r nem lesz sz\u00fcks\u00e9g\u00fcnk erre a h\u00e1tt\u00e9rre, a LoginActivity.kt f\u00e1jlban a bet\u00f6lt\u00e9s befejezt\u00e9vel vissza\u00e1ll\u00edthatjuk az eredeti t\u00e9m\u00e1t, amely feh\u00e9r h\u00e1tt\u00e9rrel rendelkezik. Ezt az onCreate f\u00fcggv\u00e9ny elej\u00e9n tegy\u00fck meg, m\u00e9g a super h\u00edv\u00e1s el\u0151tt: override fun onCreate ( savedInstanceState : Bundle?) { setTheme ( R . style . Theme_PublicTransport ) ... } Most m\u00e1r futtathatjuk az alkalmaz\u00e1st, \u00e9s bet\u00f6lt\u00e9s k\u00f6zben l\u00e1tnunk kell a berakott k\u00e9pet. A splash k\u00e9perny\u0151 \u00e1ltal\u00e1ban akkor hasznos, ha az alkalmaz\u00e1s inicializ\u00e1l\u00e1sa sok\u00e1ig tart. Mivel a mostani alkalmaz\u00e1sunk m\u00e9g nagyon gyorsan indul el, szimul\u00e1lhatunk egy kis t\u00f6lt\u00e9si id\u0151t az al\u00e1bbi m\u00f3don: override fun onCreate ( savedInstanceState : Bundle?) { try { Thread . sleep ( 1000 ) } catch ( e : InterruptedException ) { e . printStackTrace () } setTheme ( R . style . Theme_PublicTransport ); ... } BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a splash k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Splash k\u00e9perny\u0151 (0.5 pont)"},{"location":"laborok/02-android-ui/#login-kepernyo-05-pont","text":"Most m\u00e1r elk\u00e9sz\u00edthetj\u00fck a login k\u00e9perny\u0151t. A felhaszn\u00e1l\u00f3t\u00f3l egy email c\u00edmet, illetve egy sz\u00e1mokb\u00f3l \u00e1ll\u00f3 jelsz\u00f3t fogunk bek\u00e9rni, \u00e9s egyel\u0151re csak azt fogjuk ellen\u0151rizni, hogy be\u00edrt-e valamit a mez\u0151kbe. Az activity_login.xml f\u00e1jlba ker\u00fclj\u00f6n az al\u00e1bbi k\u00f3d. Alap\u00e9rtelmezetten egy grafikus szerkeszt\u0151 ny\u00edlik meg, ezt \u00e1t kell \u00e1ll\u00edtani a sz\u00f6veges szerkeszt\u0151re. Ezt az Android Studio verzi\u00f3j\u00e1t\u00f3l f\u00fcgg\u0151en a jobb fels\u0151, vagy a jobb als\u00f3 sarokban lehet megtenni: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_margin= \"16dp\" android:orientation= \"vertical\" tools:context= \".LoginActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"16dp\" android:text= \"Please enter your credentials\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Email\" /> <EditText android:id= \"@+id/etEmailAddress\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Password\" /> <EditText android:id= \"@+id/etPassword\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/btnLogin\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"Login\" /> </LinearLayout> A haszn\u00e1lt elrendez\u00e9s teljesen line\u00e1ris, csak egym\u00e1s al\u00e1 helyez\u00fcnk el benne k\u00fcl\u00f6nb\u00f6z\u0151 View-kat egy LinearLayout -ban. Az EditText -eknek \u00e9s a Button -nek adtunk ID-kat, hogy k\u00e9s\u0151bb k\u00f3db\u00f3l el\u00e9rj\u00fck \u0151ket. Az alkalmaz\u00e1st \u00fajra futtatva megjelenik a layout, azonban most m\u00e9g b\u00e1rmilyen sz\u00f6veget be tudnunk \u00edrni a k\u00e9t beviteli mez\u0151be. Az EditText oszt\u00e1ly lehet\u0151s\u00e9get ad sz\u00e1mos speci\u00e1lis input kezel\u00e9s\u00e9re, XML k\u00f3dban az inputType attrib\u00fatum megad\u00e1s\u00e1val. Jelen esetben az email c\u00edmet kezel\u0151 EditText -hez a textEmailAddress \u00e9rt\u00e9ket, a m\u00e1sikhoz pedig a numberPassword \u00e9rt\u00e9ket haszn\u00e1lhatjuk. <EditText android:id= \"@+id/etEmailAddress\" ... android:inputType= \"textEmailAddress\" /> <EditText android:id= \"@+id/etPassword\" ... android:inputType= \"numberPassword\" /> Ha most kipr\u00f3b\u00e1ljuk az alkalmaz\u00e1st, m\u00e1r l\u00e1tjuk a be\u00e1ll\u00edt\u00e1sok hat\u00e1s\u00e1t: A legt\u00f6bb billenty\u0171zettel az els\u0151 mez\u0151h\u00f6z most m\u00e1r megjelenik a @ szimb\u00f3lum, a m\u00e1sodikn\u00e1l pedig csak sz\u00e1mokat \u00edrhatunk be. Mivel a m\u00e1sodik mez\u0151t jelsz\u00f3 t\u00edpus\u00fanak \u00e1ll\u00edtottuk be, a karakterek a megszokott m\u00f3don elrejt\u00e9sre ker\u00fclnek a be\u00edr\u00e1suk ut\u00e1n. M\u00e9g egy dolgunk van ezen a k\u00e9perny\u0151n, az input ellen\u0151rz\u00e9se. Ezt a LoginActivity.kt f\u00e1jlban tehetj\u00fck meg. A layout-unkat alkot\u00f3 View -kat az onCreate f\u00fcggv\u00e9nyben l\u00e9v\u0151 setContentView h\u00edv\u00e1s ut\u00e1n tudjuk el\u0151sz\u00f6r el\u00e9rni. Ezt csin\u00e1lhatn\u00e1nk a klasszikus m\u00f3don, azaz p\u00e9ld\u00e1nyos\u00edtunk egy gombot, a findViewById met\u00f3dussal referenci\u00e1t szerz\u00fcnk a fel\u00fcleten l\u00e9v\u0151 vez\u00e9rl\u0151re, \u00e9s a p\u00e9ld\u00e1nyon be\u00e1ll\u00edtjuk az esem\u00e9nykezel\u0151t: val btnLogin = findViewById < Button > ( R . id . btnLogin ) btnLogin . setOnClickListener { ... } Azonban a findViewById h\u00edv\u00e1snak sz\u00e1mos probl\u00e9m\u00e1ja van . Ezekr\u0151l b\u0151vebben az el\u0151ad\u00e1son lesz sz\u00f3 (pl.: Null safety , type safety ). Ez\u00e9rt ehelyett \"n\u00e9zetk\u00f6t\u00e9st\", azaz ViewBinding -ot fogunk haszn\u00e1lni. A ViewBinding a k\u00f3d\u00edr\u00e1st k\u00f6nny\u00edti meg sz\u00e1munkra. Amennyiben ezt haszn\u00e1ljuk, az automatikusan gener\u00e1l\u00f3d\u00f3 binding oszt\u00e1lyokon kereszt\u00fcl k\u00f6zvetlen referenci\u00e1n kereszt\u00fcl tudunk el\u00e9rni minden ID -val rendelkez\u0151 er\u0151forr\u00e1st az XML f\u00e1jljainkban. El\u0151sz\u00f6r is be kell kapcsolnunk a modulunkra a ViewBinding -ot. Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android tagen bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u00e9st (Ezek ut\u00e1n kattintsunk jobb fel\u00fcl a Sync Now gombra.): android { ... buildFeatures { viewBinding true } } Ezzel ut\u00e1n m\u00e1r a teljes modulunkban automatikusan el\u00e9rhet\u0151v\u00e9 v\u00e1lt a ViewBinding . ViewBinding Ebben az esetben a modul minden egyes XML layout f\u00e1jlj\u00e1hoz gener\u00e1l\u00f3dik egy \u00fagynevezett binding oszt\u00e1ly. Minden binding oszt\u00e1ly tartalmaz referenci\u00e1t az adott XML layout er\u0151forr\u00e1s gy\u00f6k\u00e9r elem\u00e9re \u00e9s az \u00f6sszes ID-val rendelkez\u0151 view-ra. A gener\u00e1lt oszt\u00e1ly neve \u00fagy \u00e1ll el\u0151, hogy az XML layout nev\u00e9t Pascal form\u00e1tumba alak\u00edtja a rendszer \u00e9s a v\u00e9g\u00e9re illeszti, hogy Binding . Azaz p\u00e9ld\u00e1ul a result_profile.xml er\u0151forr\u00e1sf\u00e1jlb\u00f3l az al\u00e1bbi binding oszt\u00e1ly gener\u00e1l\u00f3dik: ResultProfileBinding . <LinearLayout ... > <TextView android:id= \"@+id/name\" /> <ImageView android:cropToPadding= \"true\" /> <Button android:id= \"@+id/button\" android:background= \"@drawable/rounded_button\" /> </LinearLayout> A gener\u00e1lt oszt\u00e1lynak k\u00e9t mez\u0151je van. A name id-val rendelkez\u0151 TextView \u00e9s a button id-j\u00fa Button . A layout-ban szerepl\u0151 ImageView-nak nincs id-ja, ez\u00e9rt nem szerepel a binding oszt\u00e1lyban. Minden gener\u00e1lt oszt\u00e1ly tartalmaz egy getRoot() met\u00f3dust, amely direkt referenciak\u00e9nt szolg\u00e1l a layout gy\u00f6ker\u00e9re. A p\u00e9ld\u00e1ban a getRoot() met\u00f3dus a LinearLayout -tal t\u00e9r vissza. A ViewBinding haszn\u00e1lat\u00e1hoz teh\u00e1t az Activity -nkben csak p\u00e9ld\u00e1nyos\u00edtanunk kell a binding objektumot, amin kereszt\u00fcl majd el\u00e9rhetj\u00fck az er\u0151forr\u00e1sainkat. A binding p\u00e9ld\u00e1ny m\u0171k\u00f6d\u00e9s\u00e9hez h\u00e1rom dolgot kell tenn\u00fcnk: A gener\u00e1lt binding oszt\u00e1ly statikus inflate f\u00fcggv\u00e9ny\u00e9vel p\u00e9ld\u00e1nyos\u00edtjuk a binding oszt\u00e1lyunkat az Activity -hez. Referenci\u00e1t szerz\u00fcnk a gy\u00f6k\u00e9relemre. Ezt k\u00e9tf\u00e9lek\u00e9ppen is megtehetj\u00fck. Vagy megh\u00edvjuk a getRoot() met\u00f3dust, vagy a Kotlin property syntax-ot haszn\u00e1lva. Ezt a gy\u00f6k\u00e9relemet odaadjuk a setContentView() f\u00fcggv\u00e9nynek, hogy ez legyen az akt\u00edv view a k\u00e9perny\u0151n: private lateinit var binding : ActivityLoginBinding override fun onCreate ( savedInstanceState : Bundle?) { try { Thread . sleep ( 1000 ) } catch ( e : InterruptedException ) { e . printStackTrace () } setTheme ( R . style . Theme_PublicTransport ) super . onCreate ( savedInstanceState ) binding = ActivityLoginBinding . inflate ( layoutInflater ) setContentView ( binding . root ) } lateinit A lateinit kulcssz\u00f3val megjel\u00f6lt property-ket a ford\u00edt\u00f3 megengedi inicializ\u00e1latlanul hagyni az oszt\u00e1ly konstruktor\u00e1nak lefut\u00e1sa ut\u00e1nig, an\u00e9lk\u00fcl, hogy nullable-k\u00e9nt k\u00e9ne azokat megjel\u00f6ln\u00fcnk (ami k\u00e9s\u0151bb k\u00e9nyelmetlenn\u00e9 tenn\u00e9 a haszn\u00e1latukat, mert mindig ellen\u0151rizn\u00fcnk k\u00e9ne, hogy null -e az \u00e9rt\u00e9k\u00fck). Ez praktikus olyan esetekben, amikor egy oszt\u00e1ly inicializ\u00e1l\u00e1sa nem a konstruktor\u00e1ban t\u00f6rt\u00e9nik (p\u00e9ld\u00e1ul ahogy az Activity -k eset\u00e9ben az onCreate -ben), mert k\u00e9s\u0151bb az esetleges null eset lekezel\u00e9se n\u00e9lk\u00fcl haszn\u00e1lhatjuk majd a property-t. A lateinit haszn\u00e1lat\u00e1val \u00e1tv\u00e1llaljuk a felel\u0151ss\u00e9get a ford\u00edt\u00f3t\u00f3l, hogy a property-t az els\u0151 haszn\u00e1lata el\u0151tt inicializ\u00e1lni fogjuk - ellenkez\u0151 esetben kiv\u00e9telt kapunk. Ezek ut\u00e1n m\u00e1r be is \u00e1ll\u00edthatjuk a gombunk esem\u00e9nykezel\u0151it: binding . btnLogin . setOnClickListener { if ( binding . etEmailAddress . text . toString (). isEmpty ()) { binding . etEmailAddress . requestFocus () binding . etEmailAddress . error = \"Please enter your email address\" } else if ( binding . etPassword . text . toString (). isEmpty ()) { binding . etPassword . requestFocus () binding . etPassword . error = \"Please enter your password\" } else { // TODO login } } Amennyiben valamelyik EditText \u00fcres volt, a requestFocus f\u00fcggv\u00e9ny megh\u00edv\u00e1s\u00e1val akt\u00edvv\u00e1 tessz\u00fck, majd az error property be\u00e1ll\u00edt\u00e1s\u00e1val ki\u00edrunk r\u00e1 egy hiba\u00fczenetet. Ez egy k\u00e9nyelmes, be\u00e9p\u00edtett megold\u00e1s input hib\u00e1k jelz\u00e9s\u00e9re. \u00cdgy nem kell p\u00e9ld\u00e1ul egy k\u00fcl\u00f6n TextView -t haszn\u00e1lnunk erre a c\u00e9lra, \u00e9s abba bele\u00edrni a fell\u00e9p\u0151 hib\u00e1t. Ezt m\u00e1r ak\u00e1r ki is pr\u00f3b\u00e1lhatjuk, b\u00e1r helyes adatok megad\u00e1sa eset\u00e9n m\u00e9g nem t\u00f6rt\u00e9nik semmi. setOnClickListener A setOnClickListener f\u00fcggv\u00e9ny val\u00f3j\u00e1ban olyan objektumot v\u00e1r param\u00e9terk\u00e9nt, ami megval\u00f3s\u00edtja a View.OnClickListener interf\u00e9szt. Ezt Java-ban anonim objektumokkal szok\u00e1s megoldani, amit meg lehet tenni Kotlin nyelven is.Ehelyett azonban \u00e9rdemesebb kihaszn\u00e1lni, hogy a Kotlin rendelkezik igazi f\u00fcggv\u00e9ny t\u00edpusokkal, \u00edgy megadhat\u00f3 egy olyan lambda kifejez\u00e9s , amelynek a fejl\u00e9ce megegyezik az elv\u00e1rt interf\u00e9sz egyetlen f\u00fcggv\u00e9ny\u00e9nek fejl\u00e9c\u00e9vel. Ez alapj\u00e1n pedig a SAM conversion nev\u0171 nyelvi funkci\u00f3 a h\u00e1tt\u00e9rben a lambda alapj\u00e1n l\u00e9trehozza a megfelel\u0151 View.OnClickListener p\u00e9ld\u00e1nyt. BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a login k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod az e-mail mez\u0151be beg\u00e9pelve . A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Login k\u00e9perny\u0151 (0.5 pont)"},{"location":"laborok/02-android-ui/#lehetosegek-listaja-1-pont","text":"A k\u00f6vetkez\u0151 k\u00e9perny\u0151n a felhaszn\u00e1l\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171t\u00edpusok k\u00f6z\u00fcl v\u00e1laszhat. Egyel\u0151re h\u00e1rom szolg\u00e1ltat\u00e1s m\u0171k\u00f6dik a fikt\u00edv v\u00e1llalatunkban: biciklik, buszok illetve vonatok. Hozzunk ehhez l\u00e9tre egy \u00faj Activity-t (a package-\u00fcnk\u00f6n jobb klikk > New > Activity > Empty Activity), nevezz\u00fck el ListActivity -nek. Most, hogy ez m\u00e1r l\u00e9tezik, menj\u00fcnk vissza a LoginActivity k\u00f3dj\u00e1ban l\u00e9v\u0151 TODO-hoz, \u00e9s ind\u00edtsuk ott el ezt az \u00faj Activity-t: binding . btnLogin . setOnClickListener { ... else { startActivity ( Intent ( this , ListActivity :: class . java )) } } Folytassuk a layout elk\u00e9sz\u00edt\u00e9s\u00e9vel a munk\u00e1t, az activity_list.xml tartalm\u00e1t cser\u00e9lj\u00fck ki az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:weightSum= \"3\" tools:context= \".ListActivity\" > <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> Ism\u00e9t egy f\u00fcgg\u0151leges LinearLayout-ot haszn\u00e1lunk, most azonban s\u00falyokat adunk meg benne. A gy\u00f6k\u00e9relemben megadjuk, hogy a s\u00falyok \u00f6sszege ( weightSum ) 3 lesz, \u00e9s mindh\u00e1rom gyerek\u00e9nek 1 -es s\u00falyt ( layout_weight ), \u00e9s 0dp magass\u00e1got adunk. Ezzel azt \u00e9rj\u00fck el, hogy h\u00e1rom egyenl\u0151 r\u00e9szre osztjuk a k\u00e9perny\u0151t, amit a h\u00e1rom FrameLayout fog elfoglalni. A FrameLayout egy nagyon egyszer\u0171 \u00e9s gyors elrendez\u00e9s, amely l\u00e9nyeg\u00e9ben csak egym\u00e1s tetej\u00e9re teszi a gyerekeik\u00e9nt szerepl\u0151 View-kat. Ezeken bel\u00fcl egy-egy k\u00e9pet, illetve azokon egy-egy feliratot fogunk elhelyezni. A h\u00e1rom s\u00e1vb\u00f3l az els\u0151t \u00edgy k\u00e9sz\u00edthetj\u00fck el: <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" > <ImageButton android:id= \"@+id/btnBike\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:gravity= \"center\" android:padding= \"0dp\" android:scaleType= \"centerCrop\" android:src= \"@drawable/bikes\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"@string/bike\" android:textColor= \"#FFF\" android:textSize= \"36sp\" /> </FrameLayout> Az itt haszn\u00e1lt ImageButton pont az, aminek hangzik: egy olyan gomb, amelyen egy k\u00e9pet helyezhet\u00fcnk el. Azt, hogy ez melyik legyen, az src attrib\u00fatummal adtuk meg. Az ut\u00e1na szerepl\u0151 TextView feh\u00e9r sz\u00ednnel \u00e9s nagy m\u00e9ret\u0171 bet\u0171kkel a k\u00e9p f\u00f6l\u00e9 fog ker\u00fclni, ebbe \u00edrjuk bele a j\u00e1rm\u0171 nev\u00e9t. A @string/bike hib\u00e1t jelez. Mint l\u00e1that\u00f3, itt sem egy konkr\u00e9t sz\u00f6veget, hanem egy hivatkoz\u00e1st haszn\u00e1lunk. Ez az\u00e9rt hasznos, mert \u00edgy egy helyre tudjuk szervezni a sz\u00f6veges er\u0151forr\u00e1sainkat ( strings.xml ), \u00edgy egyszer\u0171en lokaliz\u00e1lhatjuk az alkalmaz\u00e1sunkat er\u0151forr\u00e1smin\u0151s\u00edt\u0151k seg\u00edts\u00e9g\u00e9vel. Adjunk teh\u00e1t \u00e9rt\u00e9ket a @strings/bike elemnek. Ezt megtehetj\u00fck k\u00e9zzel is a strings.xml -ben, de Alt+Enter rel a helyi men\u00fcben is: <string name= \"bike\" > Bike </string> T\u00f6lts\u00fck ki ehhez hasonl\u00f3 m\u00f3don a m\u00e1sik k\u00e9t FrameLayout -ot is, ID-k\u00e9nt haszn\u00e1ljuk a @+id/btnBus \u00e9s @+id/btnTrain \u00e9rt\u00e9keket, k\u00e9pnek pedig haszn\u00e1lhatjuk a kor\u00e1bban m\u00e1r bem\u00e1solt @drawable/bus \u00e9s @drawable/trains er\u0151forr\u00e1sokat. Ne felejts\u00fck el a TextView -k sz\u00f6veg\u00e9t is \u00e9rtelemszer\u0171en \u00e1t\u00edrni. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1sunkat, bejelentkez\u00e9s ut\u00e1n a most elk\u00e9sz\u00edtett lista n\u00e9zethez kell jutnunk. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a j\u00e1rm\u00favek list\u00e1ja (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Lehet\u0151s\u00e9gek list\u00e1ja (1 pont)"},{"location":"laborok/02-android-ui/#reszletes-nezet-1-pont","text":"Miut\u00e1n a felhaszn\u00e1l\u00f3 kiv\u00e1lasztotta a k\u00edv\u00e1nt k\u00f6zleked\u00e9si eszk\u00f6zt, n\u00e9h\u00e1ny tov\u00e1bbi opci\u00f3t fogunk m\u00e9g felaj\u00e1nlani sz\u00e1m\u00e1ra. Ezen a k\u00e9perny\u0151n fogja kiv\u00e1lasztani a b\u00e9rleten szerepl\u0151 d\u00e1tumokat, illetve a r\u00e1 vonatkoz\u00f3 kedvezm\u00e9nyt, amennyiben van ilyen. Hozzuk l\u00e9tre ezt az \u00faj Activity-t DetailsActivity n\u00e9ven, a layout-j\u00e1t kezdj\u00fck az al\u00e1bbi k\u00f3ddal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:clipToPadding= \"false\" android:padding= \"16dp\" android:scrollbarStyle= \"outsideInset\" tools:context= \".DetailsActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" > </LinearLayout> </ScrollView> Az eddigiekhez k\u00e9pest itt \u00fajdons\u00e1g, hogy a haszn\u00e1lt LinearLayout -ot egy ScrollView -ba tessz\u00fck, mivel sok n\u00e9zetet fogunk egym\u00e1s alatt elhelyezni, \u00e9s alap\u00e9rtelmezetten egy LinearLayout nem g\u00f6rgethet\u0151, \u00edgy ezek bizonyos eszk\u00f6z\u00f6k\u00f6n m\u00e1r a k\u00e9perny\u0151n k\u00edv\u00fcl lenn\u00e9nek. Kezdj\u00fck el \u00f6sszerakni a sz\u00fcks\u00e9ges layout-ot a LinearLayout belsej\u00e9ben. Az oldal tetej\u00e9re elhelyez\u00fcnk egy c\u00edmet, amely a kiv\u00e1lasztott jegy t\u00edpus\u00e1t fogja megjelen\u00edteni. <TextView android:id= \"@+id/tvTicketType\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:textSize= \"24sp\" tools:text= \"Bus ticket\" /> Az itt haszn\u00e1lt tools n\u00e9vt\u00e9rrel megadott text attrib\u00fatum hat\u00e1sa csak az el\u0151n\u00e9zetben fog megjelenni, az alkalmaz\u00e1sban ezt majd a Kotlin k\u00f3db\u00f3l \u00e1ll\u00edtjuk be, az el\u0151z\u0151 k\u00e9perny\u0151n megnyomott gomb f\u00fcggv\u00e9ny\u00e9ben. Az els\u0151 be\u00e1ll\u00edt\u00e1s ezen a k\u00e9perny\u0151n a b\u00e9rlet \u00e9rv\u00e9nyess\u00e9g\u00e9nek id\u0151tartama lesz. Ezt az \u00e9rv\u00e9nyess\u00e9g els\u0151 \u00e9s utols\u00f3 napj\u00e1nak megad\u00e1s\u00e1val tessz\u00fck, amelyhez a DatePicker oszt\u00e1lyt haszn\u00e1ljuk fel. Ez alap\u00e9rtelmezetten egy teljes havi napt\u00e1r n\u00e9zetet jelen\u00edt meg, azonban a calendarViewShown=\"false\" \u00e9s a datePickerMode=\"spinner\" be\u00e1ll\u00edt\u00e1sokkal egy kompaktabb, \"p\u00f6rgethet\u0151\" v\u00e1laszt\u00f3t kapunk. <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Start date\" /> <DatePicker android:id= \"@+id/dpStartDate\" android:layout_width= \"match_parent\" android:layout_height= \"160dp\" android:calendarViewShown= \"false\" android:datePickerMode= \"spinner\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"End date\" /> <DatePicker android:id= \"@+id/dpEndDate\" android:layout_width= \"match_parent\" android:layout_height= \"160dp\" android:calendarViewShown= \"false\" android:datePickerMode= \"spinner\" /> Ezeknek a DatePicker -eknek is adtunk ID-kat, hiszen k\u00e9s\u0151bb sz\u00fcks\u00e9g\u00fcnk lesz a Kotlin k\u00f3dunkban a rajtuk be\u00e1ll\u00edtott \u00e9rt\u00e9kekre. M\u00e9g egy be\u00e1ll\u00edt\u00e1s van h\u00e1tra, az \u00e1rkateg\u00f3ria kiv\u00e1laszt\u00e1sa - nyugd\u00edjasoknak \u00e9s k\u00f6zalkalmazottaknak k\u00fcl\u00f6nb\u00f6z\u0151 kedvezm\u00e9nyeket adunk a jegyek \u00e1r\u00e1b\u00f3l. Mivel ezek k\u00f6z\u00fcl az opci\u00f3k k\u00f6z\u00fcl egyszerre csak egynek akarjuk megengedni a kiv\u00e1laszt\u00e1s\u00e1t, ez\u00e9rt RadioButton -\u00f6ket fogunk haszn\u00e1lni, amelyeket Androidon egy RadioGroup -pal kell \u00f6sszefognunk, hogy jelezz\u00fck, melyikek tartoznak \u00f6ssze. <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Price category\" /> <RadioGroup android:id= \"@+id/rgPriceCategory\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" > <RadioButton android:id= \"@+id/rbFullPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:checked= \"true\" android:text= \"Full price\" /> <RadioButton android:id= \"@+id/rbSenior\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Senior\" /> <RadioButton android:id= \"@+id/rbPublicServant\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Public servant\" /> </RadioGroup> FONTOS Fontos, hogy adjunk ID-t a teljes csoportnak, \u00e9s a benne l\u00e9v\u0151 minden opci\u00f3nak is, mivel k\u00e9s\u0151bb ezek alapj\u00e1n tudjuk majd megn\u00e9zni, hogy melyik van kiv\u00e1lasztva. V\u00e9g\u00fcl az oldal alj\u00e1n ki\u00edrjuk a kiv\u00e1lasztott b\u00e9rlet \u00e1r\u00e1t, illetve ide ker\u00fcl a megv\u00e1s\u00e1rl\u00e1shoz haszn\u00e1lhat\u00f3 gomb is. Az \u00e1rnak egyel\u0151re csak egy fix \u00e9rt\u00e9ket \u00edrunk ki. <TextView android:id= \"@+id/tvPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"8dp\" android:text= \"42000\" /> <Button android:id= \"@+id/btnPurchase\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"8dp\" android:text= \"Purchase pass\" /> Ne felejts\u00fck el, a stringeket itt is kiszervezni! Meg kell oldanunk m\u00e9g azt, hogy az el\u0151z\u0151 k\u00e9perny\u0151n tett v\u00e1laszt\u00e1s eredm\u00e9nye el\u00e9rhet\u0151 legyen a DetailsActivity -ben. Ezt \u00fagy tehetj\u00fck meg, hogy az Activity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent -be tesz\u00fcnk egy azonos\u00edt\u00f3t, amib\u0151l kider\u00fcl, hogy melyik t\u00edpust v\u00e1lasztotta a felhaszn\u00e1l\u00f3. Ehhez a DetailsActivity -ben vegy\u00fcnk fel egy konstanst, ami ennek a param\u00e9ternek a kulcsak\u00e9nt fog szolg\u00e1lni: class DetailsActivity : AppCompatActivity () { companion object { const val KEY_TRANSPORT_TYPE = \"KEY_TRANSPORT_TYPE\" } ... } Ezut\u00e1n menj\u00fcnk a ListActivity k\u00f3dj\u00e1hoz, \u00e9s vegy\u00fcnk fel konstansokat a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e1mogatott j\u00e1rm\u0171veknek: class ListActivity : AppCompatActivity () { companion object { const val TYPE_BIKE = 1 const val TYPE_BUS = 2 const val TYPE_TRAIN = 3 } ... } static A Kotlin egy nagy elt\u00e9r\u00e9se az eddig ismert, megszokott OOP nyelvekt\u0151l, hogy nincs benne static kulcssz\u00f3, \u00e9s \u00edgy nincsenek statikus v\u00e1ltoz\u00f3k vagy f\u00fcggv\u00e9nyek sem. Ehelyett minden oszt\u00e1lyhoz lehet defini\u00e1lni egy companion object -et , ami egy olyan singleton-t defini\u00e1l, ami az oszt\u00e1ly \u00f6sszes p\u00e9ld\u00e1ny\u00e1n kereszt\u00fcl el\u00e9rhet\u0151. R\u00f6viden, minden companion object -en bel\u00fcl defini\u00e1lt konstans, v\u00e1ltoz\u00f3, f\u00fcggv\u00e9ny \u00fagy viselkedik, mintha statikus lenne. Most m\u00e1r l\u00e9trehozhatjuk a gombok listener-jeit, amelyek elind\u00edtj\u00e1k a DetailsActivity -t, extr\u00e1nak belet\u00e9ve a kiv\u00e1lasztott t\u00edpust. Az els\u0151 gomb listenerj\u00e9nek be\u00e1ll\u00edt\u00e1s\u00e1t \u00edgy tehetj\u00fck meg a ViewBinding be\u00e1ll\u00edt\u00e1sa ut\u00e1n: lateinit var binding : ActivityListBinding ... override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityListBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . btnBike . setOnClickListener { val intent = Intent ( this , DetailsActivity :: class . java ) intent . putExtra ( DetailsActivity . KEY_TRANSPORT_TYPE , TYPE_BIKE ) startActivity ( intent ) } } A m\u00e1sik k\u00e9t gomb listener-je ugyanerre a mint\u00e1ra m\u0171k\u00f6dik, csup\u00e1n az \u00e1tadott t\u00edpus konstanst kell megv\u00e1ltoztatni benn\u00fck. Hozzuk l\u00e9tre ezeket is! (Ezt a viselked\u00e9st \u00e9rdemes lehet k\u00e9s\u0151bb kiszervezni egy k\u00fcl\u00f6n oszt\u00e1lyba, ami implement\u00e1lja az OnClickListener interf\u00e9szt, de ezt most nem tessz\u00fck meg.) M\u00e9g h\u00e1tra van az, hogy a DetailsActivity -ben kiolvassuk ezt az \u00e1tadott param\u00e9tert, \u00e9s megjelen\u00edts\u00fck a felhaszn\u00e1l\u00f3nak. Ezt az onCreate f\u00fcggv\u00e9ny\u00e9ben tehetj\u00fck meg, az Activity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent elk\u00e9r\u00e9s\u00e9vel ( intent property), majd az el\u0151bbi kulcs haszn\u00e1lat\u00e1val: val transportType = this . intent . getIntExtra ( KEY_TRANSPORT_TYPE , - 1 ) Ezt az \u00e1tadott sz\u00e1mot m\u00e9g le kell k\u00e9pezn\u00fcnk egy stringre, ehhez vegy\u00fcnk fel egy egyszer\u0171 seg\u00e9df\u00fcggv\u00e9nyt: private fun getTypeString ( transportType : Int ): String { return when ( transportType ) { ListActivity . TYPE_BUS -> \"Bus pass\" ListActivity . TYPE_TRAIN -> \"Train pass\" ListActivity . TYPE_BIKE -> \"Bike pass\" else -> \"Unknown pass type\" } } when Egy m\u00e1sik nagy elt\u00e9r\u00e9se a Kotlin-nak a megszokott nyelvekt\u0151l, hogy nincs benne switch . Helyette a Kotlin egy when nev\u0171 szerkezetet haszn\u00e1l, ami egyr\u00e9szr\u0151l egy kifejet\u00e9s (l\u00e1that\u00f3, hogy az \u00e9rt\u00e9ke vissza van adva), m\u00e1sr\u00e9szr\u0151l pedig sokkal sokoldal\u00fabb felt\u00e9teleket k\u00edn\u00e1l, mint a hagyom\u00e1nyos case . V\u00e9g\u00fcl pedig az onCreate f\u00fcggv\u00e9nybe visszat\u00e9rve meg kell keresn\u00fcnk a megfelel\u0151 TextView -t, \u00e9s be\u00e1ll\u00edtani a sz\u00f6veg\u00e9nek a f\u00fcggv\u00e9ny \u00e1ltal visszaadott \u00e9rt\u00e9ket (k\u00e9sz\u00edts\u00fck el a ViewBindingot is): binding . tvTicketType . text = getTypeString ( transportType ) Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! A DetailsActivity -ben meg kell jelennie a hozz\u00e1adott be\u00e1ll\u00edt\u00e1soknak, illetve a tetej\u00e9n a megfelel\u0151 jegy t\u00edpusnak. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a r\u00e9szletes n\u00e9zet (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"R\u00e9szletes n\u00e9zet (1 pont)"},{"location":"laborok/02-android-ui/#a-berlet-1-pont","text":"Az alkalmaz\u00e1s utols\u00f3 k\u00e9perny\u0151je m\u00e1r kifejezetten egyszer\u0171 lesz, ez mag\u00e1t a b\u00e9rletet fogja reprezent\u00e1lni. Itt a b\u00e9rlet t\u00edpus\u00e1t \u00e9s \u00e9rv\u00e9nyess\u00e9gi idej\u00e9t fogjuk megjelen\u00edteni, illetve egy QR k\u00f3dot, amivel ellen\u0151rizni lehet a b\u00e9rletet. Hozzuk l\u00e9tre a sz\u00fcks\u00e9ges Activity-t, PassActivity n\u00e9ven. Ennek az Activity-nek sz\u00fcks\u00e9ge lesz a jegy t\u00edpus\u00e1ra \u00e9s a kiv\u00e1lasztott d\u00e1tumokra - a QR k\u00f3d az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt egy fix k\u00e9p lesz. Az adatok \u00e1tad\u00e1s\u00e1hoz el\u0151sz\u00f6r vegy\u00fcnk fel k\u00e9t kulcsot a PassActivity -ben: class PassActivity : AppCompatActivity () { companion object { const val KEY_DATE_STRING = \"KEY_DATE_STRING\" const val KEY_TYPE_STRING = \"KEY_TYPE_STRING\" } ... } Ezeket az adatokat a DetailsActivity -ben kell \u00f6sszek\u00e9sz\u00edten\u00fcnk \u00e9s beleraknunk az Intent -be. Ehhez adjunk hozz\u00e1 a v\u00e1s\u00e1rl\u00e1s gombhoz egy listener-t az onCreate -ben: binding . btnPurchase . setOnClickListener { val typeString = getTypeString ( transportType ) val dateString = \" ${ getDateFrom ( binding . dpStartDate ) } - ${ getDateFrom ( binding . dpEndDate ) } \" val intent = Intent ( this , PassActivity :: class . java ) intent . putExtra ( PassActivity . KEY_TYPE_STRING , typeString ) intent . putExtra ( PassActivity . KEY_DATE_STRING , dateString ) startActivity ( intent ) } L\u00e1that\u00f3, hogy a Java-val ellent\u00e9tben a Kotlin t\u00e1mogatja a string interpol\u00e1ci\u00f3t . Ebben \u00f6sszegy\u0171jtj\u00fck a sz\u00fcks\u00e9ges adatokat, \u00e9s a megfelel\u0151 kulcsokkal elhelyezz\u00fck \u0151ket a PassActivity ind\u00edt\u00e1s\u00e1hoz haszn\u00e1lt Intent -ben. A getDateFrom egy seg\u00e9df\u00fcggv\u00e9ny lesz, ami egy DatePicker -t kap param\u00e9terk\u00e9nt, \u00e9s form\u00e1zott stringk\u00e9nt visszaadja az \u00e9ppen kiv\u00e1lasztott d\u00e1tumot, ennek implement\u00e1ci\u00f3ja a k\u00f6vetkez\u0151: private fun getDateFrom ( picker : DatePicker ): String { return String . format ( Locale . getDefault (), \"%04d.%02d.%02d.\" , picker . year , picker . month + 1 , picker . dayOfMonth ) } Megjegyz\u00e9s Itt a h\u00f3naphoz az\u00e9rt adtunk hozz\u00e1 egyet, mert ak\u00e1rcsak a Calendar oszt\u00e1ly eset\u00e9ben, a DatePicker oszt\u00e1lyn\u00e1l is 0 indexel\u00e9s\u0171ek a h\u00f3napok.) Most m\u00e1r elk\u00e9sz\u00edthetj\u00fck a PassActivity -t. Kezdj\u00fck a layout-j\u00e1val ( activity_pass.xml ), aminek m\u00e1r majdnem minden elem\u00e9t haszn\u00e1ltuk, az egyetlen \u00fajdons\u00e1g itt az ImageView haszn\u00e1lata. <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".PassActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_margin= \"16dp\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/tvTicketType\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:textSize= \"24sp\" tools:text= \"Train pass\" /> <TextView android:id= \"@+id/tvDates\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:layout_margin= \"16dp\" tools:text= \"1999.11.22. - 2012.12.21.\" /> <ImageView android:layout_width= \"300dp\" android:layout_height= \"300dp\" android:layout_gravity= \"center\" android:src= \"@drawable/qrcode\" /> </LinearLayout> </ScrollView> Az Activity Kotlin k\u00f3dj\u00e1ban pedig csak a k\u00e9t TextView sz\u00f6veg\u00e9t kell az Intent -ben megkapott \u00e9rt\u00e9kekre \u00e1ll\u00edtanunk az onCreate f\u00fcggv\u00e9nyben(illetve be\u00e1ll\u00edtani a ViewBindingot ): binding . tvTicketType . text = intent . getStringExtra ( KEY_TYPE_STRING ) binding . tvDates . text = intent . getStringExtra ( KEY_DATE_STRING ) BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"A b\u00e9rlet (1 pont)"},{"location":"laborok/02-android-ui/#onallo-feladat-hajo-berlet-1-pont","text":"V\u00e1llalatunk terjeszked\u00e9s\u00e9vel elindult a haj\u00f3j\u00e1ratokat aj\u00e1nl\u00f3 szolg\u00e1ltat\u00e1sunk is. Adjuk hozz\u00e1 ezt az \u00faj b\u00e9rlet t\u00edpust az alkalmaz\u00e1sunkhoz! Megold\u00e1s A sz\u00fcks\u00e9ges v\u00e1ltoztat\u00e1sok nagy r\u00e9sze a ListActivity -ben lesz. El\u0151sz\u00f6r friss\u00edts\u00fck az Activity layout-j\u00e1t: itt egy \u00faj FrameLayout -ot kell hozz\u00e1adnunk, amiben a gomb ID-ja legyen @+id/btnBoat . A sz\u00fcks\u00e9ges k\u00e9pet m\u00e1r tartalmazza a projekt, ezt @drawable/boat n\u00e9ven tal\u00e1ljuk meg. Ne felejts\u00fck el a gy\u00f6k\u00e9relem\u00fcnkk\u00e9nt szolg\u00e1l\u00f3 LinearLayout -ban \u00e1t\u00e1ll\u00edtani a weightSum attrib\u00fatumot 3 -r\u00f3l 4 -re, hiszen most m\u00e1r ennyi a benne tal\u00e1lhat\u00f3 View-k s\u00falyainak \u00f6sszege. (Kipr\u00f3b\u00e1lhatjuk, hogy mi t\u00f6rt\u00e9nik, ha p\u00e9ld\u00e1ul 1 -re, vagy 2.5 -re \u00e1ll\u00edtjuk ezt a sz\u00e1mot, a hat\u00e1s\u00e1nak m\u00e1r az el\u0151n\u00e9zetben is l\u00e1tszania kell.) Menj\u00fcnk az Activity Kotlin f\u00e1jlj\u00e1ba, \u00e9s k\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt vegy\u00fcnk fel egy \u00faj konstanst a haj\u00f3 t\u00edpus jel\u00f6l\u00e9s\u00e9re. const val TYPE_BOAT = 4 Az el\u0151z\u0151 h\u00e1rom t\u00edpussal azonos m\u00f3don keress\u00fck a haj\u00f3t kiv\u00e1laszt\u00f3 gombra ( btnBoat ) is \u00e1ll\u00edtsunk be r\u00e1 egy listener-t, amely elind\u00edtja a DetailsActivity -t, a TYPE_BOAT konstanst \u00e1tadva az Intent -ben param\u00e9terk\u00e9nt. M\u00e9g egy dolgunk maradt, a DetailsActivity k\u00f3dj\u00e1ban \u00e9rtelmezn\u00fcnk kell ezt a param\u00e9tert. Ehhez a getTypeString f\u00fcggv\u00e9nyen bel\u00fcl vegy\u00fcnk fel egy \u00faj \u00e1gat a when -ben: ListActivity . TYPE_BOAT -> \"Boat pass\" BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts k\u00e9t k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a j\u00e1rm\u0171 v\u00e1laszt\u00f3 k\u00e9perny\u0151 illetve a haj\u00f3 b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), \u00e9s az ezekhez tartoz\u00f3 k\u00f3dr\u00e9szlet , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9peket a megold\u00e1sban a repository-ba f6.png \u00e9s f7.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9pek sz\u00fcks\u00e9ges felt\u00e9telei a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"\u00d6n\u00e1ll\u00f3 feladat - Haj\u00f3 b\u00e9rlet (1 pont)"},{"location":"laborok/02-android-ui/#imsc-feladat","text":"Kor\u00e1bban a r\u00e9szletes n\u00e9zetben egy fix \u00e1rat \u00edrtunk ki a k\u00e9perny\u0151re. \u00cdrjuk meg a b\u00e9rlet \u00e1r\u00e1t kisz\u00e1mol\u00f3 logik\u00e1t, \u00e9s ahogy a felhaszn\u00e1l\u00f3 v\u00e1ltoztatja a b\u00e9rlet param\u00e9tereit, friss\u00edts\u00fck a megjelen\u00edtett \u00e1rat. Az \u00e1raz\u00e1s a k\u00f6vetkez\u0151 m\u00f3don m\u0171k\u00f6dj\u00f6n: K\u00f6zleked\u00e9si eszk\u00f6z B\u00e9rlet \u00e1ra naponta Bicikli 700 Busz 1000 Vonat 1500 Haj\u00f3 2500 Ebb\u0151l m\u00e9g az al\u00e1bbi kedvezm\u00e9nyeket adjuk: \u00c1rkateg\u00f3ria Kedvezm\u00e9ny m\u00e9rt\u00e9ke Teljes \u00e1r\u00fa 0% Nyugd\u00edjas 90% K\u00f6zalkalmazott 50% Tipp A sz\u00e1mol\u00e1sokhoz \u00e9s az esem\u00e9nykezel\u00e9shez a Calendar oszt\u00e1lyt, a DatePicker oszt\u00e1ly init f\u00fcggv\u00e9ny\u00e9t, illetve a RadioGroup oszt\u00e1ly setOnCheckedChangeListener oszt\u00e1ly\u00e1t \u00e9rdemes haszn\u00e1lni.","title":"iMSc feladat"},{"location":"laborok/02-android-ui/#kulonbozo-berlet-napi-arak-1-imsc-pont","text":"BEADAND\u00d3 (1 IMSc pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik egy t\u00f6bb napos b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rlet\u00e1rakkal kapcsolatos k\u00f3ddal , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f8.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"K\u00fcl\u00f6nb\u00f6z\u0151 b\u00e9rlet napi \u00e1rak (1 IMSc pont)"},{"location":"laborok/02-android-ui/#szazalekos-kedvezmenyek-1-imsc-pont","text":"BEADAND\u00d3 (1 IMSc pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik egy t\u00f6bb napos kedvezm\u00e9nyes b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rletkedvezm\u00e9nyekkel kapcsolatos k\u00f3ddal , valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f9.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Sz\u00e1zal\u00e9kos kedvezm\u00e9nyek ( 1 IMSc pont)"},{"location":"laborok/03-android-ui-adv/","text":"Labor 03 - Felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se \u00e9s k\u00e9sz\u00edt\u00e9se Android platformon \u00b6 Bevezet\u0151 \u00b6 A labor c\u00e9lja egy egyszer\u0171 felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se, kivitelez\u00e9se. A feladat egy kiad\u00e1s / bev\u00e9tel napl\u00f3z\u00e1s\u00e1ra alkalmas alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se AndroidWallet n\u00e9ven. Az alkalmaz\u00e1s alap funkcionalit\u00e1sa, hogy a felhaszn\u00e1l\u00f3 fel tudja venni egy list\u00e1ba a kiad\u00e1sait, bev\u00e9teleit, illetve t\u00f6r\u00f6lni tudja az eg\u00e9sz lista tartalm\u00e1t. A k\u00e9sz alkalmaz\u00e1s mintak\u00e9pe: Az alkalmaz\u00e1s fel\u00e9p\u00edt\u00e9se \u00e9s m\u0171k\u00f6d\u00e9se a k\u00f6vetkez\u0151: Kezd\u0151k\u00e9perny\u0151 a list\u00e1val illetve egy beviteli r\u00e9sszel, amelyen a felhaszn\u00e1l\u00f3 be\u00edr egy megnevez\u00e9st \u00e9s egy \u00f6sszeget, megadja a p\u00e9nzforgalom ir\u00e1ny\u00e1t, \u00e9s el tudja menteni a list\u00e1ba a tranzakci\u00f3j\u00e1t. Amennyiben itt b\u00e1rmelyik mez\u0151 \u00fcres, a ment\u00e9st meg kell akad\u00e1lyoznunk. Egy listaelem fel\u00e9p\u00edt\u00e9se: Ikon a p\u00e9nzforgalom ir\u00e1ny\u00e1t\u00f3l f\u00fcgg\u0151en. A megadott megnevez\u00e9s \u00e9s alatta az \u00f6sszeg. A Toolbaron egy men\u00fcpont a lista teljes t\u00f6rl\u00e9s\u00e9re. A lista g\u00f6rgethet\u0151 kell legyen Felhaszn\u00e1lt technol\u00f3gi\u00e1k: \u00b6 Activity LinearLayout, TextView, ImageView, EditText, Button, ToggleButton LayoutInflater El\u0151k\u00e9sz\u00fcletek \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Projekt l\u00e9trehoz\u00e1sa \u00b6 Hozzunk l\u00e9tre egy AndroidWallet nev\u0171 projektet Android Studioban: File->New->New Project v\u00e1lasszuk az Empty Activity-t Application name: AndroidWallet package name: hu.bme.aut.android.androidwallet a ment\u00e9si hely a kicheckoutolt repository-n bel\u00fcl az AndroidWallet mappa Minumum API level: 21 Finish, \u00e9s v\u00e1rjuk meg am\u00edg a Studio mindent legener\u00e1l. (Ez els\u0151 alkalomkor valamivel hosszabb id\u0151t vesz ig\u00e9nybe.) Men\u00fc elk\u00e9sz\u00edt\u00e9se \u00b6 Els\u0151 l\u00e9p\u00e9sben k\u00e9sz\u00edts\u00fck el a men\u00fct. Bal oldalon a res k\u00f6nyvt\u00e1ron nyomjunk jobb klikket \u00e9s a men\u00fcb\u0151l hozzunk l\u00e9tre egy \u00faj Android Resource File elemet. Itt a var\u00e1zsl\u00f3ban mindent kis is tudunk v\u00e1lasztani: A menu_main tartalma legyen az al\u00e1bbi: <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:id= \"@+id/action_delete_all\" android:title= \"Delete All\" /> </menu> Ne felejts\u00fck el kiszervezni a string er\u0151forr\u00e1st! Ezt egyszer\u0171en megtehetj\u00fck a Delete All sz\u00f6vegen \u00e1llva az Alt + Enter konbin\u00e1ci\u00f3t megnyomva, az Extract string resource opci\u00f3val. Adjuk meg a nevet: delete_all L\u00e1thatjuk, hogy Android platformon a men\u00fct is egyszer\u0171 XML er\u0151forr\u00e1sb\u00f3l tudjuk felvenni. A fenti esetben egyetlen elemet tett\u00fcnk a men\u00fcbe, amelyet majd az action_delete_all id-val tudunk hivatkozni. Ahhoz, hogy az im\u00e9nt l\u00e9trehozott men\u00fc felker\u00fclj\u00f6n a fel\u00fcletre a MainActivity -b\u0151l fel kell \"f\u00fajjuk\" azt, \u00e9s le kell kezeln\u00fcnk a kattint\u00e1sokat.Ezt az onCreateOptionsMenu \u00e9s az onOptionsItemSelected f\u00fcggv\u00e9nyekkel tudjuk megtenni: override fun onCreateOptionsMenu ( menu : Menu ): Boolean { menuInflater . inflate ( R . menu . menu_main , menu ) return super . onCreateOptionsMenu ( menu ) } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . action_delete_all -> { // TODO: itt fogjuk kezelni a kattint\u00e1st true } else -> super . onOptionsItemSelected ( item ) } } Beviteli r\u00e9sz megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Az alkalmaz\u00e1s m\u0171k\u00f6d\u00e9s\u00e9hez sz\u00fcks\u00e9g lesz k\u00e9t EditText -re, amelyekben a felhaszn\u00e1l\u00f3 a megnevez\u00e9st \u00e9s az \u00f6sszeget adhatja meg. Sz\u00fcks\u00e9ges tov\u00e1bb\u00e1 egy kapcsol\u00f3 m\u0171k\u00f6d\u00e9s\u0171 gomb, p\u00e9ld\u00e1ul egy ToggleButton , amellyel a p\u00e9nzforgalom ir\u00e1nya \u00e1ll\u00edthat\u00f3, illetve kell egy ment\u00e9s gomb, amelyet egy egyszer\u0171 Button fog megval\u00f3s\u00edtani. Egy XML f\u00e1jlt megnyitva k\u00e9t lehet\u0151s\u00e9g\u00fcnk van: vagy a be\u00e9p\u00edtett grafikus szerkeszt\u0151n drag and drop m\u00f3dszerrel \u00f6sszerakjuk a fel\u00fcletet, vagy k\u00e9zzel XML-ben \u00edrjuk meg a komponenseket \u00e9s a tulajdons\u00e1gaikat. El\u0151bbi a tanul\u00e1si f\u00e1zisban nagyon hasznos, mert k\u00f6nnyen tudunk pusk\u00e1zni, viszont k\u00e9s\u0151bb sok fejf\u00e1j\u00e1st okozhat, ez\u00e9rt az XML le\u00edr\u00e1s plusz el\u0151n\u00e9zettel fogjuk megval\u00f3s\u00edtani a feladatot. Mivel a feladatunk line\u00e1risan \u00f6sszerakhat\u00f3 elemekb\u0151l \u00e9p\u00fcl fel, ez\u00e9rt \u00e9rdemes egy ilyen magval\u00f3s\u00edt\u00e1sban gondolkodnunk. Nyissuk meg a res/layout/activity_main.xml f\u00e1jlt. (Akinek nem jelenik meg egyb\u0151l a preview n\u00e9zet, jobb oldalon tal\u00e1lja a gombot.) M\u00f3dos\u00edtsuk az el\u0151re legener\u00e1lt ConstraintLayoutot LinearLayoutra , \u00e9s adjuk hozz\u00e1 az android:orientation=\"vertical\" attrib\u00fatomot. Sz\u00fcks\u00e9g\u00fcnk lesz m\u00e1sik h\u00e1rom LinearLayout-ra: A n\u00e9v \u00e9s \u00f6sszeg mez\u0151nek, horizont\u00e1lis elrendez\u00e9ssel A kiad\u00e1s/bev\u00e9tel kapcsol\u00f3nak \u00e9s ment\u00e9s gombnak, szint\u00e9n horizont\u00e1lis elrendez\u00e9ssel \u00e9s jobbra z\u00e1r\u00e1ssal A t\u00e9nyleges list\u00e1nak, amelyet mivel a lista elemek vertik\u00e1lisan k\u00f6vetik egym\u00e1st, vertik\u00e1lisra \u00e1ll\u00edtunk. \u00cdgy az activity_main.xml -ben a LinearLayout -ok elrendez\u00e9se az al\u00e1bbi lesz: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \".MainActivity\" tools:showIn= \"@layout/activity_main\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:gravity= \"end\" android:orientation= \"horizontal\" > </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" > </LinearLayout> </LinearLayout> Az els\u0151 (nem gy\u00f6k\u00e9r) LinearLayout -ba vegy\u00fck fel a k\u00e9t EditText -et, adjunk nekik id -t, hogy a Kotlin k\u00f3db\u00f3l is egyszer\u0171en el\u00e9rj\u00fck \u0151ket. A k\u00e9t EditText egym\u00e1shoz k\u00e9pesti elhelyezked\u00e9s\u00e9t s\u00falyoz\u00e1ssal fogjuk be\u00e1ll\u00edtani. Mindkett\u0151 legyen singleLine , \u00edgy nem fog sz\u00e9tcs\u00faszni a UI, illetve \u00e9rdemes a megnevez\u00e9s EditText -nek egy actionNext imeOptions -t adni, \u00edgy a felhaszn\u00e1l\u00f3 billenty\u0171zete a k\u00f6vetkez\u0151 EditText -re fog ugrani az Enter/Ok billenty\u0171re: <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <EditText android:id= \"@+id/salary_name\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"0.6\" android:imeOptions= \"actionNext\" android:inputType= \"textCapWords\" android:singleLine= \"true\" /> <EditText android:id= \"@+id/salary_amount\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"0.4\" android:singleLine= \"true\" /> </LinearLayout> A k\u00f6z\u00e9ps\u0151, gombokat tartalmaz\u00f3 LinearLayout -ban a gombokat jobbra szeretn\u00e9nk igaz\u00edtani, ez\u00e9rt a LinearLayout gravity -j\u00e9t end \u00e9rt\u00e9kre \u00e1ll\u00edtjuk. \u00cdgy a k\u00e9t gombot az oper\u00e1ci\u00f3s rendszer szerint be\u00e1ll\u00edtott sz\u00f6vegir\u00e1nyults\u00e1g szerinti v\u00e9g\u00e9re z\u00e1rja a UI. A LinearLayout -ba felvessz\u00fck a ToggleButton -t, a sima Button -t \u00e9s id -t adunk nekik. A ment\u00e9s gombon be\u00e1ll\u00edtsuk be a megjelen\u00edtett feliratot, ez legyen \"SAVE\". Ne felejts\u00fck el ezt is kiszervezni er\u0151forr\u00e1sba! <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:gravity= \"end\" android:orientation= \"horizontal\" > <ToggleButton android:id= \"@+id/expense_or_income\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/save_button\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Save\" /> </LinearLayout> Mivel erre is van lehet\u0151s\u00e9g b\u00e1rmi k\u00f3dol\u00e1s n\u00e9lk\u00fcl, \u00e9rdemes m\u00e1r most be\u00e1ll\u00edtani a ToggleButton k\u00e9t \u00e1llapot\u00e1nak felirat\u00e1t a textOn illetve textOff attrib\u00fatomokkal, amelyhez az \"INCOME\" illetve \"EXPENSE\" string er\u0151forr\u00e1sokat kell felvenn\u00fcnk. <ToggleButton android:id= \"@+id/expense_or_income\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:textOff= \"@string/income\" android:textOn= \"@string/expense\" /> BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a MainActivity fel\u00fclete a beviteli mez\u0151kkel \u00e9s gombokkal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a hozz\u00e1 tartoz\u00f3 k\u00f3ddal , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. A listaelem XML-j\u00e9nek \u00f6ssze\u00e1ll\u00edt\u00e1sa (1 pont) \u00b6 \u00daj elem felv\u00e9telekor azt v\u00e1rjuk, hogy a Save gomb hat\u00e1s\u00e1ra az adott t\u00e9telb\u0151l egy \u00faj sor jelenjen meg a list\u00e1ban. Ezek a sorok komplexek \u00e9s egym\u00e1shoz nagyon hasonl\u00f3ak, \u00edgy \u00e9rdemes az elrendez\u00e9s\u00fcket k\u00fcl\u00f6n elk\u00e9sz\u00edteni, \u00e9s hozz\u00e1ad\u00e1skor csak felhaszn\u00e1lni ezt a megfelel\u0151 param\u00e9terekkel. Egy-egy ilyen elem felhaszn\u00e1l\u00e1sakor p\u00e9ld\u00e1nyos\u00edtanunk kell a fel\u00fcleti elemet, amit a rendszer inflater szolg\u00e1ltat\u00e1s\u00e1val tudunk megtenni. Az inflate -el\u00e9s sor\u00e1n az oper\u00e1ci\u00f3s rendszer egy olyan szolg\u00e1ltat\u00e1s\u00e1t k\u00e9rj\u00fck el, amelyet egy\u00e9b elemekn\u00e9l (pl. Toolbar menu) automatikusan elv\u00e9gez. Mi ezzel most egy el\u0151re meghat\u00e1rozott komponenst, a list\u00e1nk egy elem\u00e9t szeretn\u00e9nk \"felf\u00fajni\" a megfelel\u0151 pillanatban. Figyelem Fontos megjegyezni hogy a k\u00e9s\u0151bbiekben a profi lista kezel\u00e9shez majd a RecyclerView komponenst fogjuk haszn\u00e1lni. LineraLayout -ot lista jelleg\u0171 viselked\u00e9sre haszn\u00e1lni nem aj\u00e1nlott, most csak az inflate -el\u00e9s gyakorl\u00e1s\u00e1hoz haszn\u00e1ljuk. Rakjuk \u00f6ssze el\u0151sz\u00f6r a fel\u00fcleti er\u0151forr\u00e1st. A listaelem\u00fcnk fel\u00e9p\u00edt\u00e9se, az el\u0151z\u0151ekhez hasonl\u00f3an, kivitelezhet\u0151 teljesen line\u00e1ris elrendez\u00e9ssel, \u00edgy ism\u00e9t a LinearLayout -ot haszn\u00e1ljuk. Adjunk hozz\u00e1 a projekt\u00fcnkh\u00f6z a salary_row.xml -t. (res/layout mapp\u00e1n jobb klikk, New -> Layout Resource File) Egy horizont\u00e1lis LinearLayout -tal kezd\u00fcnk, mivel az icon \u00e9s a feliratok egym\u00e1s mellett helyezkednek el. Mivel ez csak egy listaelem lesz, ez\u00e9rt wrap_content -re kell venn\u00fcnk a sz\u00e9less\u00e9g\u00e9t magass\u00e1g\u00e1t. Adjunk neki id -t is. Ebbe a LinearLayout -ba bal oldalra ker\u00fcl az ImageView . A m\u00e9ret\u00e9t \u00e1ll\u00edtsuk be 40x40-re, illetve adjunk neki id -t is. Az ImageView mellett egy f\u00fcgg\u0151leges LinearLayout k\u00f6vezkezik, amiben egym\u00e1s alatt helyezkedik el a t\u00e9tel neve \u00e9s \u00f6sszege. A LinearLayout sz\u00e9less\u00e9ge legyen match_parent , magass\u00e1ga wrap_content , a TextView -knak pedig mindenk\u00e9ppen adjunk id -t. Mivel ig\u00e9nyes kin\u00e9zetet szeretn\u00e9nk, a megfelel\u0151 marginokat illetve paddingeket adjuk hozz\u00e1 a k\u00fcl\u00f6nb\u00f6z\u0151 elemeinkhez: a gy\u00f6k\u00e9rre 4dp padding, a be\u00e1gyazottra marginStart attrib\u00fatum 16dp \u00e9rt\u00e9kkel, illetve layout_gravity param\u00e9tert center_vertical -ra \u00e1ll\u00edtjuk, \u00edgy biztos\u00edtva a gyerekelemek k\u00f6z\u00e9pre rendez\u00e9s\u00e9t. A salary_row.xml v\u00e9gleges k\u00f3dja: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:id= \"@+id/salary_row\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:padding= \"4dp\" > <ImageView android:id= \"@+id/salary_direction_icon\" android:layout_width= \"40dp\" android:layout_height= \"40dp\" tools:src= \"@mipmap/ic_launcher\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_vertical\" android:layout_marginStart= \"16dp\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/row_salary_name\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"h\u00e9tsz\u0151ny\u0171\" /> <TextView android:id= \"@+id/row_salary_amount\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"kapany\u00e1nyimony\u00f3k\" /> </LinearLayout> </LinearLayout> Megjegyz\u00e9s A \u201etools\u201d n\u00e9vt\u00e9rnek csak a preview-ra van hat\u00e1sa, tervez\u00e9s k\u00f6zben be\u00edrhatunk oda b\u00e1rmit a leford\u00edtott alkalmaz\u00e1sban sehol nem fog l\u00e1tszani. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a egy sor layout-ja ( previewk\u00e9nt ), a hozz\u00e1 tartoz\u00f3 k\u00f3ddal , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. A listaelem p\u00e9ld\u00e1nyos\u00edt\u00e1sa (1 pont) \u00b6 Mostanra minden \u00f6sszetev\u0151nk k\u00e9szen \u00e1ll, m\u00e1r csak a m\u00f6g\u00f6ttes logik\u00e1t kell megval\u00f3s\u00edtanunk. A k\u00f3dban sz\u00fcks\u00e9g\u00fcnk lesz a mez\u0151k el\u00e9r\u00e9s\u00e9re, illetve a kapcsol\u00f3nk \u00e1llapot\u00e1nak vizsg\u00e1lat\u00e1ra a kattint\u00e1s pillanat\u00e1ban. Ezeket a r\u00e9szeket a Save gombunk kattint\u00e1s esem\u00e9nykezel\u0151j\u00e9ben fogjuk megval\u00f3s\u00edtani. Tov\u00e1bb\u00e1 az eml\u00edtett inflate -elend\u0151 komponens\u00fcnk p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e1t is itt kell v\u00e9grehajtanunk a kapott adatok alapj\u00e1n. Toast \u00fczenetben jelezz\u00fck, ha valamelyik mez\u0151 nincs kit\u00f6ltve! El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el az esem\u00e9nykezel\u0151 v\u00e1z\u00e1t. Figyelj\u00fck meg, hogy k\u00f3dot adunk \u00e1t param\u00e9terk\u00e9nt, ez\u00e9rt nem kerek z\u00e1r\u00f3jeleket, hanem kapcsos z\u00e1r\u00f3jelp\u00e1rt haszn\u00e1lunk. Szint\u00e9n fontos, hogy ha Kotlinban k\u00e9sz\u00edt\u00fcnk Android alkalmaz\u00e1st, akkor a layout -ban defini\u00e1lt komponenseket az id -j\u00fckkel el tudjuk \u00e9rni. Ehhez el\u0151sz\u00f6r meg kell csin\u00e1lnunk a viewBinding -ot az Activity -n. Nem szabad elfelejteni, hogy a modul szint\u0171 build.gradle f\u00e1jlban fel kell venn\u00fcnk a viewBinding buildFeature -t. buildFeatures { viewBinding true } Ezt k\u00f6vet\u0151en az Activity : private lateinit var binding : ActivityMainBinding override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . saveButton . setOnClickListener { // TODO: ide j\u00f6n az esem\u00e9nykezel\u0151 k\u00f3d } } Az esem\u00e9nykezel\u0151ben el\u0151sz\u00f6r a kit\u00f6lt\u00f6tts\u00e9g ellen\u0151rz\u00e9s\u00e9t v\u00e9gezz\u00fck el, ehhez egy hiba\u00fczenetet is meg kell adnunk. Ezt a j\u00f3 gyakorlatnak megfelel\u0151en a strings.xml f\u00e1jlba szervezz\u00fck is ki. A hiba\u00fczenet legyen mondjuk \"Missing data!\": if ( binding . salaryName . text . toString (). isEmpty () || binding . salaryAmount . text . toString (). isEmpty ()) { Toast . makeText ( this , R . string . warn_message , Toast . LENGTH_LONG ). show () return @setOnClickListener } Ha minden adat helyes, akkor m\u00e1r fel is vehet\u00fcnk egy \u00faj sort. Egy sor kezel\u00e9s\u00e9hez sz\u00fcks\u00e9g\u00fcnk van egy SalaryRowBinding p\u00e9ld\u00e1nyra: private lateinit var rowBinding : SalaryRowBinding Ezut\u00e1n egy row itemet p\u00e9ld\u00e1nyos\u00edtunk, ( inflate -el\u00fcnk) a kor\u00e1bban elk\u00e9sz\u00edtett XML-b\u0151l az OnCreate met\u00f3dus esem\u00e9nykezel\u0151j\u00e9ben: rowBinding = SalaryRowBinding . inflate ( layoutInflater ) A p\u00e9ld\u00e1nyos\u00edt\u00e1s ut\u00e1n m\u00e1r el\u00e9rj\u00fck az adott p\u00e9ld\u00e1ny k\u00fcl\u00f6nb\u00f6z\u0151 r\u00e9szeit, teh\u00e1t az ikont, a nevet, \u00e9s az \u00f6sszeget. \u00c1ll\u00edtsuk is be ezeket a megadott adatok alapj\u00e1n. Az ikont a ToggleButton \u00e1llapota alapj\u00e1n kell kit\u00f6lten\u00fcnk. Az ikonokhoz az income.png \u00e9s az expense.png k\u00e9peket fogjuk haszn\u00e1lni. Android Asset Studio A let\u00f6lt\u00f6tt k\u00e9peket haszn\u00e1lhatjuk egyb\u0151l a res/drawable mapp\u00e1ba helyezve, azonban ha ig\u00e9nyes alkalmaz\u00e1st akarunk k\u00e9sz\u00edteni, akkor c\u00e9lszer\u0171 t\u00f6bb m\u00e9retben is el\u00e9rhet\u0151v\u00e9 tenni ezeket. A k\u00fcl\u00f6nb\u00f6z\u0151 m\u00e9retek legener\u00e1l\u00e1s\u00e1hoz haszn\u00e1ljuk az Asset Studio -t (azon bel\u00fcl a Generic icon generator-t), forr\u00e1sk\u00e9nt v\u00e1lasszuk ki a k\u00e9peinket, \u00e1ll\u00edtsuk be a Color param\u00e9tert Alpha \u00e9rt\u00e9k\u00e9t 0-ra, majd a let\u00f6lt\u00f6tt zip f\u00e1jlokat csomagoljuk ki a res mapp\u00e1ba. rowBinding . salaryDirectionIcon . setImageResource ( if ( binding . expenseOrIncome . isChecked ) R . drawable . expense else R . drawable . income ) rowBinding . rowSalaryName . text = binding . salaryName . text . toString () rowBinding . rowSalaryAmount . text = binding . salaryAmount . text . toString () Most, hogy megvagyunk a p\u00e9ld\u00e1nyos\u00edt\u00e1ssal \u00e9s az adatok felt\u00f6lt\u00e9s\u00e9vel, hozz\u00e1 kell adnunk az elemet a list\u00e1hoz ( LinearLayout ). Ehhez az activity_main.xml als\u00f3 LinearLayout -j\u00e1nak egy id -t is kell adnunk, hogy hivatkozni tudjunk r\u00e1: <LinearLayout android:id= \"@+id/list_of_rows\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" /> binding . listOfRows . addView ( rowBinding . root ) \u00c9s ezen a ponton ak\u00e1r futtathatjuk is az alkalmaz\u00e1sunkut. Pr\u00f3b\u00e1ljuk is ki! Ezen a ponton m\u00e1r majdnem k\u00e9szen is vagyunk: hozz\u00e1 tudunk adni adni elemeket a list\u00e1nkhoz. Azonban k\u00e9t helyen m\u00e9g hi\u00e1nyos az alkalmaz\u00e1sunk. Nem lehet t\u00f6r\u00f6lni a teljes list\u00e1t, illetve ha el\u00e9g sok elemet vesz\u00fcnk fel \u00e9szrevessz\u00fck, hogy nem f\u00e9rnek ki, viszont g\u00f6rgetni nem tudunk. Az el\u0151bbi probl\u00e9ma megold\u00e1s\u00e1t m\u00e1r el\u0151k\u00e9sz\u00edtett\u00fck, erre fog szolg\u00e1lni a \u201eDelete All\u201d-ra \u00e1talak\u00edtott men\u00fcpontunk, amely megjelenni m\u00e1r helyesen jelenik de m\u00e9g nem csin\u00e1l semmit. Az esem\u00e9nykezel\u0151 v\u00e1z\u00e1t m\u00e1r elk\u00e9sz\u00edtett\u00fck az onOptionsItemSelected() met\u00f3dusban, most ezt kell kieg\u00e9sz\u00edten\u00fcnk az al\u00e1bbira: override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . action_delete_all -> { binding . listOfRows . removeAllViews () true } else -> super . onOptionsItemSelected ( item ) } } Pr\u00f3b\u00e1ljuk ki a t\u00f6rl\u00e9s funkci\u00f3t! Ut\u00f3bbi probl\u00e9m\u00e1nkra pedig nagyon egyszer\u0171 a megold\u00e1s, a list\u00e1nkat tartalmaz\u00f3 LinearLayoutot egy ScrollView -ba kell foglalnunk \u00e9s m\u00e1r m\u0171k\u00f6dik is. <ScrollView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <LinearLayout android:id= \"@+id/list_of_rows\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" /> </ScrollView> BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik hogy a lista scrollozhat\u00f3 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), lista t\u00f6rl\u00e9s\u00e9nek k\u00f3dj\u00e1val , valamint a neptun k\u00f3doddal valamelyik term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. \u00d6n\u00e1ll\u00f3 feladatok \u00b6 Snack bar (1 pont) \u00b6 A Toast \u00fczenetekn\u00e9l m\u00e1r van egy sokkal szebb megold\u00e1s, ami a Material Designt k\u00f6veti, a SnackBar . Cser\u00e9lj\u00fck le a Toast figyelmeztet\u00e9st SnackBarra! BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a SnackBar haszn\u00e1lata (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a k\u00f3dja , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. \u00d6sszegz\u0151 mez\u0151 (1 pont) \u00b6 Vegy\u00fcnk fel egy \u00f6sszegz\u0151 mez\u0151t a gombok mell\u00e9, amely minden bevitt \u00e9rt\u00e9k ut\u00e1n friss\u00fcl. Figyelj\u00fcnk r\u00e1, hogy ha m\u00e9g nincs egy bejegyz\u00e9s sem, akkor ne jelenjen meg semmi, illetve hogy a felhaszn\u00e1l\u00f3 nem fog m\u00ednusz karaktert be\u00edrni teh\u00e1t a kapcsol\u00f3 alapj\u00e1n kell eld\u00f6nten\u00fcnk, hogy ez pozit\u00edv vagy negat\u00edv \u00e9rt\u00e9k. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt megengedj\u00fck, hogy az \u00f6sszeg mez\u0151 inputType -j\u00e1t numberDecimal -ra \u00e1ll\u00edtsuk, \u00edgy a felhaszn\u00e1l\u00f3 nem tud bet\u0171ket be\u00edrni. Figyelem Figyelj\u00fcnk az \u00f6sszegz\u0151 mez\u0151 helyes m\u0171k\u00f6d\u00e9s\u00e9re! Ha t\u00f6r\u00f6lj\u00fck a list\u00e1b\u00f3l a bejegyz\u00e9seket, akkor a sz\u00e1ml\u00e1l\u00f3 is null\u00e1z\u00f3djon \u00e9s t\u0171nj\u00f6n el! (-0.5 pont) BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik az \u00f6sszegz\u0151 mez\u0151 haszn\u00e1lata (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a k\u00f3dja , valamint a neptun k\u00f3dod valameilyik term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek. Bonus \u00b6 Vizsg\u00e1ljuk meg mi t\u00f6rt\u00e9nik, ha az EditText -et ( TextInputEditTextet ) TextInputLayout -tal haszn\u00e1ljuk. ( https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html )","title":"Labor 03 - Felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se \u00e9s k\u00e9sz\u00edt\u00e9se Android platformon"},{"location":"laborok/03-android-ui-adv/#labor-03-felhasznaloi-felulet-tervezese-es-keszitese-android-platformon","text":"","title":"Labor 03 - Felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se \u00e9s k\u00e9sz\u00edt\u00e9se Android platformon"},{"location":"laborok/03-android-ui-adv/#bevezeto","text":"A labor c\u00e9lja egy egyszer\u0171 felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se, kivitelez\u00e9se. A feladat egy kiad\u00e1s / bev\u00e9tel napl\u00f3z\u00e1s\u00e1ra alkalmas alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se AndroidWallet n\u00e9ven. Az alkalmaz\u00e1s alap funkcionalit\u00e1sa, hogy a felhaszn\u00e1l\u00f3 fel tudja venni egy list\u00e1ba a kiad\u00e1sait, bev\u00e9teleit, illetve t\u00f6r\u00f6lni tudja az eg\u00e9sz lista tartalm\u00e1t. A k\u00e9sz alkalmaz\u00e1s mintak\u00e9pe: Az alkalmaz\u00e1s fel\u00e9p\u00edt\u00e9se \u00e9s m\u0171k\u00f6d\u00e9se a k\u00f6vetkez\u0151: Kezd\u0151k\u00e9perny\u0151 a list\u00e1val illetve egy beviteli r\u00e9sszel, amelyen a felhaszn\u00e1l\u00f3 be\u00edr egy megnevez\u00e9st \u00e9s egy \u00f6sszeget, megadja a p\u00e9nzforgalom ir\u00e1ny\u00e1t, \u00e9s el tudja menteni a list\u00e1ba a tranzakci\u00f3j\u00e1t. Amennyiben itt b\u00e1rmelyik mez\u0151 \u00fcres, a ment\u00e9st meg kell akad\u00e1lyoznunk. Egy listaelem fel\u00e9p\u00edt\u00e9se: Ikon a p\u00e9nzforgalom ir\u00e1ny\u00e1t\u00f3l f\u00fcgg\u0151en. A megadott megnevez\u00e9s \u00e9s alatta az \u00f6sszeg. A Toolbaron egy men\u00fcpont a lista teljes t\u00f6rl\u00e9s\u00e9re. A lista g\u00f6rgethet\u0151 kell legyen","title":"Bevezet\u0151"},{"location":"laborok/03-android-ui-adv/#felhasznalt-technologiak","text":"Activity LinearLayout, TextView, ImageView, EditText, Button, ToggleButton LayoutInflater","title":"Felhaszn\u00e1lt technol\u00f3gi\u00e1k:"},{"location":"laborok/03-android-ui-adv/#elokeszuletek","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t .","title":"El\u0151k\u00e9sz\u00fcletek"},{"location":"laborok/03-android-ui-adv/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/03-android-ui-adv/#projekt-letrehozasa","text":"Hozzunk l\u00e9tre egy AndroidWallet nev\u0171 projektet Android Studioban: File->New->New Project v\u00e1lasszuk az Empty Activity-t Application name: AndroidWallet package name: hu.bme.aut.android.androidwallet a ment\u00e9si hely a kicheckoutolt repository-n bel\u00fcl az AndroidWallet mappa Minumum API level: 21 Finish, \u00e9s v\u00e1rjuk meg am\u00edg a Studio mindent legener\u00e1l. (Ez els\u0151 alkalomkor valamivel hosszabb id\u0151t vesz ig\u00e9nybe.)","title":"Projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/03-android-ui-adv/#menu-elkeszitese","text":"Els\u0151 l\u00e9p\u00e9sben k\u00e9sz\u00edts\u00fck el a men\u00fct. Bal oldalon a res k\u00f6nyvt\u00e1ron nyomjunk jobb klikket \u00e9s a men\u00fcb\u0151l hozzunk l\u00e9tre egy \u00faj Android Resource File elemet. Itt a var\u00e1zsl\u00f3ban mindent kis is tudunk v\u00e1lasztani: A menu_main tartalma legyen az al\u00e1bbi: <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:id= \"@+id/action_delete_all\" android:title= \"Delete All\" /> </menu> Ne felejts\u00fck el kiszervezni a string er\u0151forr\u00e1st! Ezt egyszer\u0171en megtehetj\u00fck a Delete All sz\u00f6vegen \u00e1llva az Alt + Enter konbin\u00e1ci\u00f3t megnyomva, az Extract string resource opci\u00f3val. Adjuk meg a nevet: delete_all L\u00e1thatjuk, hogy Android platformon a men\u00fct is egyszer\u0171 XML er\u0151forr\u00e1sb\u00f3l tudjuk felvenni. A fenti esetben egyetlen elemet tett\u00fcnk a men\u00fcbe, amelyet majd az action_delete_all id-val tudunk hivatkozni. Ahhoz, hogy az im\u00e9nt l\u00e9trehozott men\u00fc felker\u00fclj\u00f6n a fel\u00fcletre a MainActivity -b\u0151l fel kell \"f\u00fajjuk\" azt, \u00e9s le kell kezeln\u00fcnk a kattint\u00e1sokat.Ezt az onCreateOptionsMenu \u00e9s az onOptionsItemSelected f\u00fcggv\u00e9nyekkel tudjuk megtenni: override fun onCreateOptionsMenu ( menu : Menu ): Boolean { menuInflater . inflate ( R . menu . menu_main , menu ) return super . onCreateOptionsMenu ( menu ) } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . action_delete_all -> { // TODO: itt fogjuk kezelni a kattint\u00e1st true } else -> super . onOptionsItemSelected ( item ) } }","title":"Men\u00fc elk\u00e9sz\u00edt\u00e9se"},{"location":"laborok/03-android-ui-adv/#beviteli-resz-megvalositasa-1-pont","text":"Az alkalmaz\u00e1s m\u0171k\u00f6d\u00e9s\u00e9hez sz\u00fcks\u00e9g lesz k\u00e9t EditText -re, amelyekben a felhaszn\u00e1l\u00f3 a megnevez\u00e9st \u00e9s az \u00f6sszeget adhatja meg. Sz\u00fcks\u00e9ges tov\u00e1bb\u00e1 egy kapcsol\u00f3 m\u0171k\u00f6d\u00e9s\u0171 gomb, p\u00e9ld\u00e1ul egy ToggleButton , amellyel a p\u00e9nzforgalom ir\u00e1nya \u00e1ll\u00edthat\u00f3, illetve kell egy ment\u00e9s gomb, amelyet egy egyszer\u0171 Button fog megval\u00f3s\u00edtani. Egy XML f\u00e1jlt megnyitva k\u00e9t lehet\u0151s\u00e9g\u00fcnk van: vagy a be\u00e9p\u00edtett grafikus szerkeszt\u0151n drag and drop m\u00f3dszerrel \u00f6sszerakjuk a fel\u00fcletet, vagy k\u00e9zzel XML-ben \u00edrjuk meg a komponenseket \u00e9s a tulajdons\u00e1gaikat. El\u0151bbi a tanul\u00e1si f\u00e1zisban nagyon hasznos, mert k\u00f6nnyen tudunk pusk\u00e1zni, viszont k\u00e9s\u0151bb sok fejf\u00e1j\u00e1st okozhat, ez\u00e9rt az XML le\u00edr\u00e1s plusz el\u0151n\u00e9zettel fogjuk megval\u00f3s\u00edtani a feladatot. Mivel a feladatunk line\u00e1risan \u00f6sszerakhat\u00f3 elemekb\u0151l \u00e9p\u00fcl fel, ez\u00e9rt \u00e9rdemes egy ilyen magval\u00f3s\u00edt\u00e1sban gondolkodnunk. Nyissuk meg a res/layout/activity_main.xml f\u00e1jlt. (Akinek nem jelenik meg egyb\u0151l a preview n\u00e9zet, jobb oldalon tal\u00e1lja a gombot.) M\u00f3dos\u00edtsuk az el\u0151re legener\u00e1lt ConstraintLayoutot LinearLayoutra , \u00e9s adjuk hozz\u00e1 az android:orientation=\"vertical\" attrib\u00fatomot. Sz\u00fcks\u00e9g\u00fcnk lesz m\u00e1sik h\u00e1rom LinearLayout-ra: A n\u00e9v \u00e9s \u00f6sszeg mez\u0151nek, horizont\u00e1lis elrendez\u00e9ssel A kiad\u00e1s/bev\u00e9tel kapcsol\u00f3nak \u00e9s ment\u00e9s gombnak, szint\u00e9n horizont\u00e1lis elrendez\u00e9ssel \u00e9s jobbra z\u00e1r\u00e1ssal A t\u00e9nyleges list\u00e1nak, amelyet mivel a lista elemek vertik\u00e1lisan k\u00f6vetik egym\u00e1st, vertik\u00e1lisra \u00e1ll\u00edtunk. \u00cdgy az activity_main.xml -ben a LinearLayout -ok elrendez\u00e9se az al\u00e1bbi lesz: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \".MainActivity\" tools:showIn= \"@layout/activity_main\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:gravity= \"end\" android:orientation= \"horizontal\" > </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" > </LinearLayout> </LinearLayout> Az els\u0151 (nem gy\u00f6k\u00e9r) LinearLayout -ba vegy\u00fck fel a k\u00e9t EditText -et, adjunk nekik id -t, hogy a Kotlin k\u00f3db\u00f3l is egyszer\u0171en el\u00e9rj\u00fck \u0151ket. A k\u00e9t EditText egym\u00e1shoz k\u00e9pesti elhelyezked\u00e9s\u00e9t s\u00falyoz\u00e1ssal fogjuk be\u00e1ll\u00edtani. Mindkett\u0151 legyen singleLine , \u00edgy nem fog sz\u00e9tcs\u00faszni a UI, illetve \u00e9rdemes a megnevez\u00e9s EditText -nek egy actionNext imeOptions -t adni, \u00edgy a felhaszn\u00e1l\u00f3 billenty\u0171zete a k\u00f6vetkez\u0151 EditText -re fog ugrani az Enter/Ok billenty\u0171re: <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <EditText android:id= \"@+id/salary_name\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"0.6\" android:imeOptions= \"actionNext\" android:inputType= \"textCapWords\" android:singleLine= \"true\" /> <EditText android:id= \"@+id/salary_amount\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"0.4\" android:singleLine= \"true\" /> </LinearLayout> A k\u00f6z\u00e9ps\u0151, gombokat tartalmaz\u00f3 LinearLayout -ban a gombokat jobbra szeretn\u00e9nk igaz\u00edtani, ez\u00e9rt a LinearLayout gravity -j\u00e9t end \u00e9rt\u00e9kre \u00e1ll\u00edtjuk. \u00cdgy a k\u00e9t gombot az oper\u00e1ci\u00f3s rendszer szerint be\u00e1ll\u00edtott sz\u00f6vegir\u00e1nyults\u00e1g szerinti v\u00e9g\u00e9re z\u00e1rja a UI. A LinearLayout -ba felvessz\u00fck a ToggleButton -t, a sima Button -t \u00e9s id -t adunk nekik. A ment\u00e9s gombon be\u00e1ll\u00edtsuk be a megjelen\u00edtett feliratot, ez legyen \"SAVE\". Ne felejts\u00fck el ezt is kiszervezni er\u0151forr\u00e1sba! <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:gravity= \"end\" android:orientation= \"horizontal\" > <ToggleButton android:id= \"@+id/expense_or_income\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/save_button\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Save\" /> </LinearLayout> Mivel erre is van lehet\u0151s\u00e9g b\u00e1rmi k\u00f3dol\u00e1s n\u00e9lk\u00fcl, \u00e9rdemes m\u00e1r most be\u00e1ll\u00edtani a ToggleButton k\u00e9t \u00e1llapot\u00e1nak felirat\u00e1t a textOn illetve textOff attrib\u00fatomokkal, amelyhez az \"INCOME\" illetve \"EXPENSE\" string er\u0151forr\u00e1sokat kell felvenn\u00fcnk. <ToggleButton android:id= \"@+id/expense_or_income\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:textOff= \"@string/income\" android:textOn= \"@string/expense\" /> BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a MainActivity fel\u00fclete a beviteli mez\u0151kkel \u00e9s gombokkal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a hozz\u00e1 tartoz\u00f3 k\u00f3ddal , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Beviteli r\u00e9sz megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/03-android-ui-adv/#a-listaelem-xml-jenek-osszeallitasa-1-pont","text":"\u00daj elem felv\u00e9telekor azt v\u00e1rjuk, hogy a Save gomb hat\u00e1s\u00e1ra az adott t\u00e9telb\u0151l egy \u00faj sor jelenjen meg a list\u00e1ban. Ezek a sorok komplexek \u00e9s egym\u00e1shoz nagyon hasonl\u00f3ak, \u00edgy \u00e9rdemes az elrendez\u00e9s\u00fcket k\u00fcl\u00f6n elk\u00e9sz\u00edteni, \u00e9s hozz\u00e1ad\u00e1skor csak felhaszn\u00e1lni ezt a megfelel\u0151 param\u00e9terekkel. Egy-egy ilyen elem felhaszn\u00e1l\u00e1sakor p\u00e9ld\u00e1nyos\u00edtanunk kell a fel\u00fcleti elemet, amit a rendszer inflater szolg\u00e1ltat\u00e1s\u00e1val tudunk megtenni. Az inflate -el\u00e9s sor\u00e1n az oper\u00e1ci\u00f3s rendszer egy olyan szolg\u00e1ltat\u00e1s\u00e1t k\u00e9rj\u00fck el, amelyet egy\u00e9b elemekn\u00e9l (pl. Toolbar menu) automatikusan elv\u00e9gez. Mi ezzel most egy el\u0151re meghat\u00e1rozott komponenst, a list\u00e1nk egy elem\u00e9t szeretn\u00e9nk \"felf\u00fajni\" a megfelel\u0151 pillanatban. Figyelem Fontos megjegyezni hogy a k\u00e9s\u0151bbiekben a profi lista kezel\u00e9shez majd a RecyclerView komponenst fogjuk haszn\u00e1lni. LineraLayout -ot lista jelleg\u0171 viselked\u00e9sre haszn\u00e1lni nem aj\u00e1nlott, most csak az inflate -el\u00e9s gyakorl\u00e1s\u00e1hoz haszn\u00e1ljuk. Rakjuk \u00f6ssze el\u0151sz\u00f6r a fel\u00fcleti er\u0151forr\u00e1st. A listaelem\u00fcnk fel\u00e9p\u00edt\u00e9se, az el\u0151z\u0151ekhez hasonl\u00f3an, kivitelezhet\u0151 teljesen line\u00e1ris elrendez\u00e9ssel, \u00edgy ism\u00e9t a LinearLayout -ot haszn\u00e1ljuk. Adjunk hozz\u00e1 a projekt\u00fcnkh\u00f6z a salary_row.xml -t. (res/layout mapp\u00e1n jobb klikk, New -> Layout Resource File) Egy horizont\u00e1lis LinearLayout -tal kezd\u00fcnk, mivel az icon \u00e9s a feliratok egym\u00e1s mellett helyezkednek el. Mivel ez csak egy listaelem lesz, ez\u00e9rt wrap_content -re kell venn\u00fcnk a sz\u00e9less\u00e9g\u00e9t magass\u00e1g\u00e1t. Adjunk neki id -t is. Ebbe a LinearLayout -ba bal oldalra ker\u00fcl az ImageView . A m\u00e9ret\u00e9t \u00e1ll\u00edtsuk be 40x40-re, illetve adjunk neki id -t is. Az ImageView mellett egy f\u00fcgg\u0151leges LinearLayout k\u00f6vezkezik, amiben egym\u00e1s alatt helyezkedik el a t\u00e9tel neve \u00e9s \u00f6sszege. A LinearLayout sz\u00e9less\u00e9ge legyen match_parent , magass\u00e1ga wrap_content , a TextView -knak pedig mindenk\u00e9ppen adjunk id -t. Mivel ig\u00e9nyes kin\u00e9zetet szeretn\u00e9nk, a megfelel\u0151 marginokat illetve paddingeket adjuk hozz\u00e1 a k\u00fcl\u00f6nb\u00f6z\u0151 elemeinkhez: a gy\u00f6k\u00e9rre 4dp padding, a be\u00e1gyazottra marginStart attrib\u00fatum 16dp \u00e9rt\u00e9kkel, illetve layout_gravity param\u00e9tert center_vertical -ra \u00e1ll\u00edtjuk, \u00edgy biztos\u00edtva a gyerekelemek k\u00f6z\u00e9pre rendez\u00e9s\u00e9t. A salary_row.xml v\u00e9gleges k\u00f3dja: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:id= \"@+id/salary_row\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:padding= \"4dp\" > <ImageView android:id= \"@+id/salary_direction_icon\" android:layout_width= \"40dp\" android:layout_height= \"40dp\" tools:src= \"@mipmap/ic_launcher\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_vertical\" android:layout_marginStart= \"16dp\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/row_salary_name\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"h\u00e9tsz\u0151ny\u0171\" /> <TextView android:id= \"@+id/row_salary_amount\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"kapany\u00e1nyimony\u00f3k\" /> </LinearLayout> </LinearLayout> Megjegyz\u00e9s A \u201etools\u201d n\u00e9vt\u00e9rnek csak a preview-ra van hat\u00e1sa, tervez\u00e9s k\u00f6zben be\u00edrhatunk oda b\u00e1rmit a leford\u00edtott alkalmaz\u00e1sban sehol nem fog l\u00e1tszani. BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a egy sor layout-ja ( previewk\u00e9nt ), a hozz\u00e1 tartoz\u00f3 k\u00f3ddal , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"A listaelem XML-j\u00e9nek \u00f6ssze\u00e1ll\u00edt\u00e1sa (1 pont)"},{"location":"laborok/03-android-ui-adv/#a-listaelem-peldanyositasa-1-pont","text":"Mostanra minden \u00f6sszetev\u0151nk k\u00e9szen \u00e1ll, m\u00e1r csak a m\u00f6g\u00f6ttes logik\u00e1t kell megval\u00f3s\u00edtanunk. A k\u00f3dban sz\u00fcks\u00e9g\u00fcnk lesz a mez\u0151k el\u00e9r\u00e9s\u00e9re, illetve a kapcsol\u00f3nk \u00e1llapot\u00e1nak vizsg\u00e1lat\u00e1ra a kattint\u00e1s pillanat\u00e1ban. Ezeket a r\u00e9szeket a Save gombunk kattint\u00e1s esem\u00e9nykezel\u0151j\u00e9ben fogjuk megval\u00f3s\u00edtani. Tov\u00e1bb\u00e1 az eml\u00edtett inflate -elend\u0151 komponens\u00fcnk p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e1t is itt kell v\u00e9grehajtanunk a kapott adatok alapj\u00e1n. Toast \u00fczenetben jelezz\u00fck, ha valamelyik mez\u0151 nincs kit\u00f6ltve! El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el az esem\u00e9nykezel\u0151 v\u00e1z\u00e1t. Figyelj\u00fck meg, hogy k\u00f3dot adunk \u00e1t param\u00e9terk\u00e9nt, ez\u00e9rt nem kerek z\u00e1r\u00f3jeleket, hanem kapcsos z\u00e1r\u00f3jelp\u00e1rt haszn\u00e1lunk. Szint\u00e9n fontos, hogy ha Kotlinban k\u00e9sz\u00edt\u00fcnk Android alkalmaz\u00e1st, akkor a layout -ban defini\u00e1lt komponenseket az id -j\u00fckkel el tudjuk \u00e9rni. Ehhez el\u0151sz\u00f6r meg kell csin\u00e1lnunk a viewBinding -ot az Activity -n. Nem szabad elfelejteni, hogy a modul szint\u0171 build.gradle f\u00e1jlban fel kell venn\u00fcnk a viewBinding buildFeature -t. buildFeatures { viewBinding true } Ezt k\u00f6vet\u0151en az Activity : private lateinit var binding : ActivityMainBinding override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . saveButton . setOnClickListener { // TODO: ide j\u00f6n az esem\u00e9nykezel\u0151 k\u00f3d } } Az esem\u00e9nykezel\u0151ben el\u0151sz\u00f6r a kit\u00f6lt\u00f6tts\u00e9g ellen\u0151rz\u00e9s\u00e9t v\u00e9gezz\u00fck el, ehhez egy hiba\u00fczenetet is meg kell adnunk. Ezt a j\u00f3 gyakorlatnak megfelel\u0151en a strings.xml f\u00e1jlba szervezz\u00fck is ki. A hiba\u00fczenet legyen mondjuk \"Missing data!\": if ( binding . salaryName . text . toString (). isEmpty () || binding . salaryAmount . text . toString (). isEmpty ()) { Toast . makeText ( this , R . string . warn_message , Toast . LENGTH_LONG ). show () return @setOnClickListener } Ha minden adat helyes, akkor m\u00e1r fel is vehet\u00fcnk egy \u00faj sort. Egy sor kezel\u00e9s\u00e9hez sz\u00fcks\u00e9g\u00fcnk van egy SalaryRowBinding p\u00e9ld\u00e1nyra: private lateinit var rowBinding : SalaryRowBinding Ezut\u00e1n egy row itemet p\u00e9ld\u00e1nyos\u00edtunk, ( inflate -el\u00fcnk) a kor\u00e1bban elk\u00e9sz\u00edtett XML-b\u0151l az OnCreate met\u00f3dus esem\u00e9nykezel\u0151j\u00e9ben: rowBinding = SalaryRowBinding . inflate ( layoutInflater ) A p\u00e9ld\u00e1nyos\u00edt\u00e1s ut\u00e1n m\u00e1r el\u00e9rj\u00fck az adott p\u00e9ld\u00e1ny k\u00fcl\u00f6nb\u00f6z\u0151 r\u00e9szeit, teh\u00e1t az ikont, a nevet, \u00e9s az \u00f6sszeget. \u00c1ll\u00edtsuk is be ezeket a megadott adatok alapj\u00e1n. Az ikont a ToggleButton \u00e1llapota alapj\u00e1n kell kit\u00f6lten\u00fcnk. Az ikonokhoz az income.png \u00e9s az expense.png k\u00e9peket fogjuk haszn\u00e1lni. Android Asset Studio A let\u00f6lt\u00f6tt k\u00e9peket haszn\u00e1lhatjuk egyb\u0151l a res/drawable mapp\u00e1ba helyezve, azonban ha ig\u00e9nyes alkalmaz\u00e1st akarunk k\u00e9sz\u00edteni, akkor c\u00e9lszer\u0171 t\u00f6bb m\u00e9retben is el\u00e9rhet\u0151v\u00e9 tenni ezeket. A k\u00fcl\u00f6nb\u00f6z\u0151 m\u00e9retek legener\u00e1l\u00e1s\u00e1hoz haszn\u00e1ljuk az Asset Studio -t (azon bel\u00fcl a Generic icon generator-t), forr\u00e1sk\u00e9nt v\u00e1lasszuk ki a k\u00e9peinket, \u00e1ll\u00edtsuk be a Color param\u00e9tert Alpha \u00e9rt\u00e9k\u00e9t 0-ra, majd a let\u00f6lt\u00f6tt zip f\u00e1jlokat csomagoljuk ki a res mapp\u00e1ba. rowBinding . salaryDirectionIcon . setImageResource ( if ( binding . expenseOrIncome . isChecked ) R . drawable . expense else R . drawable . income ) rowBinding . rowSalaryName . text = binding . salaryName . text . toString () rowBinding . rowSalaryAmount . text = binding . salaryAmount . text . toString () Most, hogy megvagyunk a p\u00e9ld\u00e1nyos\u00edt\u00e1ssal \u00e9s az adatok felt\u00f6lt\u00e9s\u00e9vel, hozz\u00e1 kell adnunk az elemet a list\u00e1hoz ( LinearLayout ). Ehhez az activity_main.xml als\u00f3 LinearLayout -j\u00e1nak egy id -t is kell adnunk, hogy hivatkozni tudjunk r\u00e1: <LinearLayout android:id= \"@+id/list_of_rows\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" /> binding . listOfRows . addView ( rowBinding . root ) \u00c9s ezen a ponton ak\u00e1r futtathatjuk is az alkalmaz\u00e1sunkut. Pr\u00f3b\u00e1ljuk is ki! Ezen a ponton m\u00e1r majdnem k\u00e9szen is vagyunk: hozz\u00e1 tudunk adni adni elemeket a list\u00e1nkhoz. Azonban k\u00e9t helyen m\u00e9g hi\u00e1nyos az alkalmaz\u00e1sunk. Nem lehet t\u00f6r\u00f6lni a teljes list\u00e1t, illetve ha el\u00e9g sok elemet vesz\u00fcnk fel \u00e9szrevessz\u00fck, hogy nem f\u00e9rnek ki, viszont g\u00f6rgetni nem tudunk. Az el\u0151bbi probl\u00e9ma megold\u00e1s\u00e1t m\u00e1r el\u0151k\u00e9sz\u00edtett\u00fck, erre fog szolg\u00e1lni a \u201eDelete All\u201d-ra \u00e1talak\u00edtott men\u00fcpontunk, amely megjelenni m\u00e1r helyesen jelenik de m\u00e9g nem csin\u00e1l semmit. Az esem\u00e9nykezel\u0151 v\u00e1z\u00e1t m\u00e1r elk\u00e9sz\u00edtett\u00fck az onOptionsItemSelected() met\u00f3dusban, most ezt kell kieg\u00e9sz\u00edten\u00fcnk az al\u00e1bbira: override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . action_delete_all -> { binding . listOfRows . removeAllViews () true } else -> super . onOptionsItemSelected ( item ) } } Pr\u00f3b\u00e1ljuk ki a t\u00f6rl\u00e9s funkci\u00f3t! Ut\u00f3bbi probl\u00e9m\u00e1nkra pedig nagyon egyszer\u0171 a megold\u00e1s, a list\u00e1nkat tartalmaz\u00f3 LinearLayoutot egy ScrollView -ba kell foglalnunk \u00e9s m\u00e1r m\u0171k\u00f6dik is. <ScrollView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <LinearLayout android:id= \"@+id/list_of_rows\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"vertical\" /> </ScrollView> BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik hogy a lista scrollozhat\u00f3 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), lista t\u00f6rl\u00e9s\u00e9nek k\u00f3dj\u00e1val , valamint a neptun k\u00f3doddal valamelyik term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"A listaelem p\u00e9ld\u00e1nyos\u00edt\u00e1sa (1 pont)"},{"location":"laborok/03-android-ui-adv/#onallo-feladatok","text":"","title":"\u00d6n\u00e1ll\u00f3 feladatok"},{"location":"laborok/03-android-ui-adv/#snack-bar-1-pont","text":"A Toast \u00fczenetekn\u00e9l m\u00e1r van egy sokkal szebb megold\u00e1s, ami a Material Designt k\u00f6veti, a SnackBar . Cser\u00e9lj\u00fck le a Toast figyelmeztet\u00e9st SnackBarra! BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik a SnackBar haszn\u00e1lata (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a k\u00f3dja , valamint a neptun k\u00f3doddal a term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"Snack bar (1 pont)"},{"location":"laborok/03-android-ui-adv/#osszegzo-mezo-1-pont","text":"Vegy\u00fcnk fel egy \u00f6sszegz\u0151 mez\u0151t a gombok mell\u00e9, amely minden bevitt \u00e9rt\u00e9k ut\u00e1n friss\u00fcl. Figyelj\u00fcnk r\u00e1, hogy ha m\u00e9g nincs egy bejegyz\u00e9s sem, akkor ne jelenjen meg semmi, illetve hogy a felhaszn\u00e1l\u00f3 nem fog m\u00ednusz karaktert be\u00edrni teh\u00e1t a kapcsol\u00f3 alapj\u00e1n kell eld\u00f6nten\u00fcnk, hogy ez pozit\u00edv vagy negat\u00edv \u00e9rt\u00e9k. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt megengedj\u00fck, hogy az \u00f6sszeg mez\u0151 inputType -j\u00e1t numberDecimal -ra \u00e1ll\u00edtsuk, \u00edgy a felhaszn\u00e1l\u00f3 nem tud bet\u0171ket be\u00edrni. Figyelem Figyelj\u00fcnk az \u00f6sszegz\u0151 mez\u0151 helyes m\u0171k\u00f6d\u00e9s\u00e9re! Ha t\u00f6r\u00f6lj\u00fck a list\u00e1b\u00f3l a bejegyz\u00e9seket, akkor a sz\u00e1ml\u00e1l\u00f3 is null\u00e1z\u00f3djon \u00e9s t\u0171nj\u00f6n el! (-0.5 pont) BEADAND\u00d3 (1 pont) K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet , amelyen l\u00e1tszik az \u00f6sszegz\u0151 mez\u0151 haszn\u00e1lata (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a k\u00f3dja , valamint a neptun k\u00f3dod valameilyik term\u00e9k nevek\u00e9nt . A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l. A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.","title":"\u00d6sszegz\u0151 mez\u0151 (1 pont)"},{"location":"laborok/03-android-ui-adv/#bonus","text":"Vizsg\u00e1ljuk meg mi t\u00f6rt\u00e9nik, ha az EditText -et ( TextInputEditTextet ) TextInputLayout -tal haszn\u00e1ljuk. ( https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html )","title":"Bonus"},{"location":"laborok/04-android-ui-fragments/","text":"Labor 04 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9se - Fragmentek, Chartok \u00b6 Bevezet\u0151 \u00b6 A labor sor\u00e1n egy HR alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk el, amelybe bel\u00e9pve a felhaszn\u00e1l\u00f3 meg tudja tekinteni szem\u00e9lyes adatait, illetve szabads\u00e1got tud r\u00f6gz\u00edteni. Az alkalmaz\u00e1s nem haszn\u00e1l perzisztens adatt\u00e1rol\u00e1st \u00e9s val\u00f3s bejelentkeztet\u00e9st, csak demo adatokkal dolgozik. A labor f\u0151 t\u00e9m\u00e1ja a Fragmentekkel val\u00f3 fel\u00fcletk\u00e9sz\u00edt\u00e9s, illetve a Navigation Component haszn\u00e1lata lesz. IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151. \u00c9rt\u00e9kel\u00e9s \u00b6 Oszt\u00e1lyz\u00e1s: - F\u0151men\u00fc k\u00e9perny\u0151: 1 pont - Profil k\u00e9perny\u0151: 1 pont - Szabads\u00e1g k\u00e9perny\u0151: 1 pont - D\u00e1tumv\u00e1laszt\u00f3, napok cs\u00f6kkent\u00e9se: 1 pont - \u00d6n\u00e1ll\u00f3 feladat (szabads\u00e1g tov\u00e1bbfejleszt\u00e9se): 1 pont IMSc: Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa - K\u00f6rdiagram: 1 IMSc pont - Oszlopdiagram: 1 IMSc pont El\u0151k\u00e9sz\u00fcletek \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Projekt l\u00e9trehoz\u00e1sa \u00b6 Hozzunk l\u00e9tre egy \u00faj Android projektet 'Empty Activity' sablonnal! Az alkalmaz\u00e1s neve legyen WorkplaceApp , a Package name pedig hu.bme.aut.workplaceapp . Az alkalmaz\u00e1st term\u00e9szetesen telefonra k\u00e9sz\u00edtj\u00fck, \u00e9s haszn\u00e1lhatjuk az alap\u00e9rtelmezett 21-\u00f6s minimum SDK szintet. El\u0151zetesen t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt \u00e9s bontsuk ki. A benne l\u00e9v\u0151 drawable k\u00f6nyvt\u00e1rat m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (Studio-ban res mapp\u00e1n \u00e1llva Ctrl+V ). K\u00e9perny\u0151k kezel\u00e9se Android alkalmaz\u00e1sokban \u00b6 A legt\u00f6bb mobilalkalmaz\u00e1s j\u00f3l elk\u00fcl\u00f6n\u00edthet\u0151 oldalak/k\u00e9perny\u0151k kombin\u00e1ci\u00f3j\u00e1b\u00f3l \u00e9p\u00fcl fel. Az egyik els\u0151 f\u0151 d\u00f6nt\u00e9s, amit alkalmaz\u00e1stervez\u00e9s k\u00f6zben meg kell hoznunk, ezeknek a k\u00e9perny\u0151knek a fel\u00e9p\u00edt\u00e9se, illetve a k\u00e9perny\u0151k k\u00f6z\u00f6tti navig\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa. Egy Android alap\u00fa alkalmaz\u00e1s eset\u00e9n t\u00f6bb megold\u00e1s k\u00f6z\u00fcl is v\u00e1laszthatunk: Activity alap\u00fa megk\u00f6zel\u00edt\u00e9s : Minden k\u00e9perny\u0151 egy Activity . Mivel az Activity egy rendszerszint\u0171 komponense az Androidnak, ez\u00e9rt ennek kezel\u00e9s\u00e9\u00e9rt is az oper\u00e1ci\u00f3s rendszer a felel\u0151s. Mi k\u00f6zvetlen\u00fcl sose p\u00e9ld\u00e1nyos\u00edtjuk, hanem Intent -et k\u00fcld\u00fcnk a rendszer fel\u00e9. A navig\u00e1ci\u00f3\u00e9rt is a rendszer felel, bizonyos opci\u00f3kat flagek seg\u00edts\u00e9g\u00e9vel tudunk be\u00e1ll\u00edtani. Fragment alap\u00fa megk\u00f6zel\u00edt\u00e9s : Ez esetben a k\u00e9perny\u0151ink egy vagy t\u00f6bb Fragment -b\u0151l \u00e9p\u00fclnek fel. Ezeknek kezel\u00e9se az alkalmaz\u00e1s szintj\u00e9n t\u00f6rt\u00e9nik meg, emiatt mindenk\u00e9pp sz\u00fcks\u00e9ges egy Activity , mely a megjelen\u00edt\u00e9s\u00e9rt felel. A megjelen\u00edt\u00e9st, illetve a navig\u00e1ci\u00f3t a FragmentManager oszt\u00e1ly v\u00e9gzi. Egy\u00e9b egyedi megold\u00e1s : K\u00fcls\u0151 vagy saj\u00e1t k\u00f6nyvt\u00e1r haszn\u00e1lata a megjelen\u00edt\u00e9shez, mely tipikusan az alap View oszt\u00e1lyb\u00f3l sz\u00e1rmazik le. Ilyen p\u00e9ld\u00e1ul a r\u00e9gi Conductor , illetve az \u00fajabb Jetpack Compose . R\u00e9gebben az alkalmaz\u00e1sok az Activity alap\u00fa megk\u00f6zel\u00edt\u00e9st haszn\u00e1lt\u00e1k, k\u00e9s\u0151bb azonban \u00e1tt\u00e9rtek a Fragmentekre. Az ilyen alkalmaz\u00e1sokn\u00e1l \u00f6sszesen egy f\u0151 Activity van, mely tartalmazza azt a FragmentManager p\u00e9ld\u00e1nyt, amit a k\u00e9s\u0151bbiekben a Fragment alap\u00fa k\u00e9perny\u0151k megjelen\u00edt\u00e9s\u00e9re haszn\u00e1lunk. Ez egy alapvet\u0151en rugalmas \u00e9s j\u00f3l haszn\u00e1lhat\u00f3 megold\u00e1s volt, azonban ehhez r\u00e9szleteiben meg kellett ismerni a FragmentManager m\u0171k\u00f6d\u00e9s\u00e9t, k\u00fcl\u00f6nben k\u00f6nnyen hib\u00e1kba futhattunk. Ennek a megold\u00e1s\u00e1ra fejlesztette ki a Google a Navigation Component csomagot, mellyel az Android Studi\u00f3 k\u00f6rnyezet\u00e9ben egy grafikus eszk\u00f6zzel k\u00f6nnyen l\u00e9tre tudjuk hozni az oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t, illetve ezt a k\u00f3db\u00f3l egyszer\u0171en el tudjuk ind\u00edtani. Navigation Component inicializ\u00e1l\u00e1s \u00b6 Els\u0151 l\u00e9p\u00e9sk\u00e9nt adjuk hozz\u00e1 a Navigation Component csomagot az \u00fcres projekt\u00fcnkh\u00f6z. Ehhez a modul szint\u0171 build.gradle f\u00e1jlban a dependencies r\u00e9szhez vegy\u00fck fel a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9geket: def nav_version = \"2.5.1\" implementation \"androidx.navigation:navigation-fragment-ktx:$nav_version\" implementation \"androidx.navigation:navigation-ui-ktx:$nav_version\" Illetve enged\u00e9lyezz\u00fck a View Binding -ot az android r\u00e9szben: buildFeatures { viewBinding true } A Navigation Component egy navig\u00e1ci\u00f3s gr\u00e1fot haszn\u00e1l a k\u00e9perny\u0151k, illetve a k\u00f6z\u00f6tt\u00fck l\u00e9v\u0151 kapcsolatok defini\u00e1l\u00e1s\u00e1ra. Ezt a gr\u00e1fot a t\u00f6bbi er\u0151forr\u00e1shoz hasonl\u00f3an egy .xml kiterjeszt\u00e9s\u0171 f\u00e1jlban tudjuk megadni. Hozzuk l\u00e9tre ezt a f\u00e1jlt: A res mapp\u00e1n jobb gombbal kattintva v\u00e1lasszuk ki a New \u2192 Android Resource Directory opci\u00f3t, majd a Resource Type mez\u0151ben v\u00e1lasszuk ki a navigation lehet\u0151s\u00e9get. Az \u00edgy l\u00e9trej\u00f6tt navigation mapp\u00e1n jobb klikkelve v\u00e1lasszuk ki a new \u2192 Navigation Resource File opci\u00f3t, legyen a f\u00e1jl neve nav_graph . Ahhoz, hogy a l\u00e9trehozott navig\u00e1ci\u00f3s gr\u00e1f \u00e1ltal m\u0171k\u00f6dj\u00f6n az alkalmaz\u00e1sunk, fel kell venn\u00fcnk az alkalmaz\u00e1sunkban is. Ehhez m\u00f3dos\u00edtanunk kell az \u00fcres Activity p\u00e9ld\u00e1nyunkat. Nyissuk meg az activity_main.xml f\u00e1jlt, \u00e9s \u00edrjuk fel\u00fcl a tartalm\u00e1t az al\u00e1bbi k\u00f3ddal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" tools:context=\".MainActivity\"> <androidx.fragment.app.FragmentContainerView android:id=\"@+id/nav_host_fragment\" android:name=\"androidx.navigation.fragment.NavHostFragment\" android:layout_width=\"0dp\" android:layout_height=\"0dp\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintBottom_toBottomOf=\"parent\" app:defaultNavHost=\"true\" app:navGraph=\"@navigation/nav_graph\" /> </androidx.constraintlayout.widget.ConstraintLayout> A most hozz\u00e1adott FragmentContainerView lesz az a n\u00e9zet, melyben a navig\u00e1ci\u00f3s gr\u00e1fban felvett k\u00e9perny\u0151k meg fognak jelenni. A navGraph param\u00e9terrel tudjuk megadni az aktu\u00e1lis navig\u00e1ci\u00f3s gr\u00e1fot, m\u00edg a defaultNavHost -al tudjuk jelezni, hogy a rendszer vissza gombj\u00e1t alap\u00e9rtelmezetten ennek a n\u00e9zetnek kell lekezelnie. T\u00f6bb navig\u00e1ci\u00f3s gr\u00e1f B\u00e1r a Navigation Component t\u00e1mogatja, hogy t\u00f6bb k\u00fcl\u00f6nb\u00f6z\u0151 navig\u00e1ci\u00f3 gr\u00e1fot is l\u00e9trehozzunk az alkalmaz\u00e1sunkban, a legt\u00f6bb alkalmaz\u00e1sn\u00e1l elegend\u0151 egy darab. Pr\u00f3b\u00e1ljuk meg futtatni az alkalmaz\u00e1st! Az indul\u00e1s ut\u00e1n az alkalmaz\u00e1sunk crashelni fog, mivel m\u00e9g nem vett\u00fcnk fel k\u00e9perny\u0151ket a navig\u00e1ci\u00f3 gr\u00e1fban, az Activity semmit se tud megjelen\u00edteni, hib\u00e1ra fut. F\u0151men\u00fc k\u00e9perny\u0151 \u00b6 Az els\u0151 k\u00e9perny\u0151, amit l\u00e9trehozunk, a f\u0151oldal lesz, melyr\u0151l a t\u00f6bbi oldalra tudunk navig\u00e1lni. A labor sor\u00e1n 2 funkci\u00f3t fogunk megval\u00f3s\u00edtani, ezek a Profil \u00e9s a Szabads\u00e1g. Nyissuk meg a nav_graph.xml f\u00e1jlt, \u00e9s kattintsunk a New Destination gombra (bal fels\u0151 gomb), majd a Create new destination gombra: V\u00e1lasszuk ki a Fragment (Blank) gombot, \u00e9s legyen az oldal neve MenuFragment . Ezzel l\u00e9trehoztunk az els\u0151 oldalunkat, ami automatikusan megkapta a Home Destination jel\u00f6l\u0151t, ezzel mutatva, hogy az alkalmaz\u00e1s indul\u00e1sakor ez lesz az els\u0151 oldalunk. A l\u00e9trej\u00f6tt fragment_menu.xml tartalm\u00e1t cser\u00e9lj\u00fck ki az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_margin= \"16dp\" android:gravity= \"center\" android:orientation= \"vertical\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> </LinearLayout> Egy f\u00fcgg\u0151leges LinearLayout-ba tett\u00fcnk bele 2 v\u00edzszintes LinearLayout-ot, mindkett\u0151 2 gombot fog tartalmazni. S\u00falyoz\u00e1s seg\u00edts\u00e9g\u00e9vel 2 r\u00e9szre osztottuk a v\u00edzszintes LinearLayout-okat. A gombon a h\u00e1tt\u00e9r \u00e9s a felirat elhelyez\u00e9s\u00e9hez a kor\u00e1bbi laboron m\u00e1r l\u00e1totthoz hasonl\u00f3an FrameLayout-ot fogunk haszn\u00e1lni. Az els\u0151 gombot p\u00e9ld\u00e1ul \u00edgy k\u00e9sz\u00edthetj\u00fck el (a FrameLayout tagbe \u00edrjuk): <ImageButton android:id= \"@+id/btnProfile\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:adjustViewBounds= \"true\" android:scaleType= \"fitCenter\" android:src= \"@drawable/profile\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"Profile\" android:textSize= \"34sp\" /> A tov\u00e1bbi 3 gombot ennek a mint\u00e1j\u00e1ra k\u00e9sz\u00edts\u00fck el ezekkel az \u00e9rt\u00e9kekkel: Sz\u00f6veg ID K\u00e9p Holiday @+id/btnHoliday @drawable/holiday Payment @+id/btnPayment @drawable/payment Cafeteria @+id/btnCafeteria @drawable/cafeteria Ne felejts\u00fck el a sz\u00f6vegeket kiszervezni er\u0151forr\u00e1sba! (a sz\u00f6vegen \u00e1llva Alt+Enter ) Val\u00f3s\u00edtsuk meg a navig\u00e1ci\u00f3t a k\u00e9t oldalra. Hozzunk l\u00e9tre k\u00e9t \u00faj Fragment (Blank) k\u00e9perny\u0151t ( ProfileFragment \u00e9s HolidayFragment ). A navig\u00e1ci\u00f3s gr\u00e1fban az oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t akci\u00f3kkal tudjuk meghat\u00e1rozni. Egy \u00faj akci\u00f3hoz fogjuk meg a kiindul\u00e1si k\u00e9perny\u0151 jobb oldal\u00e1n l\u00e9v\u0151 kis p\u00f6tty\u00f6t, \u00e9s h\u00fazzuk a c\u00e9l oldalra. A k\u00e9t akci\u00f3 l\u00e9trehoz\u00e1sa ut\u00e1n \u00edgy fog kin\u00e9zni a navig\u00e1ci\u00f3s gr\u00e1f: Az akci\u00f3k megh\u00edv\u00e1s\u00e1hoz haszn\u00e1ljuk a view binding-ot a MenuFragment -ben: class MenuFragment : Fragment () { private lateinit var binding : FragmentMenuBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentMenuBinding . inflate ( inflater , container , false ) return binding . root ; } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnProfile . setOnClickListener { findNavController (). navigate ( R . id . action_menuFragment_to_profileFragment ) } binding . btnHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_menuFragment_to_holidayFragment ) } } } A findNavController() f\u00fcggv\u00e9nnyel \u00e9rhetj\u00fck el a NavController oszt\u00e1ly aktu\u00e1lis p\u00e9ld\u00e1ny\u00e1t, mellyel a navig\u00e1ci\u00f3t tudjuk megval\u00f3s\u00edtani. A navig\u00e1ci\u00f3hoz haszn\u00e1lt akci\u00f3khoz automatikusan gener\u00e1l\u00f3dik egy azonos\u00edt\u00f3, de ezeket a szerkeszt\u0151ben m\u00f3dos\u00edthatjuk, ha szeretn\u00e9nk. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! 4 gombnak kell megjelennie \u00e9s a fels\u0151 kett\u0151n m\u0171k\u00f6dnie kell a navig\u00e1ci\u00f3nak a (m\u00e9g) \u00fcres Fragment-kbe. Profil k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se \u00b6 A Profil k\u00e9perny\u0151 k\u00e9t lapozhat\u00f3 oldalb\u00f3l fog \u00e1llni, ezen a n\u00e9v, email, lakc\u00edm (els\u0151 oldal), illetve a szem\u00e9lyigazolv\u00e1ny sz\u00e1m, TAJ sz\u00e1m, ad\u00f3sz\u00e1m \u00e9s t\u00f6rzssz\u00e1m (m\u00e1sodik oldal) fognak megjelenni. Hozzunk l\u00e9tre egy data package-et, azon bel\u00fcl egy Person adatoszt\u00e1lyt, ebben fogjuk t\u00e1rolni az oldalakon megjelen\u0151 adatokat. Az adat t\u00edpus\u00fa oszt\u00e1lyok eset\u00e9ben a Kotlin automatikusan deklar\u00e1l gyakran haszn\u00e1lt f\u00fcggv\u00e9nyeket, mint p\u00e9ld\u00e1ul az equals() \u00e9s hashCode() f\u00fcggv\u00e9nyeket k\u00fcl\u00f6nb\u00f6z\u0151 objektumok \u00f6sszehasonl\u00edt\u00e1s\u00e1hoz, illetve egy toString() f\u00fcggv\u00e9nyt, mely visszaadja a t\u00e1rolt v\u00e1ltoz\u00f3k \u00e9rt\u00e9k\u00e9t. data class Person ( val name : String , val email : String , val address : String , val id : String , val socialSecurityNumber : String , val taxId : String , val registrationId : String ) A Person oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1nak el\u00e9r\u00e9s\u00e9re hozzunk l\u00e9tre egy DataManager oszt\u00e1lyt (szint\u00e9n a data package-en bel\u00fcl), ezzel fogjuk szimul\u00e1lni a val\u00f3s adatel\u00e9r\u00e9st (Singleton mint\u00e1t haszn\u00e1lunk, hogy az alkalmaz\u00e1s minden r\u00e9sz\u00e9b\u0151l egyszer\u0171en el\u00e9rhet\u0151 legyen, ehhez a Kotlin \u00e1ltal biztos\u00edtott object kulcssz\u00f3t haszn\u00e1ljuk): object DataManager { val person = Person ( \"Test User\" , \"testuser@domain.com\" , \"1234 Test, Random Street 1.\" , \"123456AB\" , \"123456789\" , \"1234567890\" , \"0123456789\" ) } A profiloldalon az a c\u00e9lunk, hogy k\u00e9t k\u00fcl\u00f6n r\u00e9szben megjelen\u00edts\u00fck a norm\u00e1l \u00e9s r\u00e9szletes adatokat. A k\u00e9t oldal k\u00f6z\u00f6tt v\u00edzszintes swipe-al lehet majd l\u00e9pni. Ehhez egy ViewPager -t fogunk haszn\u00e1lni, mely Fragment oldalak k\u00f6z\u00f6tt k\u00e9pes ilyen interakci\u00f3t megval\u00f3s\u00edtani. Hozzunk l\u00e9tre egy \u00faj package -et profile n\u00e9ven, majd mozgassuk \u00e1t ebbe a ProfileFragment oszt\u00e1lyunkat. A mozgat\u00e1s ut\u00e1n a k\u00f6vetkez\u0151 helyeken jav\u00edtani kell a f\u00e1jl \u00fatvonal\u00e1t: - fragment_profile.xml context r\u00e9sz - nav_graph.xml megfelel\u0151 tag name param\u00e9tere - R import\u00e1l\u00e1sa a ProfileFragment f\u00e1jlban. Ezut\u00e1n elk\u00e9sz\u00edthetj\u00fck a k\u00e9t oldalt, Fragmentekkel. Hozzuk l\u00e9tre a profile package-ben a k\u00e9t Fragmentet (New -> Kotlin Class), ezek neve legyen MainProfileFragment \u00e9s DetailsProfileFragment . A k\u00e9t Fragmentben sz\u00e1rmazzunk le a Fragment oszt\u00e1lyb\u00f3l (androidx-es verzi\u00f3t v\u00e1lasszuk) \u00e9s defini\u00e1ljuk fel\u00fcl az onCreateView met\u00f3dust. Ebben bet\u00f6ltj\u00fck a layout-ot \u00e9s a Person objektum adatait ki\u00edrjuk a TextView-kra. MainProfileFragment.kt : class MainProfileFragment : Fragment (){ private lateinit var binding : FragmentProfileMainBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentProfileMainBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) val person = DataManager . person binding . tvName . text = person . name binding . tvEmail . text = person . email binding . tvAddress . text = person . address } } DetailsProfileFragment.kt : class DetailsProfileFragment : Fragment (){ private lateinit var binding : FragmentProfileDetailBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentProfileDetailBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) val person = DataManager . person binding . tvId . text = person . id binding . tvSSN . text = person . socialSecurityNumber binding . tvTaxId . text = person . taxId binding . tvRegistrationId . text = person . registrationId } } K\u00e9sz\u00edts\u00fck el a megfelel\u0151 layout-okat a Fragmentekhez ( profile_main.xml \u00e9s profile_detail.xml ). profile_main.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Name:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvName\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Email:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvEmail\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Address:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvAddress\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> </LinearLayout> profile_detail.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Social Security ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvSSN\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Tax ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvTaxId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Registration ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvRegistrationId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> </LinearLayout> (Szervezz\u00fck ki a sz\u00f6vegeket er\u0151forr\u00e1sba) M\u00e1r csak a lapoz\u00e1s megval\u00f3s\u00edt\u00e1sa maradt h\u00e1tra, ezt a ViewPager oszt\u00e1llyal fogjuk megval\u00f3s\u00edtani. A fragment_profile.xml f\u00e1jlba hozzunk l\u00e9tre egy ViewPager -t: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"hu.bme.aut.workplaceapp.profile.ProfileFragment\" > <androidx.viewpager2.widget.ViewPager2 android:id= \"@+id/vpProfile\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> ViewPager2 A ViewPager2 oszt\u00e1ly egy teljes \u00fajra\u00edr\u00e1sa az eredeti ViewPager oszt\u00e1lynak, a RecyclerView-re alapozva. A ViewPager oszt\u00e1ly egy PagerAdapter oszt\u00e1ly seg\u00edts\u00e9g\u00e9vel tudja az oldalakat l\u00e9trehozni. Hozzunk l\u00e9tre egy \u00faj PagerAdaptert a k\u00e9t Fragment\u00fcnkh\u00f6z. ProfilePagerAdapter.kt : class ProfilePageAdapter ( fragment : Fragment ) : FragmentStateAdapter ( fragment ) { override fun getItemCount (): Int = NUM_PAGES override fun createFragment ( position : Int ): Fragment = when ( position ){ 0 -> MainProfileFragment () 1 -> DetailsProfileFragment () else -> MainProfileFragment () } companion object { const val NUM_PAGES = 2 } } A ProfileFragment-ben rendelj\u00fck hozz\u00e1 a ViewPagerhez a most elk\u00e9sz\u00edtett adaptert: class ProfileFragment : Fragment () { private lateinit var binding : FragmentProfileBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentProfileBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . vpProfile . adapter = ProfilePageAdapter ( this ) } } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st. A Profile gombra kattinva megjelennek a felhaszn\u00e1l\u00f3 adatai \u00e9s lehet lapozni is. Szabads\u00e1g k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se \u00b6 A Szabads\u00e1g k\u00e9perny\u0151n egy k\u00f6rdiagramot fogunk megjelen\u00edteni, ami mutatja, hogy mennyi szabads\u00e1got vett\u00fcnk m\u00e1r ki \u00e9s mennyi maradt. Ezen k\u00edv\u00fcl egy gomb seg\u00edts\u00e9g\u00e9vel \u00faj szabadnap kiv\u00e9tel\u00e9t is megengedj\u00fck a felhaszn\u00e1l\u00f3nak. El\u0151sz\u00f6r eg\u00e9sz\u00edts\u00fck ki a DataManager oszt\u00e1lyunkat, hogy kezelje a szabads\u00e1ghoz kapcsol\u00f3d\u00f3 adatokat is: const val HOLIDAY_MAX_VALUE = 20 const val HOLIDAY_DEFAULT_VALUE = 15 var holidays = HOLIDAY_DEFAULT_VALUE val remainingHolidays get () = HOLIDAY_MAX_VALUE - holidays A PieChart kirajzol\u00e1s\u00e1hoz az MPAndroidChart library-t fogjuk haszn\u00e1lni. settings.gradle: dependencyResolutionManagement { repositories { ... maven { url \"https://jitpack.io\" } } } App szint\u0171 build.gradle: dependencies { ... implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0' } Ezut\u00e1n kattinsunk az Android Studioban jobb fent megjelen\u0151 Sync Now feliratra vagy a fejl\u00e9cen szerepl\u0151 m\u00e9rges gradle elef\u00e1nt gombra, hogy a library f\u00e1jljai let\u00f6lt\u0151djenek. Ha a library f\u00e1jljai let\u00f6lt\u0151dtek, akkor \u00edrjuk meg a Fragment layout-j\u00e1t ( fragment_holiday.xml ): <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \"hu.bme.aut.workplaceapp.HolidayFragment\" > <com.github.mikephil.charting.charts.PieChart android:id= \"@+id/chartHoliday\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" /> <Button android:id= \"@+id/btnTakeHoliday\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Take Holiday\" android:layout_gravity= \"center\" /> </LinearLayout> \u00cdrjuk meg a Fragment k\u00f3dj\u00e1t ( HolidayFragment.kt ): class HolidayFragment : Fragment () { private lateinit var binding : FragmentHolidayBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentHolidayBinding . inflate ( layoutInflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnTakeHoliday . setOnClickListener { //TODO: DatePickerDialogFragment megjelen\u00edt\u00e9se } loadHolidays () } private fun loadHolidays (){ val entries = listOf ( PieEntry ( DataManager . holidays . toFloat (), \"Taken\" ), PieEntry ( DataManager . remainingHolidays . toFloat (), \"Remaining\" ) ) val dataSet = PieDataSet ( entries , \"Holidays\" ) dataSet . colors = ColorTemplate . MATERIAL_COLORS . toList () val data = PieData ( dataSet ) binding . chartHoliday . data = data binding . chartHoliday . invalidate () } } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! A PieChart most m\u00e1r megjelenik, de a gomb m\u00e9g nem kell, hogy m\u0171k\u00f6dj\u00f6n. D\u00e1tumv\u00e1laszt\u00f3 megval\u00f3s\u00edt\u00e1sa \u00b6 A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben a Take Holiday gombra megjelen\u0151 d\u00e1tumv\u00e1laszt\u00f3 m\u0171k\u00f6d\u00e9s\u00e9t fogjuk megval\u00f3s\u00edtani. A gomb lenyom\u00e1s\u00e1ra megjelenik egy d\u00e1tumv\u00e1laszt\u00f3 \u00e9s a d\u00e1tum kiv\u00e1laszt\u00e1sa ut\u00e1n a szabad napok eggyel cs\u00f6kkennek. Hozzunk l\u00e9tre egy DatePickerDialogFragment oszt\u00e1lyt: class DatePickerDialogFragment : DialogFragment (), DatePickerDialog . OnDateSetListener { override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { val c = Calendar . getInstance () val year = c . get ( Calendar . YEAR ) val month = c . get ( Calendar . MONTH ) val day = c . get ( Calendar . DAY_OF_MONTH ) return DatePickerDialog ( requireContext (), this , year , month , day ) } override fun onDateSet ( view : DatePicker?, year : Int , month : Int , dayOfMonth : Int ) { //TODO: return result } } Az importokn\u00e1l a java.util -t v\u00e1lasszuk a Calendarhoz, a Fragment-hez pedig az androidx -es verzi\u00f3t. Vegy\u00fck fel a dial\u00f3gust a navig\u00e1ci\u00f3s gr\u00e1fba! Ehhez kattintsunk a New Destination gombra, \u00e9s v\u00e1lasszuk ki a most l\u00e9trehozott DatePickerDialogFragment oszt\u00e1lyt. Dialog a navig\u00e1ci\u00f3s gr\u00e1fban A kiv\u00e1laszt\u00e1sn\u00e1l \u00e9szrevehetj\u00fck, hogy a t\u00edpusn\u00e1l a Fragment (dialog) van megadva, m\u00edg a t\u00f6bbi k\u00e9perny\u0151n\u00e9l csak Fragment . Ez az\u00e9rt van, mert az oszt\u00e1ly a DialogFragment -b\u0151l sz\u00e1rmazik le, ami a navig\u00e1ci\u00f3s gr\u00e1f m\u00e1shogy kezel, mivel ez nem egy teljes k\u00e9perny\u0151s n\u00e9zet. Ha \u00e1tv\u00e1ltunk a k\u00f3d n\u00e9zetbe, ott is l\u00e1that\u00f3, hogy dialog taggel van felv\u00e9ve ez az \u00fatvonal. Adjunk hozz\u00e1 a navig\u00e1ci\u00f3hoz egy akci\u00f3t, mely a HolidayFragment -b\u0151l a DatePickerDialogFragment -re mutat. \u00c1ll\u00edtsuk be a gomb esem\u00e9nykezel\u0151j\u00e9t a HolidayFragment-ben, hogy lenyom\u00e1skor jelen\u00edtse meg a d\u00e1tumv\u00e1laszt\u00f3t: binding . btnTakeHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_holidayFragment_to_datePickerDialogFragment ) } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! Mostm\u00e1r megjelenik a dial\u00f3gus egy kisebb ablakban, de m\u00e9g a d\u00e1tumv\u00e1laszt\u00e1s eredm\u00e9nye nem jut vissza a kiindul\u00f3 k\u00e9perny\u0151re. A kiv\u00e1lasztott d\u00e1tum feldolgoz\u00e1s\u00e1hoz implement\u00e1ljuk az OnDateSelectedListener-t a HolidayActivity-ben: class HolidayActivity : AppCompatActivity (), DatePickerDialogFragment . OnDateSelectedListener { ... override fun onDateSelected ( year : Int , month : Int , day : Int ) { val numHolidays = DataManager . holidays if ( DataManager . remainingHolidays > 0 ){ DataManager . holidays = numHolidays + 1 } loadHolidays () } Fragmentek k\u00f6z\u00f6tti kommunik\u00e1ci\u00f3 a Navigation Component seg\u00edts\u00e9g\u00e9vel \u00b6 Ahogy l\u00e1thattuk az eddigi feladatok megold\u00e1saib\u00f3l, a Navigation Component a haszn\u00e1lata sor\u00e1n maga kezeli a Fragmenteket, \u0151 felel\u0151s a p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e9rt. Ennek k\u00f6sz\u00f6nhet\u0151en ha kommunik\u00e1lni akarunk a k\u00e9perny\u0151k k\u00f6z\u00f6tt, akkor azt is a Navigation Component seg\u00edts\u00e9g\u00e9vel tudjuk megtenni. Kommunik\u00e1ci\u00f3 sor\u00e1n alapvet\u0151en k\u00e9t ir\u00e1nyr\u0151l besz\u00e9lhet\u00fcnk: A h\u00edv\u00f3 f\u00e9l szeretne valamilyen param\u00e9tert \u00e1tadni az \u00faj oldalnak. Az \u00faj, jelenleg l\u00e1that\u00f3 oldal szeretne valamilyen \u00e9rt\u00e9ket visszaadni az el\u0151z\u0151 oldalnak. T\u00f6bb oldalon kereszt\u00fcli navig\u00e1ci\u00f3 A Navigation Component csak a szomsz\u00e9dos oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t teszi lehet\u0151v\u00e9. T\u00f6bb oldal eset\u00e9n \u00e9rdemesebb valamilyen eg\u00e9sz alkalmaz\u00e1sra vonatkoz\u00f3 \u00e1llapotkezel\u00e9si megold\u00e1st haszn\u00e1lni. Az \u00faj oldalnak val\u00f3 param\u00e9ter\u00e1tad\u00e1s eset\u00e9ben a fel\u00fcleti szerkeszt\u0151ben a megfelel\u0151 oldalt kiv\u00e1lasztva tudunk felvenni \u00faj param\u00e9tereket. Itt megadhatjuk a param\u00e9ter nev\u00e9t, t\u00edpus\u00e1t, illetve p\u00e1r egy\u00e9b opcion\u00e1lis be\u00e1ll\u00edt\u00e1st. Ezekb\u0151l a Safe Args csomag seg\u00edts\u00e9g\u00e9vel minden akci\u00f3hoz egy seg\u00e9doszt\u00e1ly fog gener\u00e1l\u00f3dni, melyet p\u00e9ld\u00e1nyos\u00edtva meg tudjuk adni a param\u00e9tereket, \u00e9s ezt \u00e1tadva a NavController navigate() f\u00fcggv\u00e9ny\u00e9nek, \u00e1t tudunk navig\u00e1lni az \u00faj oldalra. Az \u00faj oldalon pedig a by navArgs() haszn\u00e1lat\u00e1val el tudunk k\u00e9rni egy olyan objektumot, mely tartalmazni fogja ezeket a param\u00e9tereket. Ezen a laboron erre nem lesz sz\u00fcks\u00e9g\u00fcnk. Az \u00e9rt\u00e9k visszaad\u00e1s\u00e1ra a Navigation Component egy els\u0151re bonyolultnak t\u0171n\u0151 megold\u00e1st ad, viszont erre sz\u00fcks\u00e9g van, mivel nincsen garant\u00e1lva, hogy visszat\u00e9r\u00e9skor az el\u0151z\u0151 Fragment objektum m\u00e9g l\u00e9tezik. A Navigation Component minden k\u00e9perny\u0151j\u00e9hez egy NavBackStackEntry -t rendel, mely t\u00f6bbek k\u00f6z\u00f6tt tartalmaz egy t\u00e1rol\u00e1sra alkalmas objektumot ( SavedStateHandle ). Az \u00faj oldal ebbe tud k\u00fcldeni egy \u00faj \u00e9rt\u00e9ket, m\u00edg az eredeti oldal meg tudja figyelni az ezeken t\u00f6rt\u00e9n\u0151 v\u00e1ltoz\u00e1sokat. Lifecycle A SavedStateHandle \u00e9p\u00edt az Androidban elterjedt Lifecycle koncepci\u00f3ra, ennek r\u00e9szletes bemutat\u00e1sa azonban t\u00falmutat a labor anyag\u00e1n, el\u00e9g csak mag\u00e1t a kommunik\u00e1ci\u00f3 m\u00f3dj\u00e1t \u00e9rteni. Val\u00f3s\u00edtsuk meg a d\u00e1tumv\u00e1laszt\u00f3 fel\u00fclet kommunik\u00e1ci\u00f3j\u00e1t! El\u0151sz\u00f6r vizsg\u00e1ljuk meg a d\u00e1tumv\u00e1laszt\u00e1s oldal\u00e1t. Vegy\u00fcnk fel egy \u00faj kulcsot a HolidayFragment oszt\u00e1lyba, mellyel az eredm\u00e9nyt tudjuk azonos\u00edtani a fogad\u00f3oldalon: companion object { const val DATE_SELECTED_KEY = \"date_selected\" } Hozzunk l\u00e9tre a egy \u00faj oszt\u00e1lyt a DatePickerDialogFragment -en bel\u00fcl, mely az eredm\u00e9nyt fogja t\u00e1rolni: data class DatePickerResult ( val year : Int , val month : Int , val dayOfMonth : Int , ) : Serializable Serializable A Navigation Component kommunik\u00e1ci\u00f3ja a Bundle oszt\u00e1lyt haszn\u00e1lja, ez\u00e9rt nem lehet tetsz\u0151leges objektumot \u00e1tadni neki. A Serializable interf\u00e9sz haszn\u00e1lata egy k\u00f6nny\u0171 megold\u00e1st biztos\u00edt erre. Majd k\u00e9sz\u00edts\u00fck el a d\u00e1tumkiv\u00e1laszt\u00e1s f\u00fcggv\u00e9ny\u00e9t: override fun onDateSet ( view : DatePicker?, year : Int , month : Int , dayOfMonth : Int ) { val result = DatePickerResult ( year , month , dayOfMonth ) findNavController () . previousBackStackEntry ?. savedStateHandle ?. set ( HolidayFragment . DATE_SELECTED_KEY , result ) } Vizsg\u00e1ljuk meg, hogyan m\u0171k\u00f6dik a kommunik\u00e1ci\u00f3! Mivel az el\u0151z\u0151 oldalnak akarok \u00e9rt\u00e9ket visszaadni, a previousBackStackEntry param\u00e9tert haszn\u00e1lom, mely \u00edgy a HolidayFragment -hez fog tartozni. Ennek a SavedStateHandle objektum\u00e1n a set() met\u00f3dush\u00edv\u00e1ssal tudok param\u00e9tert \u00e1tadni. K\u00e9sz\u00edts\u00fck el a fogad\u00f3 f\u00e9l oldal\u00e1t is. Ehhez az HolidayFragment onViewCreated() met\u00f3dus\u00e1ban fel kell iratkoznunk a megfelel\u0151 eredm\u00e9ny objektumra: override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnTakeHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_holidayFragment_to_datePickerDialogFragment ) } findNavController () . currentBackStackEntry ?. savedStateHandle ?. getLiveData < DatePickerDialogFragment . DatePickerResult > ( DATE_SELECTED_KEY ) ?. observe ( viewLifecycleOwner ) { val numHolidays = DataManager . holidays if ( DataManager . remainingHolidays > 0 ){ DataManager . holidays = numHolidays + 1 } loadHolidays () } loadHolidays () } Itt az observe() met\u00f3dusnak \u00e1tadott callback met\u00f3dus (a kapcsos z\u00e1r\u00f3jel k\u00f6z\u00f6tti r\u00e9sz) minden alkalommal meg fog h\u00edvodni, amikor valamilyen v\u00e1ltoz\u00e1s t\u00f6rt\u00e9nik az eredm\u00e9nyben. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! Most m\u00e1r a gomb is j\u00f3l kell, hogy m\u0171k\u00f6dj\u00f6n, a napok sz\u00e1m\u00e1nak is cs\u00f6kkennie kell a diagramon. \u00d6n\u00e1ll\u00f3 feladat \u00b6 Csak akkor engedj\u00fcnk \u00faj szabads\u00e1got kivenni, ha a kiv\u00e1lasztott nap a mai napn\u00e1l k\u00e9s\u0151bbi. Ha elfogyott a szabads\u00e1gkeret\u00fcnk, akkor a Take Holiday gomb legyen letiltva. iMSc feladat \u00b6 Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa \u00b6 A Payment men\u00fcpontra kattintva jelenjen meg egy PaymentActivity rajta egy ViewPager-rel \u00e9s 2 Fragment-tel (A Profile men\u00fcponthoz hasonl\u00f3an): - PaymentTaxesFragment : k\u00f6rdiagram, aminek a k\u00f6zep\u00e9be van \u00edrva az aktu\u00e1lis fizet\u00e9s \u00e9s mutatja a nett\u00f3 j\u00f6vedelmet illetve a levont ad\u00f3kat (ad\u00f3nk\u00e9nt k\u00fcl\u00f6n) - MonthlyPaymentFragment : egy oszlopdiagramot mutasson 12 oszloppal, a havi szinten lebontott fizet\u00e9seket mutatva - \u00e9rdemes az adatokat itt is a DataManager oszt\u00e1lyban t\u00e1rolni Seg\u00edts\u00e9g","title":"Labor 04 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9se - Fragmentek, Chartok"},{"location":"laborok/04-android-ui-fragments/#labor-04-felhasznaloi-felulet-keszitese-fragmentek-chartok","text":"","title":"Labor 04 - Felhaszn\u00e1l\u00f3i fel\u00fclet k\u00e9sz\u00edt\u00e9se - Fragmentek, Chartok"},{"location":"laborok/04-android-ui-fragments/#bevezeto","text":"A labor sor\u00e1n egy HR alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk el, amelybe bel\u00e9pve a felhaszn\u00e1l\u00f3 meg tudja tekinteni szem\u00e9lyes adatait, illetve szabads\u00e1got tud r\u00f6gz\u00edteni. Az alkalmaz\u00e1s nem haszn\u00e1l perzisztens adatt\u00e1rol\u00e1st \u00e9s val\u00f3s bejelentkeztet\u00e9st, csak demo adatokkal dolgozik. A labor f\u0151 t\u00e9m\u00e1ja a Fragmentekkel val\u00f3 fel\u00fcletk\u00e9sz\u00edt\u00e9s, illetve a Navigation Component haszn\u00e1lata lesz. IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151.","title":"Bevezet\u0151"},{"location":"laborok/04-android-ui-fragments/#ertekeles","text":"Oszt\u00e1lyz\u00e1s: - F\u0151men\u00fc k\u00e9perny\u0151: 1 pont - Profil k\u00e9perny\u0151: 1 pont - Szabads\u00e1g k\u00e9perny\u0151: 1 pont - D\u00e1tumv\u00e1laszt\u00f3, napok cs\u00f6kkent\u00e9se: 1 pont - \u00d6n\u00e1ll\u00f3 feladat (szabads\u00e1g tov\u00e1bbfejleszt\u00e9se): 1 pont IMSc: Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa - K\u00f6rdiagram: 1 IMSc pont - Oszlopdiagram: 1 IMSc pont","title":"\u00c9rt\u00e9kel\u00e9s"},{"location":"laborok/04-android-ui-fragments/#elokeszuletek","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t .","title":"El\u0151k\u00e9sz\u00fcletek"},{"location":"laborok/04-android-ui-fragments/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/04-android-ui-fragments/#projekt-letrehozasa","text":"Hozzunk l\u00e9tre egy \u00faj Android projektet 'Empty Activity' sablonnal! Az alkalmaz\u00e1s neve legyen WorkplaceApp , a Package name pedig hu.bme.aut.workplaceapp . Az alkalmaz\u00e1st term\u00e9szetesen telefonra k\u00e9sz\u00edtj\u00fck, \u00e9s haszn\u00e1lhatjuk az alap\u00e9rtelmezett 21-\u00f6s minimum SDK szintet. El\u0151zetesen t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt \u00e9s bontsuk ki. A benne l\u00e9v\u0151 drawable k\u00f6nyvt\u00e1rat m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (Studio-ban res mapp\u00e1n \u00e1llva Ctrl+V ).","title":"Projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/04-android-ui-fragments/#kepernyok-kezelese-android-alkalmazasokban","text":"A legt\u00f6bb mobilalkalmaz\u00e1s j\u00f3l elk\u00fcl\u00f6n\u00edthet\u0151 oldalak/k\u00e9perny\u0151k kombin\u00e1ci\u00f3j\u00e1b\u00f3l \u00e9p\u00fcl fel. Az egyik els\u0151 f\u0151 d\u00f6nt\u00e9s, amit alkalmaz\u00e1stervez\u00e9s k\u00f6zben meg kell hoznunk, ezeknek a k\u00e9perny\u0151knek a fel\u00e9p\u00edt\u00e9se, illetve a k\u00e9perny\u0151k k\u00f6z\u00f6tti navig\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa. Egy Android alap\u00fa alkalmaz\u00e1s eset\u00e9n t\u00f6bb megold\u00e1s k\u00f6z\u00fcl is v\u00e1laszthatunk: Activity alap\u00fa megk\u00f6zel\u00edt\u00e9s : Minden k\u00e9perny\u0151 egy Activity . Mivel az Activity egy rendszerszint\u0171 komponense az Androidnak, ez\u00e9rt ennek kezel\u00e9s\u00e9\u00e9rt is az oper\u00e1ci\u00f3s rendszer a felel\u0151s. Mi k\u00f6zvetlen\u00fcl sose p\u00e9ld\u00e1nyos\u00edtjuk, hanem Intent -et k\u00fcld\u00fcnk a rendszer fel\u00e9. A navig\u00e1ci\u00f3\u00e9rt is a rendszer felel, bizonyos opci\u00f3kat flagek seg\u00edts\u00e9g\u00e9vel tudunk be\u00e1ll\u00edtani. Fragment alap\u00fa megk\u00f6zel\u00edt\u00e9s : Ez esetben a k\u00e9perny\u0151ink egy vagy t\u00f6bb Fragment -b\u0151l \u00e9p\u00fclnek fel. Ezeknek kezel\u00e9se az alkalmaz\u00e1s szintj\u00e9n t\u00f6rt\u00e9nik meg, emiatt mindenk\u00e9pp sz\u00fcks\u00e9ges egy Activity , mely a megjelen\u00edt\u00e9s\u00e9rt felel. A megjelen\u00edt\u00e9st, illetve a navig\u00e1ci\u00f3t a FragmentManager oszt\u00e1ly v\u00e9gzi. Egy\u00e9b egyedi megold\u00e1s : K\u00fcls\u0151 vagy saj\u00e1t k\u00f6nyvt\u00e1r haszn\u00e1lata a megjelen\u00edt\u00e9shez, mely tipikusan az alap View oszt\u00e1lyb\u00f3l sz\u00e1rmazik le. Ilyen p\u00e9ld\u00e1ul a r\u00e9gi Conductor , illetve az \u00fajabb Jetpack Compose . R\u00e9gebben az alkalmaz\u00e1sok az Activity alap\u00fa megk\u00f6zel\u00edt\u00e9st haszn\u00e1lt\u00e1k, k\u00e9s\u0151bb azonban \u00e1tt\u00e9rtek a Fragmentekre. Az ilyen alkalmaz\u00e1sokn\u00e1l \u00f6sszesen egy f\u0151 Activity van, mely tartalmazza azt a FragmentManager p\u00e9ld\u00e1nyt, amit a k\u00e9s\u0151bbiekben a Fragment alap\u00fa k\u00e9perny\u0151k megjelen\u00edt\u00e9s\u00e9re haszn\u00e1lunk. Ez egy alapvet\u0151en rugalmas \u00e9s j\u00f3l haszn\u00e1lhat\u00f3 megold\u00e1s volt, azonban ehhez r\u00e9szleteiben meg kellett ismerni a FragmentManager m\u0171k\u00f6d\u00e9s\u00e9t, k\u00fcl\u00f6nben k\u00f6nnyen hib\u00e1kba futhattunk. Ennek a megold\u00e1s\u00e1ra fejlesztette ki a Google a Navigation Component csomagot, mellyel az Android Studi\u00f3 k\u00f6rnyezet\u00e9ben egy grafikus eszk\u00f6zzel k\u00f6nnyen l\u00e9tre tudjuk hozni az oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t, illetve ezt a k\u00f3db\u00f3l egyszer\u0171en el tudjuk ind\u00edtani.","title":"K\u00e9perny\u0151k kezel\u00e9se Android alkalmaz\u00e1sokban"},{"location":"laborok/04-android-ui-fragments/#navigation-component-inicializalas","text":"Els\u0151 l\u00e9p\u00e9sk\u00e9nt adjuk hozz\u00e1 a Navigation Component csomagot az \u00fcres projekt\u00fcnkh\u00f6z. Ehhez a modul szint\u0171 build.gradle f\u00e1jlban a dependencies r\u00e9szhez vegy\u00fck fel a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9geket: def nav_version = \"2.5.1\" implementation \"androidx.navigation:navigation-fragment-ktx:$nav_version\" implementation \"androidx.navigation:navigation-ui-ktx:$nav_version\" Illetve enged\u00e9lyezz\u00fck a View Binding -ot az android r\u00e9szben: buildFeatures { viewBinding true } A Navigation Component egy navig\u00e1ci\u00f3s gr\u00e1fot haszn\u00e1l a k\u00e9perny\u0151k, illetve a k\u00f6z\u00f6tt\u00fck l\u00e9v\u0151 kapcsolatok defini\u00e1l\u00e1s\u00e1ra. Ezt a gr\u00e1fot a t\u00f6bbi er\u0151forr\u00e1shoz hasonl\u00f3an egy .xml kiterjeszt\u00e9s\u0171 f\u00e1jlban tudjuk megadni. Hozzuk l\u00e9tre ezt a f\u00e1jlt: A res mapp\u00e1n jobb gombbal kattintva v\u00e1lasszuk ki a New \u2192 Android Resource Directory opci\u00f3t, majd a Resource Type mez\u0151ben v\u00e1lasszuk ki a navigation lehet\u0151s\u00e9get. Az \u00edgy l\u00e9trej\u00f6tt navigation mapp\u00e1n jobb klikkelve v\u00e1lasszuk ki a new \u2192 Navigation Resource File opci\u00f3t, legyen a f\u00e1jl neve nav_graph . Ahhoz, hogy a l\u00e9trehozott navig\u00e1ci\u00f3s gr\u00e1f \u00e1ltal m\u0171k\u00f6dj\u00f6n az alkalmaz\u00e1sunk, fel kell venn\u00fcnk az alkalmaz\u00e1sunkban is. Ehhez m\u00f3dos\u00edtanunk kell az \u00fcres Activity p\u00e9ld\u00e1nyunkat. Nyissuk meg az activity_main.xml f\u00e1jlt, \u00e9s \u00edrjuk fel\u00fcl a tartalm\u00e1t az al\u00e1bbi k\u00f3ddal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" tools:context=\".MainActivity\"> <androidx.fragment.app.FragmentContainerView android:id=\"@+id/nav_host_fragment\" android:name=\"androidx.navigation.fragment.NavHostFragment\" android:layout_width=\"0dp\" android:layout_height=\"0dp\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintBottom_toBottomOf=\"parent\" app:defaultNavHost=\"true\" app:navGraph=\"@navigation/nav_graph\" /> </androidx.constraintlayout.widget.ConstraintLayout> A most hozz\u00e1adott FragmentContainerView lesz az a n\u00e9zet, melyben a navig\u00e1ci\u00f3s gr\u00e1fban felvett k\u00e9perny\u0151k meg fognak jelenni. A navGraph param\u00e9terrel tudjuk megadni az aktu\u00e1lis navig\u00e1ci\u00f3s gr\u00e1fot, m\u00edg a defaultNavHost -al tudjuk jelezni, hogy a rendszer vissza gombj\u00e1t alap\u00e9rtelmezetten ennek a n\u00e9zetnek kell lekezelnie. T\u00f6bb navig\u00e1ci\u00f3s gr\u00e1f B\u00e1r a Navigation Component t\u00e1mogatja, hogy t\u00f6bb k\u00fcl\u00f6nb\u00f6z\u0151 navig\u00e1ci\u00f3 gr\u00e1fot is l\u00e9trehozzunk az alkalmaz\u00e1sunkban, a legt\u00f6bb alkalmaz\u00e1sn\u00e1l elegend\u0151 egy darab. Pr\u00f3b\u00e1ljuk meg futtatni az alkalmaz\u00e1st! Az indul\u00e1s ut\u00e1n az alkalmaz\u00e1sunk crashelni fog, mivel m\u00e9g nem vett\u00fcnk fel k\u00e9perny\u0151ket a navig\u00e1ci\u00f3 gr\u00e1fban, az Activity semmit se tud megjelen\u00edteni, hib\u00e1ra fut.","title":"Navigation Component inicializ\u00e1l\u00e1s"},{"location":"laborok/04-android-ui-fragments/#fomenu-kepernyo","text":"Az els\u0151 k\u00e9perny\u0151, amit l\u00e9trehozunk, a f\u0151oldal lesz, melyr\u0151l a t\u00f6bbi oldalra tudunk navig\u00e1lni. A labor sor\u00e1n 2 funkci\u00f3t fogunk megval\u00f3s\u00edtani, ezek a Profil \u00e9s a Szabads\u00e1g. Nyissuk meg a nav_graph.xml f\u00e1jlt, \u00e9s kattintsunk a New Destination gombra (bal fels\u0151 gomb), majd a Create new destination gombra: V\u00e1lasszuk ki a Fragment (Blank) gombot, \u00e9s legyen az oldal neve MenuFragment . Ezzel l\u00e9trehoztunk az els\u0151 oldalunkat, ami automatikusan megkapta a Home Destination jel\u00f6l\u0151t, ezzel mutatva, hogy az alkalmaz\u00e1s indul\u00e1sakor ez lesz az els\u0151 oldalunk. A l\u00e9trej\u00f6tt fragment_menu.xml tartalm\u00e1t cser\u00e9lj\u00fck ki az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_margin= \"16dp\" android:gravity= \"center\" android:orientation= \"vertical\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> <FrameLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" > </FrameLayout> </LinearLayout> </LinearLayout> Egy f\u00fcgg\u0151leges LinearLayout-ba tett\u00fcnk bele 2 v\u00edzszintes LinearLayout-ot, mindkett\u0151 2 gombot fog tartalmazni. S\u00falyoz\u00e1s seg\u00edts\u00e9g\u00e9vel 2 r\u00e9szre osztottuk a v\u00edzszintes LinearLayout-okat. A gombon a h\u00e1tt\u00e9r \u00e9s a felirat elhelyez\u00e9s\u00e9hez a kor\u00e1bbi laboron m\u00e1r l\u00e1totthoz hasonl\u00f3an FrameLayout-ot fogunk haszn\u00e1lni. Az els\u0151 gombot p\u00e9ld\u00e1ul \u00edgy k\u00e9sz\u00edthetj\u00fck el (a FrameLayout tagbe \u00edrjuk): <ImageButton android:id= \"@+id/btnProfile\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:adjustViewBounds= \"true\" android:scaleType= \"fitCenter\" android:src= \"@drawable/profile\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" android:text= \"Profile\" android:textSize= \"34sp\" /> A tov\u00e1bbi 3 gombot ennek a mint\u00e1j\u00e1ra k\u00e9sz\u00edts\u00fck el ezekkel az \u00e9rt\u00e9kekkel: Sz\u00f6veg ID K\u00e9p Holiday @+id/btnHoliday @drawable/holiday Payment @+id/btnPayment @drawable/payment Cafeteria @+id/btnCafeteria @drawable/cafeteria Ne felejts\u00fck el a sz\u00f6vegeket kiszervezni er\u0151forr\u00e1sba! (a sz\u00f6vegen \u00e1llva Alt+Enter ) Val\u00f3s\u00edtsuk meg a navig\u00e1ci\u00f3t a k\u00e9t oldalra. Hozzunk l\u00e9tre k\u00e9t \u00faj Fragment (Blank) k\u00e9perny\u0151t ( ProfileFragment \u00e9s HolidayFragment ). A navig\u00e1ci\u00f3s gr\u00e1fban az oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t akci\u00f3kkal tudjuk meghat\u00e1rozni. Egy \u00faj akci\u00f3hoz fogjuk meg a kiindul\u00e1si k\u00e9perny\u0151 jobb oldal\u00e1n l\u00e9v\u0151 kis p\u00f6tty\u00f6t, \u00e9s h\u00fazzuk a c\u00e9l oldalra. A k\u00e9t akci\u00f3 l\u00e9trehoz\u00e1sa ut\u00e1n \u00edgy fog kin\u00e9zni a navig\u00e1ci\u00f3s gr\u00e1f: Az akci\u00f3k megh\u00edv\u00e1s\u00e1hoz haszn\u00e1ljuk a view binding-ot a MenuFragment -ben: class MenuFragment : Fragment () { private lateinit var binding : FragmentMenuBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentMenuBinding . inflate ( inflater , container , false ) return binding . root ; } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnProfile . setOnClickListener { findNavController (). navigate ( R . id . action_menuFragment_to_profileFragment ) } binding . btnHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_menuFragment_to_holidayFragment ) } } } A findNavController() f\u00fcggv\u00e9nnyel \u00e9rhetj\u00fck el a NavController oszt\u00e1ly aktu\u00e1lis p\u00e9ld\u00e1ny\u00e1t, mellyel a navig\u00e1ci\u00f3t tudjuk megval\u00f3s\u00edtani. A navig\u00e1ci\u00f3hoz haszn\u00e1lt akci\u00f3khoz automatikusan gener\u00e1l\u00f3dik egy azonos\u00edt\u00f3, de ezeket a szerkeszt\u0151ben m\u00f3dos\u00edthatjuk, ha szeretn\u00e9nk. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! 4 gombnak kell megjelennie \u00e9s a fels\u0151 kett\u0151n m\u0171k\u00f6dnie kell a navig\u00e1ci\u00f3nak a (m\u00e9g) \u00fcres Fragment-kbe.","title":"F\u0151men\u00fc k\u00e9perny\u0151"},{"location":"laborok/04-android-ui-fragments/#profil-kepernyo-elkeszitese","text":"A Profil k\u00e9perny\u0151 k\u00e9t lapozhat\u00f3 oldalb\u00f3l fog \u00e1llni, ezen a n\u00e9v, email, lakc\u00edm (els\u0151 oldal), illetve a szem\u00e9lyigazolv\u00e1ny sz\u00e1m, TAJ sz\u00e1m, ad\u00f3sz\u00e1m \u00e9s t\u00f6rzssz\u00e1m (m\u00e1sodik oldal) fognak megjelenni. Hozzunk l\u00e9tre egy data package-et, azon bel\u00fcl egy Person adatoszt\u00e1lyt, ebben fogjuk t\u00e1rolni az oldalakon megjelen\u0151 adatokat. Az adat t\u00edpus\u00fa oszt\u00e1lyok eset\u00e9ben a Kotlin automatikusan deklar\u00e1l gyakran haszn\u00e1lt f\u00fcggv\u00e9nyeket, mint p\u00e9ld\u00e1ul az equals() \u00e9s hashCode() f\u00fcggv\u00e9nyeket k\u00fcl\u00f6nb\u00f6z\u0151 objektumok \u00f6sszehasonl\u00edt\u00e1s\u00e1hoz, illetve egy toString() f\u00fcggv\u00e9nyt, mely visszaadja a t\u00e1rolt v\u00e1ltoz\u00f3k \u00e9rt\u00e9k\u00e9t. data class Person ( val name : String , val email : String , val address : String , val id : String , val socialSecurityNumber : String , val taxId : String , val registrationId : String ) A Person oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1nak el\u00e9r\u00e9s\u00e9re hozzunk l\u00e9tre egy DataManager oszt\u00e1lyt (szint\u00e9n a data package-en bel\u00fcl), ezzel fogjuk szimul\u00e1lni a val\u00f3s adatel\u00e9r\u00e9st (Singleton mint\u00e1t haszn\u00e1lunk, hogy az alkalmaz\u00e1s minden r\u00e9sz\u00e9b\u0151l egyszer\u0171en el\u00e9rhet\u0151 legyen, ehhez a Kotlin \u00e1ltal biztos\u00edtott object kulcssz\u00f3t haszn\u00e1ljuk): object DataManager { val person = Person ( \"Test User\" , \"testuser@domain.com\" , \"1234 Test, Random Street 1.\" , \"123456AB\" , \"123456789\" , \"1234567890\" , \"0123456789\" ) } A profiloldalon az a c\u00e9lunk, hogy k\u00e9t k\u00fcl\u00f6n r\u00e9szben megjelen\u00edts\u00fck a norm\u00e1l \u00e9s r\u00e9szletes adatokat. A k\u00e9t oldal k\u00f6z\u00f6tt v\u00edzszintes swipe-al lehet majd l\u00e9pni. Ehhez egy ViewPager -t fogunk haszn\u00e1lni, mely Fragment oldalak k\u00f6z\u00f6tt k\u00e9pes ilyen interakci\u00f3t megval\u00f3s\u00edtani. Hozzunk l\u00e9tre egy \u00faj package -et profile n\u00e9ven, majd mozgassuk \u00e1t ebbe a ProfileFragment oszt\u00e1lyunkat. A mozgat\u00e1s ut\u00e1n a k\u00f6vetkez\u0151 helyeken jav\u00edtani kell a f\u00e1jl \u00fatvonal\u00e1t: - fragment_profile.xml context r\u00e9sz - nav_graph.xml megfelel\u0151 tag name param\u00e9tere - R import\u00e1l\u00e1sa a ProfileFragment f\u00e1jlban. Ezut\u00e1n elk\u00e9sz\u00edthetj\u00fck a k\u00e9t oldalt, Fragmentekkel. Hozzuk l\u00e9tre a profile package-ben a k\u00e9t Fragmentet (New -> Kotlin Class), ezek neve legyen MainProfileFragment \u00e9s DetailsProfileFragment . A k\u00e9t Fragmentben sz\u00e1rmazzunk le a Fragment oszt\u00e1lyb\u00f3l (androidx-es verzi\u00f3t v\u00e1lasszuk) \u00e9s defini\u00e1ljuk fel\u00fcl az onCreateView met\u00f3dust. Ebben bet\u00f6ltj\u00fck a layout-ot \u00e9s a Person objektum adatait ki\u00edrjuk a TextView-kra. MainProfileFragment.kt : class MainProfileFragment : Fragment (){ private lateinit var binding : FragmentProfileMainBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentProfileMainBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) val person = DataManager . person binding . tvName . text = person . name binding . tvEmail . text = person . email binding . tvAddress . text = person . address } } DetailsProfileFragment.kt : class DetailsProfileFragment : Fragment (){ private lateinit var binding : FragmentProfileDetailBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentProfileDetailBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) val person = DataManager . person binding . tvId . text = person . id binding . tvSSN . text = person . socialSecurityNumber binding . tvTaxId . text = person . taxId binding . tvRegistrationId . text = person . registrationId } } K\u00e9sz\u00edts\u00fck el a megfelel\u0151 layout-okat a Fragmentekhez ( profile_main.xml \u00e9s profile_detail.xml ). profile_main.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Name:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvName\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Email:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvEmail\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Address:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvAddress\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> </LinearLayout> profile_detail.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Social Security ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvSSN\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Tax ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvTaxId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Registration ID:\" android:textAllCaps= \"true\" android:textSize= \"20sp\" /> <TextView android:id= \"@+id/tvRegistrationId\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginBottom= \"20dp\" android:textColor= \"#000000\" android:textSize= \"34sp\" /> </LinearLayout> (Szervezz\u00fck ki a sz\u00f6vegeket er\u0151forr\u00e1sba) M\u00e1r csak a lapoz\u00e1s megval\u00f3s\u00edt\u00e1sa maradt h\u00e1tra, ezt a ViewPager oszt\u00e1llyal fogjuk megval\u00f3s\u00edtani. A fragment_profile.xml f\u00e1jlba hozzunk l\u00e9tre egy ViewPager -t: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"hu.bme.aut.workplaceapp.profile.ProfileFragment\" > <androidx.viewpager2.widget.ViewPager2 android:id= \"@+id/vpProfile\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> ViewPager2 A ViewPager2 oszt\u00e1ly egy teljes \u00fajra\u00edr\u00e1sa az eredeti ViewPager oszt\u00e1lynak, a RecyclerView-re alapozva. A ViewPager oszt\u00e1ly egy PagerAdapter oszt\u00e1ly seg\u00edts\u00e9g\u00e9vel tudja az oldalakat l\u00e9trehozni. Hozzunk l\u00e9tre egy \u00faj PagerAdaptert a k\u00e9t Fragment\u00fcnkh\u00f6z. ProfilePagerAdapter.kt : class ProfilePageAdapter ( fragment : Fragment ) : FragmentStateAdapter ( fragment ) { override fun getItemCount (): Int = NUM_PAGES override fun createFragment ( position : Int ): Fragment = when ( position ){ 0 -> MainProfileFragment () 1 -> DetailsProfileFragment () else -> MainProfileFragment () } companion object { const val NUM_PAGES = 2 } } A ProfileFragment-ben rendelj\u00fck hozz\u00e1 a ViewPagerhez a most elk\u00e9sz\u00edtett adaptert: class ProfileFragment : Fragment () { private lateinit var binding : FragmentProfileBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentProfileBinding . inflate ( inflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . vpProfile . adapter = ProfilePageAdapter ( this ) } } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st. A Profile gombra kattinva megjelennek a felhaszn\u00e1l\u00f3 adatai \u00e9s lehet lapozni is.","title":"Profil k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se"},{"location":"laborok/04-android-ui-fragments/#szabadsag-kepernyo-elkeszitese","text":"A Szabads\u00e1g k\u00e9perny\u0151n egy k\u00f6rdiagramot fogunk megjelen\u00edteni, ami mutatja, hogy mennyi szabads\u00e1got vett\u00fcnk m\u00e1r ki \u00e9s mennyi maradt. Ezen k\u00edv\u00fcl egy gomb seg\u00edts\u00e9g\u00e9vel \u00faj szabadnap kiv\u00e9tel\u00e9t is megengedj\u00fck a felhaszn\u00e1l\u00f3nak. El\u0151sz\u00f6r eg\u00e9sz\u00edts\u00fck ki a DataManager oszt\u00e1lyunkat, hogy kezelje a szabads\u00e1ghoz kapcsol\u00f3d\u00f3 adatokat is: const val HOLIDAY_MAX_VALUE = 20 const val HOLIDAY_DEFAULT_VALUE = 15 var holidays = HOLIDAY_DEFAULT_VALUE val remainingHolidays get () = HOLIDAY_MAX_VALUE - holidays A PieChart kirajzol\u00e1s\u00e1hoz az MPAndroidChart library-t fogjuk haszn\u00e1lni. settings.gradle: dependencyResolutionManagement { repositories { ... maven { url \"https://jitpack.io\" } } } App szint\u0171 build.gradle: dependencies { ... implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0' } Ezut\u00e1n kattinsunk az Android Studioban jobb fent megjelen\u0151 Sync Now feliratra vagy a fejl\u00e9cen szerepl\u0151 m\u00e9rges gradle elef\u00e1nt gombra, hogy a library f\u00e1jljai let\u00f6lt\u0151djenek. Ha a library f\u00e1jljai let\u00f6lt\u0151dtek, akkor \u00edrjuk meg a Fragment layout-j\u00e1t ( fragment_holiday.xml ): <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \"hu.bme.aut.workplaceapp.HolidayFragment\" > <com.github.mikephil.charting.charts.PieChart android:id= \"@+id/chartHoliday\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" /> <Button android:id= \"@+id/btnTakeHoliday\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Take Holiday\" android:layout_gravity= \"center\" /> </LinearLayout> \u00cdrjuk meg a Fragment k\u00f3dj\u00e1t ( HolidayFragment.kt ): class HolidayFragment : Fragment () { private lateinit var binding : FragmentHolidayBinding override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View { binding = FragmentHolidayBinding . inflate ( layoutInflater , container , false ) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnTakeHoliday . setOnClickListener { //TODO: DatePickerDialogFragment megjelen\u00edt\u00e9se } loadHolidays () } private fun loadHolidays (){ val entries = listOf ( PieEntry ( DataManager . holidays . toFloat (), \"Taken\" ), PieEntry ( DataManager . remainingHolidays . toFloat (), \"Remaining\" ) ) val dataSet = PieDataSet ( entries , \"Holidays\" ) dataSet . colors = ColorTemplate . MATERIAL_COLORS . toList () val data = PieData ( dataSet ) binding . chartHoliday . data = data binding . chartHoliday . invalidate () } } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! A PieChart most m\u00e1r megjelenik, de a gomb m\u00e9g nem kell, hogy m\u0171k\u00f6dj\u00f6n.","title":"Szabads\u00e1g k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se"},{"location":"laborok/04-android-ui-fragments/#datumvalaszto-megvalositasa","text":"A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben a Take Holiday gombra megjelen\u0151 d\u00e1tumv\u00e1laszt\u00f3 m\u0171k\u00f6d\u00e9s\u00e9t fogjuk megval\u00f3s\u00edtani. A gomb lenyom\u00e1s\u00e1ra megjelenik egy d\u00e1tumv\u00e1laszt\u00f3 \u00e9s a d\u00e1tum kiv\u00e1laszt\u00e1sa ut\u00e1n a szabad napok eggyel cs\u00f6kkennek. Hozzunk l\u00e9tre egy DatePickerDialogFragment oszt\u00e1lyt: class DatePickerDialogFragment : DialogFragment (), DatePickerDialog . OnDateSetListener { override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { val c = Calendar . getInstance () val year = c . get ( Calendar . YEAR ) val month = c . get ( Calendar . MONTH ) val day = c . get ( Calendar . DAY_OF_MONTH ) return DatePickerDialog ( requireContext (), this , year , month , day ) } override fun onDateSet ( view : DatePicker?, year : Int , month : Int , dayOfMonth : Int ) { //TODO: return result } } Az importokn\u00e1l a java.util -t v\u00e1lasszuk a Calendarhoz, a Fragment-hez pedig az androidx -es verzi\u00f3t. Vegy\u00fck fel a dial\u00f3gust a navig\u00e1ci\u00f3s gr\u00e1fba! Ehhez kattintsunk a New Destination gombra, \u00e9s v\u00e1lasszuk ki a most l\u00e9trehozott DatePickerDialogFragment oszt\u00e1lyt. Dialog a navig\u00e1ci\u00f3s gr\u00e1fban A kiv\u00e1laszt\u00e1sn\u00e1l \u00e9szrevehetj\u00fck, hogy a t\u00edpusn\u00e1l a Fragment (dialog) van megadva, m\u00edg a t\u00f6bbi k\u00e9perny\u0151n\u00e9l csak Fragment . Ez az\u00e9rt van, mert az oszt\u00e1ly a DialogFragment -b\u0151l sz\u00e1rmazik le, ami a navig\u00e1ci\u00f3s gr\u00e1f m\u00e1shogy kezel, mivel ez nem egy teljes k\u00e9perny\u0151s n\u00e9zet. Ha \u00e1tv\u00e1ltunk a k\u00f3d n\u00e9zetbe, ott is l\u00e1that\u00f3, hogy dialog taggel van felv\u00e9ve ez az \u00fatvonal. Adjunk hozz\u00e1 a navig\u00e1ci\u00f3hoz egy akci\u00f3t, mely a HolidayFragment -b\u0151l a DatePickerDialogFragment -re mutat. \u00c1ll\u00edtsuk be a gomb esem\u00e9nykezel\u0151j\u00e9t a HolidayFragment-ben, hogy lenyom\u00e1skor jelen\u00edtse meg a d\u00e1tumv\u00e1laszt\u00f3t: binding . btnTakeHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_holidayFragment_to_datePickerDialogFragment ) } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! Mostm\u00e1r megjelenik a dial\u00f3gus egy kisebb ablakban, de m\u00e9g a d\u00e1tumv\u00e1laszt\u00e1s eredm\u00e9nye nem jut vissza a kiindul\u00f3 k\u00e9perny\u0151re. A kiv\u00e1lasztott d\u00e1tum feldolgoz\u00e1s\u00e1hoz implement\u00e1ljuk az OnDateSelectedListener-t a HolidayActivity-ben: class HolidayActivity : AppCompatActivity (), DatePickerDialogFragment . OnDateSelectedListener { ... override fun onDateSelected ( year : Int , month : Int , day : Int ) { val numHolidays = DataManager . holidays if ( DataManager . remainingHolidays > 0 ){ DataManager . holidays = numHolidays + 1 } loadHolidays () }","title":"D\u00e1tumv\u00e1laszt\u00f3 megval\u00f3s\u00edt\u00e1sa"},{"location":"laborok/04-android-ui-fragments/#fragmentek-kozotti-kommunikacio-a-navigation-component-segitsegevel","text":"Ahogy l\u00e1thattuk az eddigi feladatok megold\u00e1saib\u00f3l, a Navigation Component a haszn\u00e1lata sor\u00e1n maga kezeli a Fragmenteket, \u0151 felel\u0151s a p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e9rt. Ennek k\u00f6sz\u00f6nhet\u0151en ha kommunik\u00e1lni akarunk a k\u00e9perny\u0151k k\u00f6z\u00f6tt, akkor azt is a Navigation Component seg\u00edts\u00e9g\u00e9vel tudjuk megtenni. Kommunik\u00e1ci\u00f3 sor\u00e1n alapvet\u0151en k\u00e9t ir\u00e1nyr\u0151l besz\u00e9lhet\u00fcnk: A h\u00edv\u00f3 f\u00e9l szeretne valamilyen param\u00e9tert \u00e1tadni az \u00faj oldalnak. Az \u00faj, jelenleg l\u00e1that\u00f3 oldal szeretne valamilyen \u00e9rt\u00e9ket visszaadni az el\u0151z\u0151 oldalnak. T\u00f6bb oldalon kereszt\u00fcli navig\u00e1ci\u00f3 A Navigation Component csak a szomsz\u00e9dos oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t teszi lehet\u0151v\u00e9. T\u00f6bb oldal eset\u00e9n \u00e9rdemesebb valamilyen eg\u00e9sz alkalmaz\u00e1sra vonatkoz\u00f3 \u00e1llapotkezel\u00e9si megold\u00e1st haszn\u00e1lni. Az \u00faj oldalnak val\u00f3 param\u00e9ter\u00e1tad\u00e1s eset\u00e9ben a fel\u00fcleti szerkeszt\u0151ben a megfelel\u0151 oldalt kiv\u00e1lasztva tudunk felvenni \u00faj param\u00e9tereket. Itt megadhatjuk a param\u00e9ter nev\u00e9t, t\u00edpus\u00e1t, illetve p\u00e1r egy\u00e9b opcion\u00e1lis be\u00e1ll\u00edt\u00e1st. Ezekb\u0151l a Safe Args csomag seg\u00edts\u00e9g\u00e9vel minden akci\u00f3hoz egy seg\u00e9doszt\u00e1ly fog gener\u00e1l\u00f3dni, melyet p\u00e9ld\u00e1nyos\u00edtva meg tudjuk adni a param\u00e9tereket, \u00e9s ezt \u00e1tadva a NavController navigate() f\u00fcggv\u00e9ny\u00e9nek, \u00e1t tudunk navig\u00e1lni az \u00faj oldalra. Az \u00faj oldalon pedig a by navArgs() haszn\u00e1lat\u00e1val el tudunk k\u00e9rni egy olyan objektumot, mely tartalmazni fogja ezeket a param\u00e9tereket. Ezen a laboron erre nem lesz sz\u00fcks\u00e9g\u00fcnk. Az \u00e9rt\u00e9k visszaad\u00e1s\u00e1ra a Navigation Component egy els\u0151re bonyolultnak t\u0171n\u0151 megold\u00e1st ad, viszont erre sz\u00fcks\u00e9g van, mivel nincsen garant\u00e1lva, hogy visszat\u00e9r\u00e9skor az el\u0151z\u0151 Fragment objektum m\u00e9g l\u00e9tezik. A Navigation Component minden k\u00e9perny\u0151j\u00e9hez egy NavBackStackEntry -t rendel, mely t\u00f6bbek k\u00f6z\u00f6tt tartalmaz egy t\u00e1rol\u00e1sra alkalmas objektumot ( SavedStateHandle ). Az \u00faj oldal ebbe tud k\u00fcldeni egy \u00faj \u00e9rt\u00e9ket, m\u00edg az eredeti oldal meg tudja figyelni az ezeken t\u00f6rt\u00e9n\u0151 v\u00e1ltoz\u00e1sokat. Lifecycle A SavedStateHandle \u00e9p\u00edt az Androidban elterjedt Lifecycle koncepci\u00f3ra, ennek r\u00e9szletes bemutat\u00e1sa azonban t\u00falmutat a labor anyag\u00e1n, el\u00e9g csak mag\u00e1t a kommunik\u00e1ci\u00f3 m\u00f3dj\u00e1t \u00e9rteni. Val\u00f3s\u00edtsuk meg a d\u00e1tumv\u00e1laszt\u00f3 fel\u00fclet kommunik\u00e1ci\u00f3j\u00e1t! El\u0151sz\u00f6r vizsg\u00e1ljuk meg a d\u00e1tumv\u00e1laszt\u00e1s oldal\u00e1t. Vegy\u00fcnk fel egy \u00faj kulcsot a HolidayFragment oszt\u00e1lyba, mellyel az eredm\u00e9nyt tudjuk azonos\u00edtani a fogad\u00f3oldalon: companion object { const val DATE_SELECTED_KEY = \"date_selected\" } Hozzunk l\u00e9tre a egy \u00faj oszt\u00e1lyt a DatePickerDialogFragment -en bel\u00fcl, mely az eredm\u00e9nyt fogja t\u00e1rolni: data class DatePickerResult ( val year : Int , val month : Int , val dayOfMonth : Int , ) : Serializable Serializable A Navigation Component kommunik\u00e1ci\u00f3ja a Bundle oszt\u00e1lyt haszn\u00e1lja, ez\u00e9rt nem lehet tetsz\u0151leges objektumot \u00e1tadni neki. A Serializable interf\u00e9sz haszn\u00e1lata egy k\u00f6nny\u0171 megold\u00e1st biztos\u00edt erre. Majd k\u00e9sz\u00edts\u00fck el a d\u00e1tumkiv\u00e1laszt\u00e1s f\u00fcggv\u00e9ny\u00e9t: override fun onDateSet ( view : DatePicker?, year : Int , month : Int , dayOfMonth : Int ) { val result = DatePickerResult ( year , month , dayOfMonth ) findNavController () . previousBackStackEntry ?. savedStateHandle ?. set ( HolidayFragment . DATE_SELECTED_KEY , result ) } Vizsg\u00e1ljuk meg, hogyan m\u0171k\u00f6dik a kommunik\u00e1ci\u00f3! Mivel az el\u0151z\u0151 oldalnak akarok \u00e9rt\u00e9ket visszaadni, a previousBackStackEntry param\u00e9tert haszn\u00e1lom, mely \u00edgy a HolidayFragment -hez fog tartozni. Ennek a SavedStateHandle objektum\u00e1n a set() met\u00f3dush\u00edv\u00e1ssal tudok param\u00e9tert \u00e1tadni. K\u00e9sz\u00edts\u00fck el a fogad\u00f3 f\u00e9l oldal\u00e1t is. Ehhez az HolidayFragment onViewCreated() met\u00f3dus\u00e1ban fel kell iratkoznunk a megfelel\u0151 eredm\u00e9ny objektumra: override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . btnTakeHoliday . setOnClickListener { findNavController (). navigate ( R . id . action_holidayFragment_to_datePickerDialogFragment ) } findNavController () . currentBackStackEntry ?. savedStateHandle ?. getLiveData < DatePickerDialogFragment . DatePickerResult > ( DATE_SELECTED_KEY ) ?. observe ( viewLifecycleOwner ) { val numHolidays = DataManager . holidays if ( DataManager . remainingHolidays > 0 ){ DataManager . holidays = numHolidays + 1 } loadHolidays () } loadHolidays () } Itt az observe() met\u00f3dusnak \u00e1tadott callback met\u00f3dus (a kapcsos z\u00e1r\u00f3jel k\u00f6z\u00f6tti r\u00e9sz) minden alkalommal meg fog h\u00edvodni, amikor valamilyen v\u00e1ltoz\u00e1s t\u00f6rt\u00e9nik az eredm\u00e9nyben. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! Most m\u00e1r a gomb is j\u00f3l kell, hogy m\u0171k\u00f6dj\u00f6n, a napok sz\u00e1m\u00e1nak is cs\u00f6kkennie kell a diagramon.","title":"Fragmentek k\u00f6z\u00f6tti kommunik\u00e1ci\u00f3 a Navigation Component seg\u00edts\u00e9g\u00e9vel"},{"location":"laborok/04-android-ui-fragments/#onallo-feladat","text":"Csak akkor engedj\u00fcnk \u00faj szabads\u00e1got kivenni, ha a kiv\u00e1lasztott nap a mai napn\u00e1l k\u00e9s\u0151bbi. Ha elfogyott a szabads\u00e1gkeret\u00fcnk, akkor a Take Holiday gomb legyen letiltva.","title":"\u00d6n\u00e1ll\u00f3 feladat"},{"location":"laborok/04-android-ui-fragments/#imsc-feladat","text":"","title":"iMSc feladat"},{"location":"laborok/04-android-ui-fragments/#fizetes-menupont-megvalositasa","text":"A Payment men\u00fcpontra kattintva jelenjen meg egy PaymentActivity rajta egy ViewPager-rel \u00e9s 2 Fragment-tel (A Profile men\u00fcponthoz hasonl\u00f3an): - PaymentTaxesFragment : k\u00f6rdiagram, aminek a k\u00f6zep\u00e9be van \u00edrva az aktu\u00e1lis fizet\u00e9s \u00e9s mutatja a nett\u00f3 j\u00f6vedelmet illetve a levont ad\u00f3kat (ad\u00f3nk\u00e9nt k\u00fcl\u00f6n) - MonthlyPaymentFragment : egy oszlopdiagramot mutasson 12 oszloppal, a havi szinten lebontott fizet\u00e9seket mutatva - \u00e9rdemes az adatokat itt is a DataManager oszt\u00e1lyban t\u00e1rolni Seg\u00edts\u00e9g","title":"Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa"},{"location":"laborok/05-android-sqlite/","text":"Labor 05 - Rajzol\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se \u00b6 Bevezet\u0151 \u00b6 A labor sor\u00e1n egy egyszer\u0171 rajzol\u00f3 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1ssal egy v\u00e1szonra lehet vonalakat vagy pontokat rajzolni. Ezen k\u00edv\u00fcl sz\u00fcks\u00e9ges a rajzolt \u00e1br\u00e1t perzisztensen elmenteni, hogy az alkalmaz\u00e1s \u00fajraind\u00edt\u00e1sa ut\u00e1n is visszat\u00f6lt\u0151dj\u00f6n. Felt\u00f6lt\u00e9s \u00b6 Az elk\u00e9sz\u00fclt megold\u00e1st .zip form\u00e1tumban (File -> Export to zip file...) kell felt\u00f6lteni a t\u00e1rgy oldal\u00e1n, ahol a laborvezet\u0151 tudja \u00e9rt\u00e9kelni. El\u0151k\u00e9sz\u00fcletek \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. A projekt el\u0151k\u00e9sz\u00edt\u00e9se \u00b6 A projekt l\u00e9trehoz\u00e1sa \u00b6 Hozzunk l\u00e9tre egy \u00faj Android projektet, Add no Activity opci\u00f3val. Az Application name mez\u0151ben adjuk meg a Simple Drawer nevet. A Package n\u00e9v legyen hu.bme.aut.android.simpledrawer . Nyelvnek a Kotlin legyen kiv\u00e1lasztva, a minimum SDK szintje legyen API 21. Ezut\u00e1n nyomjunk a Finish gombra. Adjunk a projekthez egy \u00faj Empty activity oszt\u00e1lyt. Activity name -nek adjuk meg, hogy DrawingActivity , \u00e9s hagyjuk bepip\u00e1lva azt, hogy gener\u00e1ljon layout f\u00e1jlt, valamint pip\u00e1ljuk be a Launcher Activity opci\u00f3t. Ha ezekkel megvagyunk, akkor r\u00e1nyomhatunk a Finish -re. Miut\u00e1n l\u00e9trej\u00f6tt a projekt, t\u00f6r\u00f6lj\u00fck ki a teszt package-eket, mert most nem lesz r\u00e1 sz\u00fcks\u00e9g\u00fcnk. A resource-ok hozz\u00e1ad\u00e1sa \u00b6 El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt , ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio -ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk erre az id\u0151re). Az al\u00e1bbi, alkalmaz\u00e1shoz sz\u00fcks\u00e9ges string resource -okat m\u00e1soljuk be a res/values/strings.xml f\u00e1jlba: <resources> <string name= \"app_name\" > Simple Drawer </string> <string name= \"style\" > St\u00edlus </string> <string name= \"line\" > Vonal </string> <string name= \"point\" > Pont </string> <string name= \"are_you_sure_want_to_exit\" > Biztosan ki akarsz l\u00e9pni? </string> <string name= \"ok\" > OK </string> <string name= \"cancel\" > M\u00e9gse </string> </resources> \u00c1ll\u00f3 layout kik\u00e9nyszer\u00edt\u00e9se \u00b6 Az alkalmaz\u00e1sunkban az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most csak az \u00e1ll\u00f3 m\u00f3dot t\u00e1mogatjuk. Ehhez az AndroidManifest.xml -ben a DrawingActivity nyit\u00f3tagj\u00e1hoz kell hozz\u00e1adni egy sort a k\u00f6vetkez\u0151 m\u00f3don: <activity android:name= \".DrawingActivity\" android:exported= \"true\" android:screenOrientation= \"portrait\" > Laborfeladatok \u00b6 A labor sor\u00e1n a k\u00f6vetkez\u0151 feladatokat kell megval\u00f3s\u00edtani a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve bizonyos feladatokat \u00f6n\u00e1ll\u00f3an. A labor v\u00e9g\u00e9n lehet\u0151s\u00e9g van iMSc pontokat is szerezni a jel\u00f6lt feladatok megold\u00e1s\u00e1val. 1. feladat: A kezd\u0151 layout l\u00e9trehoz\u00e1sa (1 pont) \u00b6 Els\u0151 l\u00e9p\u00e9sk\u00e9nt hozzunk l\u00e9tre egy \u00faj package -et az hu.bme.aut.android.simpledrawer -en bel\u00fcl, aminek adjuk a view nevet. Ebben hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt, amit nevezz\u00fcnk el DrawingView -nak, \u00e9s sz\u00e1rmazzon le a View oszt\u00e1lyb\u00f3l ( android.view.View ). Hozzuk l\u00e9tre a sz\u00fcks\u00e9ges konstruktort ezen bel\u00fcl: class DrawingView ( context : Context?, attrs : AttributeSet?) : View ( context , attrs ) { } Miut\u00e1n l\u00e9trehoztuk a DrawingView -t, nyissuk meg a res/layout/activity_drawing.xml -t, \u00e9s hozzunk l\u00e9tre gy\u00f6k\u00e9relemk\u00e9nt egy RelativeLayout -ot, azon bel\u00fcl pedig fel\u00fclre a frissen l\u00e9trehozott DrawingView -nkb\u00f3l helyezz\u00fcnk el egy p\u00e9ld\u00e1nyt fekete h\u00e1tt\u00e9rrel, alulra pedig egy Toolbar -t rakjunk ki. V\u00e9gezet\u00fcl a layoutnak \u00edgy kell kin\u00e9znie: <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <hu.bme.aut.android.simpledrawer.view.DrawingView android:id= \"@+id/canvas\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_above= \"@+id/toolbar\" android:background= \"@android:color/black\" /> <androidx.appcompat.widget.Toolbar android:id= \"@+id/toolbar\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_alignParentBottom= \"true\" android:background= \"?android:colorPrimary\" /> </RelativeLayout> 2. feladat: St\u00edlusv\u00e1laszt\u00f3 (2 pont) \u00b6 Miut\u00e1n l\u00e9trehoztuk a rajzol\u00e1s tulajdons\u00e1gainak \u00e1ll\u00edt\u00e1s\u00e1\u00e9rt felel\u0151s Toolbar -t, hozzuk l\u00e9tre a men\u00fct, amivel be lehet \u00e1ll\u00edtani, hogy pontot vagy vonalat rajzoljunk. Ehhez hozzunk l\u00e9tre egy \u00faj Android resource directory -t menu n\u00e9ven a res mapp\u00e1ban, \u00e9s Resource type -nak is v\u00e1lasszuk azt, hogy menu . Ezen bel\u00fcl hozzunk l\u00e9tre egy \u00faj Menu resource file -t menu_toolbar.xml n\u00e9ven. Ebben hozzunk l\u00e9tre az al\u00e1bbi hierarchi\u00e1t: <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" > <item android:id= \"@+id/menu_style\" android:checkableBehavior= \"single\" android:icon= \"@drawable/ic_style\" android:title= \"@string/style\" app:showAsAction= \"ifRoom\" > <menu> <group android:checkableBehavior= \"single\" > <item android:id= \"@+id/menu_style_line\" android:checked= \"true\" android:title= \"@string/line\" /> <item android:id= \"@+id/menu_style_point\" android:checked= \"false\" android:title= \"@string/point\" /> </group> </menu> </item> </menu> Ezut\u00e1n k\u00f6ss\u00fck be a men\u00fct, hogy megjelenjen a Toolbar -on. Ahhoz, hogy el\u00e9rj\u00fck a l\u00e9trehozott er\u0151forr\u00e1sokat k\u00f3db\u00f3l, view binding-ra lesz sz\u00fcks\u00e9g\u00fcnk. A modul szint\u0171 gradle file-ba fegy\u00fck fel a k\u00f6vetkez\u0151 elemet. Ne felejts\u00fcnk el a Sync now gombra kattintani a m\u00f3dos\u00edt\u00e1st k\u00f6vet\u0151en. android { ... buildFeatures { viewBinding true } } Ezut\u00e1n hozzunk l\u00e9tre egy binding adattagot a DrawingActivity -n bel\u00fcl toolbarBinding n\u00e9ven \u00e9s inicializ\u00e1ljuk az onCreate f\u00fcggv\u00e9nyben. private lateinit var binding : ActivityDrawingBinding override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDrawingBinding . inflate ( layoutInflater ) setContentView ( binding . root ) } M\u00e1r csak annyi van h\u00e1tra, hogy a DrawingActivity -ben fel\u00fcldefini\u00e1ljuk az Activity onCreateOptionsMenu() \u00e9s onOptionsItemSelected() f\u00fcggv\u00e9ny\u00e9t az al\u00e1bbi m\u00f3don: override fun onCreateOptionsMenu ( menu : Menu?) : Boolean { val toolbarMenu : Menu = binding . toolbar . menu menuInflater . inflate ( R . menu . menu_toolbar , toolbarMenu ) for ( i in 0 until toolbarMenu . size ()) { val menuItem : MenuItem = toolbarMenu . getItem ( i ) menuItem . setOnMenuItemClickListener { item -> onOptionsItemSelected ( item ) } if ( menuItem . hasSubMenu ()) { val subMenu : SubMenu = menuItem . subMenu for ( j in 0 until subMenu . size ()) { subMenu . getItem ( j ) . setOnMenuItemClickListener { item -> onOptionsItemSelected ( item ) } } } } return super . onCreateOptionsMenu ( menu ) } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . menu_style_line -> { item . isChecked = true true } R . id . menu_style_point -> { item . isChecked = true true } else -> super . onOptionsItemSelected ( item ) } } 3. feladat: A DrawingView oszt\u00e1ly implement\u00e1l\u00e1sa \u00b6 A modellek l\u00e9trehoz\u00e1sa \u00b6 A rajzprogramunk, ahogy az m\u00e1r az el\u0151z\u0151 feladatban is kider\u00fclt, k\u00e9tf\u00e9le rajzol\u00e1si st\u00edlust fog t\u00e1mogatni. Nevezetesen a pont- \u00e9s vonalrajzol\u00e1st. Ahhoz, hogy a rajzolt alakzatokat el tudjuk t\u00e1rolni sz\u00fcks\u00e9g\u00fcnk lesz k\u00e9t \u00faj t\u00edpusra, modellre, amihez hozzunk l\u00e9tre egy \u00faj package -et a hu.bme.aut.android.simpledrawer -en bel\u00fcl model n\u00e9ven. Ezen bel\u00fcl el\u0151sz\u00f6r hozzunk l\u00e9tre egy Point oszt\u00e1lyt, ami \u00e9rtelemszer\u0171en a pontokat fogja reprezent\u00e1lni. K\u00e9tparam\u00e9teres konstruktort fogunk l\u00e9trehozni, amihez alap\u00e9rt\u00e9keket rendel\u00fcnk. data class Point ( var x : Float = 0F , var y : Float = 0F ) Miut\u00e1n ezzel megvagyunk, hozzunk l\u00e9tre egy Line oszt\u00e1lyt. Mivel egy vonalat a k\u00e9t v\u00e9gpontj\u00e1nak megad\u00e1s\u00e1val ki tudunk rajzoltatni, \u00edgy elegend\u0151 k\u00e9t Point -ot tartalmaznia az oszt\u00e1lynak. data class Line ( var start : Point , var end : Point ) A rajzol\u00e1si st\u00edlus be\u00e1ll\u00edt\u00e1sa \u00b6 Most, hogy megvannak a modelljeink el lehet kezdeni mag\u00e1nak a rajzol\u00e1s funkci\u00f3j\u00e1nak fejleszt\u00e9s\u00e9t. Ehhez a DrawingView oszt\u00e1lyt fogjuk t\u00e9nylegesen is elk\u00e9sz\u00edteni. El\u0151sz\u00f6r vegy\u00fcnk fel az oszt\u00e1lyon bel\u00fcl egy companion object -et, amiben a rajzol\u00e1si st\u00edlus konstansait fogjuk meghat\u00e1rozni. Ehhez kapcsol\u00f3d\u00f3an vegy\u00fcnk fel egy \u00faj field -et az oszt\u00e1lyunkba, amiben elt\u00e1roljuk, hogy jelenleg milyen st\u00edlus van kiv\u00e1lasztva. companion object { const val DRAWING_STYLE_LINE = 1 const val DRAWING_STYLE_POINT = 2 } var currentDrawingStyle = DRAWING_STYLE_LINE Ha ezek megvannak, akkor eg\u00e9sz\u00edts\u00fck ki a DrawingActivity -ben a men\u00fckezel\u00e9st, \u00fagy, hogy a megfelel\u0151 f\u00fcggv\u00e9nyek h\u00edv\u00f3djanak meg. Az onOptionsItemSelected() f\u00fcggv\u00e9ny megfelel\u0151 case \u00e1g\u00e1ban meg kell h\u00edvnunk a canvas -ra a setDrawingStyle() f\u00fcggv\u00e9nyt a megfelel\u0151 param\u00e9terrel. override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . menu_style_line -> { binding . canvas . currentDrawingStyle = DrawingView . DRAWING_STYLE_LINE item . isChecked = true true } R . id . menu_style_point -> { binding . canvas . currentDrawingStyle = DrawingView . DRAWING_STYLE_POINT item . isChecked = true true } else -> super . onOptionsItemSelected ( item ) } } Inicializ\u00e1l\u00e1sok \u00b6 A rajzol\u00e1si funkci\u00f3 megval\u00f3s\u00edt\u00e1s\u00e1hoz fel kell venn\u00fcnk n\u00e9h\u00e1ny tov\u00e1bbi field -et a DrawingView oszt\u00e1lyban, amiket a konstruktorban inicializ\u00e1lnunk kell. A paint objektumhoz hozz\u00e1adjuk a lateinit kulcssz\u00f3t, hogy el\u00e9g legyen az init blokkban inicializ\u00e1lnunk. A Point oszt\u00e1ly import-ja sor\u00e1n haszn\u00e1ljuk a kor\u00e1bban defini\u00e1lt oszt\u00e1lyunkat. private lateinit var paint : Paint private var startPoint : Point? = null private var endPoint : Point? = null var lines : MutableList < Line > = mutableListOf () var points : MutableList < Point > = mutableListOf () init { initPaint () } private fun initPaint () { paint = Paint () paint . color = Color . GREEN paint . style = Paint . Style . STROKE paint . strokeWidth = 5F } Gesztusok kezel\u00e9se \u00b6 Ahhoz, hogy vonalat vagy pontot tudjunk rajzolni a View -nkra, kezeln\u00fcnk kell a felhaszn\u00e1l\u00f3t\u00f3l kapott gesztusokat, mint p\u00e9ld\u00e1ul amikor hozz\u00e1\u00e9r a kijelz\u0151h\u00f6z, elh\u00fazza rajta vagy felemeli r\u00f3la az ujj\u00e1t. Szerencs\u00e9re ezeket a gesztusokat nem sz\u00fcks\u00e9ges manu\u00e1lisan felismern\u00fcnk \u00e9s lekezeln\u00fcnk, a View \u0151soszt\u00e1ly onTouchEvent() f\u00fcggv\u00e9ny\u00e9nek fel\u00fcldefini\u00e1l\u00e1s\u00e1val egyszer\u0171en megolhat\u00f3 a feladat. @SuppressLint ( \"ClickableViewAccessibility\" ) override fun onTouchEvent ( event : MotionEvent ): Boolean { endPoint = Point ( event . x , event . y ) when ( event . action ) { MotionEvent . ACTION_DOWN -> startPoint = Point ( event . x , event . y ) MotionEvent . ACTION_MOVE -> { } MotionEvent . ACTION_UP -> { when ( currentDrawingStyle ) { DRAWING_STYLE_POINT -> addPointToTheList ( endPoint !! ) DRAWING_STYLE_LINE -> addLineToTheList ( startPoint !! , endPoint !! ) } startPoint = null endPoint = null } else -> return false } invalidate () return true } private fun addPointToTheList ( startPoint : Point ) { points . add ( startPoint ) } private fun addLineToTheList ( startPoint : Point , endPoint : Point ) { lines . add ( Line ( startPoint , endPoint )) } Ahogy a fenti k\u00f3dr\u00e9szletb\u0151l is l\u00e1tszik minden gesztusn\u00e1l elmentj\u00fck az adott TouchEvent pontj\u00e1t, mint a rajzol\u00e1s v\u00e9gpontj\u00e1t, illetve ha MotionEvent.ACTION_DOWN t\u00f6rt\u00e9nt, teh\u00e1t a felhaszn\u00e1l\u00f3 hozz\u00e1\u00e9rt a View -hoz, elmentj\u00fck ezt kezd\u0151pontk\u00e9nt is. Am\u00edg a felhaszn\u00e1l\u00f3 mozgatja az ujj\u00e1t a View -n ( MotionEvent.ACTION_MOVE ), addig nem csin\u00e1lunk semmit, de amint felemeli ( MotionEvent.ACTION_UP ), elmentj\u00fck az adott elemet a kor\u00e1bban m\u00e1r defini\u00e1lt list\u00e1kba. Ezen k\u00edv\u00fcl minden egyes alkalommal megh\u00edvjuk az invalidate() f\u00fcggv\u00e9nyt, ami kik\u00e9nyszer\u00edti a View \u00fajrarajzol\u00e1s\u00e1t. A rajzol\u00e1s \u00b6 A rajzol\u00e1s megval\u00f3s\u00edt\u00e1s\u00e1hoz a View \u0151soszt\u00e1ly onDraw() met\u00f3dus\u00e1t kell fel\u00fcldefini\u00e1lnunk. Egyr\u00e9szt ki kell rajzolnunk a m\u00e1r megl\u00e9v\u0151 objektumokat (amiket a MotionEvent.ACTION_UP esem\u00e9nyn\u00e9l beleraktunk a list\u00e1ba), valamint ki kell rajzolnunk az aktu\u00e1lis kezd\u0151pont (a MotionEvent.ACTION_DOWN esem\u00e9nyt\u0151l) \u00e9s a felhaszn\u00e1l\u00f3 ujja k\u00f6z\u00f6tti vonalat. override fun onDraw ( canvas : Canvas ) { super . onDraw ( canvas ) for ( point in points ) { drawPoint ( canvas , point ) } for ( line in lines ) { drawLine ( canvas , line . start , line . end ) } when ( currentDrawingStyle ) { DRAWING_STYLE_POINT -> drawPoint ( canvas , endPoint ) DRAWING_STYLE_LINE -> drawLine ( canvas , startPoint , endPoint ) } } private fun drawPoint ( canvas : Canvas , point : Point?) { if ( point == null ) { return } canvas . drawPoint ( point . x , point . y , paint ) } private fun drawLine ( canvas : Canvas , startPoint : Point?, endPoint : Point?) { if ( startPoint == null || endPoint == null ) { return } canvas . drawLine ( startPoint . x , startPoint . y , endPoint . x , endPoint . y , paint ) } 4. feladat: Perzisztencia megval\u00f3s\u00edt\u00e1sa SQLite adatb\u00e1zis seg\u00edts\u00e9g\u00e9vel (1 pont) \u00b6 Ahhoz, hogy az \u00e1ltalunk rajzolt objektumok megmaradjanak az alkalmaz\u00e1sb\u00f3l val\u00f3 kil\u00e9p\u00e9s ut\u00e1n is, az adatainkat valahogy olyan form\u00e1ba kell rendezn\u00fcnk, hogy azt k\u00f6nnyed\u00e9n el tudjuk t\u00e1rolni egy SQLite adatb\u00e1zisban. Hozzunk l\u00e9tre egy \u00faj package -et az hu.bme.aut.android.simpledrawer -en bel\u00fcl, aminek adjuk az sqlite nevet. T\u00e1bl\u00e1k defini\u00e1l\u00e1sa \u00b6 Az adatb\u00e1ziskezel\u00e9s sor\u00e1n sok konstans jelleg\u0171 v\u00e1ltoz\u00f3val kell dolgoznunk, mint p\u00e9ld\u00e1ul a t\u00e1bl\u00e1kban l\u00e9v\u0151 oszlopok nevei, t\u00e1bl\u00e1k neve, adatb\u00e1zis f\u00e1jl neve, s\u00e9ma l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkiptek, stb. Ezeket \u00e9rdemes egy k\u00f6z\u00f6s helyen t\u00e1rolni, \u00edgy szerkeszt\u00e9skor vagy \u00faj entit\u00e1s bevezet\u00e9sekor nem kell a forr\u00e1sf\u00e1jlok k\u00f6z\u00f6tt ugr\u00e1lni, valamint egyszer\u0171bb a teljes adatb\u00e1zist l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkripteket gener\u00e1lni. Hozzunk l\u00e9tre egy \u00faj singleton oszt\u00e1lyt az object kulcssz\u00f3val az sqlite package -en bel\u00fcl DbConstants n\u00e9ven. Ezen bel\u00fcl el\u0151sz\u00f6r is konstansk\u00e9nt felvessz\u00fck az adatb\u00e1zis nev\u00e9t \u00e9s verzi\u00f3j\u00e1t is. Ha az adatb\u00e1zisunk s\u00e9m\u00e1j\u00e1n szeretn\u00e9nk v\u00e1ltoztatni, akkor ez ut\u00f3bbit kell inkrement\u00e1lnunk, \u00edgy elker\u00fclhetj\u00fck az inkompatibilit\u00e1s miatti nem k\u00edv\u00e1natos hib\u00e1kat. object DbConstants { const val DATABASE_NAME = \"simpledrawer.db\" const val DATABASE_VERSION = 1 } Ezek ut\u00e1n a DbConstants nev\u0171 oszt\u00e1lyba hozzuk l\u00e9tre a Point oszt\u00e1lyhoz a konstansokat. Az oszt\u00e1lyokon bel\u00fcl l\u00e9trehozunk egy enum -ot is, hogy k\u00f6nnyebben tudjuk kezelni a t\u00e1bla oszlopait, majd konstansokban elt\u00e1roljuk a t\u00e1bla l\u00e9trehoz\u00e1s\u00e1t szolg\u00e1l\u00f3 SQL utas\u00edt\u00e1st valamint a t\u00e1bla nev\u00e9t is. V\u00e9gezet\u00fcl elk\u00e9sz\u00edtj\u00fck azokat a f\u00fcggv\u00e9nyeket, amelyeket a t\u00e1bla l\u00e9trehoz\u00e1sakor, illetve upgrade-el\u00e9sekor kell megh\u00edvni: object DbConstants { const val DATABASE_NAME = \"simpledrawer.db\" const val DATABASE_VERSION = 1 object Points { const val DATABASE_TABLE = \"points\" enum class Columns { ID , COORD_X , COORD_Y } private val DATABASE_CREATE = \"\"\"create table if not exists $ DATABASE_TABLE ( ${ Columns . ID . name } integer primary key autoincrement, ${ Columns . COORD_X . name } real not null, ${ Columns . COORD_Y } real not null );\"\"\" private const val DATABASE_DROP = \"drop table if exists $ DATABASE_TABLE ;\" fun onCreate ( database : SQLiteDatabase ) { database . execSQL ( DATABASE_CREATE ) } fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { Log . w ( Points :: class . java . name , \"Upgrading from version $ oldVersion to $ newVersion \" ) database . execSQL ( DATABASE_DROP ) onCreate ( database ) } } } Figyelj\u00fck meg, hogy a DbConstants oszt\u00e1lyon bel\u00fcl l\u00e9trehoztunk egy bels\u0151 Points nev\u0171 oszt\u00e1lyt, amiben a Points entit\u00e1sokat t\u00e1rol\u00f3 t\u00e1bl\u00e1hoz tartoz\u00f3 konstans \u00e9rt\u00e9keket t\u00e1roljuk. Amennyiben az alkalmaz\u00e1sunk t\u00f6bb entit\u00e1st is adatb\u00e1zisban t\u00e1rol, akkor \u00e9rdemes az egyes oszt\u00e1lyokhoz tartoz\u00f3 konstansokat k\u00fcl\u00f6n-k\u00fcl\u00f6n bels\u0151 oszt\u00e1lyokban t\u00e1rolni. \u00cdgy sokkal \u00e1tl\u00e1that\u00f3bb \u00e9s karbantarthat\u00f3bb lesz a k\u00f3d, mint ha \u00f6mlesztve felvenn\u00e9nk a DbConstants-ba az \u00f6sszes t\u00e1bla \u00f6sszes konstans\u00e1t. Ezek a bels\u0151 oszt\u00e1lyok praktikusan ugyanolyan n\u00e9vvel l\u00e9teznek, mint az entit\u00e1s oszt\u00e1lyok. Vegy\u00fck teh\u00e1t fel hasonl\u00f3 m\u00f3don a Lines nev\u0171 oszt\u00e1lyt is: object Lines { const val DATABASE_TABLE = \"lines\" enum class Columns { ID , START_X , START_Y , END_X , END_Y } private val DATABASE_CREATE = \"\"\"create table if not exists $ DATABASE_TABLE ( ${ Columns . ID . name } integer primary key autoincrement, ${ Columns . START_X } real not null, ${ Columns . START_Y } real not null, ${ Columns . END_X } real not null, ${ Columns . END_Y } real not null );\"\"\" private const val DATABASE_DROP = \"drop table if exists $ DATABASE_TABLE ;\" fun onCreate ( database : SQLiteDatabase ) { database . execSQL ( DATABASE_CREATE ) } fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { Log . w ( Lines :: class . java . name , \"Upgrading from version $ oldVersion to $ newVersion \" ) database . execSQL ( DATABASE_DROP ) onCreate ( database ) } } \u00c9rdemes megfigyelni tov\u00e1bb\u00e1 azt is, hogy az oszt\u00e1lyokat nem a class kulcssz\u00f3val deklar\u00e1ltuk. Helyette az object -et haszn\u00e1ljuk, amivel a Kotlin nyelv azt biztos\u00edtja sz\u00e1munkra, hogy a DbConstants \u00e9s a benne l\u00e9v\u0151 Points \u00e9s Lines oszt\u00e1ly is singletonk\u00e9nt viselkednek, azaz az alkalmaz\u00e1s futtat\u00e1sakor l\u00e9trej\u00f6n bel\u0151l\u00fck egy p\u00e9ld\u00e1ny, tov\u00e1bbi p\u00e9ld\u00e1nyokat pedig nem lehet l\u00e9trehozni bel\u0151l\u00fck. A seg\u00e9doszt\u00e1lyok l\u00e9trehoz\u00e1sa \u00b6 Az adatb\u00e1zis l\u00e9trehoz\u00e1s\u00e1hoz sz\u00fcks\u00e9g van egy olyan seg\u00e9doszt\u00e1lyra, ami l\u00e9trehozza mag\u00e1t az adatb\u00e1zist, \u00e9s azon bel\u00fcl inicializ\u00e1lja a t\u00e1bl\u00e1kat is. Eset\u00fcnkben ez lesz a DBHelper oszt\u00e1ly, ami az SQLiteOpenHelper oszt\u00e1lyb\u00f3l sz\u00e1rmazik. Vegy\u00fck fel ezt is az sqlite package -be. class DbHelper ( context : Context ) : SQLiteOpenHelper ( context , DbConstants . DATABASE_NAME , null , DbConstants . DATABASE_VERSION ) { override fun onCreate ( sqLiteDatabase : SQLiteDatabase ) { DbConstants . Lines . onCreate ( sqLiteDatabase ) DbConstants . Points . onCreate ( sqLiteDatabase ) } override fun onUpgrade ( sqLiteDatabase : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { DbConstants . Lines . onUpgrade ( sqLiteDatabase , oldVersion , newVersion ) DbConstants . Points . onUpgrade ( sqLiteDatabase , oldVersion , newVersion ) } } Ezen k\u00edv\u00fcl sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy olyan seg\u00e9doszt\u00e1lyra is, ami ezt az eg\u00e9szet \u00f6sszefogja, \u00e9s amivel egyszer\u0171en tudjuk kezelni az adatb\u00e1zisunkat. Ez lesz a PersistentDataHelper tov\u00e1bbra is az sqlite package -ben. Ebben olyan f\u00fcgg\u00e9nyeket fogunk megval\u00f3s\u00edtani, mint pl. az open() \u00e9s a close() , amikkel az adatb\u00e1ziskapcsolatot nyithatjuk meg, illetve z\u00e1rhatjuk le. Ezen k\u00edv\u00fcl ebben az oszt\u00e1lyban val\u00f3s\u00edtjuk meg azokat a f\u00fcggv\u00e9nyeket is, amik az adatok adatb\u00e1zisba val\u00f3 ki\u00edr\u00e1s\u00e1\u00e9rt, illetve az onnan val\u00f3 kiolvas\u00e1s\u00e1\u00e9rt felel\u0151sek. Figyelj\u00fcnk r\u00e1, hogy a saj\u00e1t Point oszt\u00e1lyunkat v\u00e1lasszuk az import sor\u00e1n. class PersistentDataHelper ( context : Context ) { private var database : SQLiteDatabase? = null private val dbHelper : DbHelper = DbHelper ( context ) private val pointColumns = arrayOf ( DbConstants . Points . Columns . ID . name , DbConstants . Points . Columns . COORD_X . name , DbConstants . Points . Columns . COORD_Y . name ) private val lineColumns = arrayOf ( DbConstants . Lines . Columns . ID . name , DbConstants . Lines . Columns . START_X . name , DbConstants . Lines . Columns . START_Y . name , DbConstants . Lines . Columns . END_X . name , DbConstants . Lines . Columns . END_Y . name ) @Throws ( SQLiteException :: class ) fun open () { database = dbHelper . writableDatabase } fun close () { dbHelper . close () } fun persistPoints ( points : List < Point > ) { clearPoints () for ( point in points ) { val values = ContentValues () values . put ( DbConstants . Points . Columns . COORD_X . name , point . x ) values . put ( DbConstants . Points . Columns . COORD_Y . name , point . y ) database !! . insert ( DbConstants . Points . DATABASE_TABLE , null , values ) } } fun restorePoints (): MutableList < Point > { val points : MutableList < Point > = ArrayList () val cursor : Cursor = database !! . query ( DbConstants . Points . DATABASE_TABLE , pointColumns , null , null , null , null , null ) cursor . moveToFirst () while ( ! cursor . isAfterLast ) { val point : Point = cursorToPoint ( cursor ) points . add ( point ) cursor . moveToNext () } cursor . close () return points } fun clearPoints () { database !! . delete ( DbConstants . Points . DATABASE_TABLE , null , null ) } private fun cursorToPoint ( cursor : Cursor ): Point { val point = Point () point . x = cursor . getFloat ( DbConstants . Points . Columns . COORD_X . ordinal ) point . y = cursor . getFloat ( DbConstants . Points . Columns . COORD_Y . ordinal ) return point } fun persistLines ( lines : List < Line > ) { clearLines () for ( line in lines ) { val values = ContentValues () values . put ( DbConstants . Lines . Columns . START_X . name , line . start . x ) values . put ( DbConstants . Lines . Columns . START_Y . name , line . start . y ) values . put ( DbConstants . Lines . Columns . END_X . name , line . end . x ) values . put ( DbConstants . Lines . Columns . END_Y . name , line . end . y ) database !! . insert ( DbConstants . Lines . DATABASE_TABLE , null , values ) } } fun restoreLines (): MutableList < Line > { val lines : MutableList < Line > = ArrayList () val cursor : Cursor = database !! . query ( DbConstants . Lines . DATABASE_TABLE , lineColumns , null , null , null , null , null ) cursor . moveToFirst () while ( ! cursor . isAfterLast ) { val line : Line = cursorToLine ( cursor ) lines . add ( line ) cursor . moveToNext () } cursor . close () return lines } fun clearLines () { database !! . delete ( DbConstants . Lines . DATABASE_TABLE , null , null ) } private fun cursorToLine ( cursor : Cursor ): Line { val startPoint = Point ( cursor . getFloat ( DbConstants . Lines . Columns . START_X . ordinal ), cursor . getFloat ( DbConstants . Lines . Columns . START_Y . ordinal ) ) val endPoint = Point ( cursor . getFloat ( DbConstants . Lines . Columns . END_X . ordinal ), cursor . getFloat ( DbConstants . Lines . Columns . END_Y . ordinal ) ) return Line ( startPoint , endPoint ) } } A DrawingView kieg\u00e9sz\u00edt\u00e9se \u00b6 Ahhoz, hogy a rajzolt objektumainkat el tudjuk menteni az adatb\u00e1zisba, fel kell k\u00e9sz\u00edteni a DrawingView oszt\u00e1lyunkat arra, hogy \u00e1tadja, illetve meg lehessen adni neki k\u00edv\u00fclr\u0151l is \u0151ket. Ehhez a k\u00f6vetkez\u0151 f\u00fcggv\u00e9nyeket kell felvenn\u00fcnk: fun restoreObjects ( points : MutableList < Point >? , lines : MutableList < Line >? ) { points ?. also { this . points = it } lines ?. also { this . lines = it } invalidate () } A DrawingActivity kieg\u00e9sz\u00edt\u00e9se \u00b6 A perzisztencia megval\u00f3s\u00edt\u00e1s\u00e1hoz m\u00e1r csak egy feladatunk maradt h\u00e1tra, m\u00e9gpedig az, hogy bek\u00f6ss\u00fck a frissen l\u00e9trehozott oszt\u00e1lyainkat a DrawingActivity -nkbe. Ehhez el\u0151sz\u00f6r is p\u00e9ld\u00e1nyos\u00edtanunk kell a PersistentDataHelper oszt\u00e1lyunkat. Mivel az adatb\u00e1zishozz\u00e1f\u00e9r\u00e9s dr\u00e1ga er\u0151forr\u00e1s, ez\u00e9rt ne felejts\u00fck el az Activity onResume() f\u00fcggv\u00e9ny\u00e9ben megnyitni, az onPause() f\u00fcggv\u00e9ny\u00e9ben pedig lez\u00e1rni a vele val\u00f3 kapcsolatot: private lateinit var dataHelper : PersistentDataHelper override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDrawingBinding . inflate ( layoutInflater ) setContentView ( binding . root ) dataHelper = PersistentDataHelper ( this ) dataHelper . open () restorePersistedObjects () } override fun onResume () { super . onResume () dataHelper . open () } override fun onPause () { dataHelper . close () super . onPause () } private fun restorePersistedObjects () { binding . canvas . restoreObjects ( dataHelper . restorePoints (), dataHelper . restoreLines ()) } V\u00e9gezet\u00fcl szeretn\u00e9nk, hogy amikor a felhaszn\u00e1l\u00f3 ki szeretne l\u00e9pni az alkalmaz\u00e1sb\u00f3l, akkor egy dial\u00f3gusablak jelenjen meg, hogy biztos kil\u00e9p-e, \u00e9s ha igen, csak abban az esetben ments\u00fck el a rajzolt objektumokat, \u00e9s l\u00e9pj\u00fcnk ki az alkalmaz\u00e1sb\u00f3l. Ehhez fel\u00fcl kell defini\u00e1lnunk az Activity onBackPressed() f\u00fcggv\u00e9ny\u00e9t. Az AlertDialog -n\u00e1l v\u00e1lasszuk az anroidx.appcompat.app -ba tartoz\u00f3 verzi\u00f3t. override fun onBackPressed () { AlertDialog . Builder ( this ) . setMessage ( R . string . are_you_sure_want_to_exit ) . setPositiveButton ( R . string . ok ) { _ , _ -> onExit () } . setNegativeButton ( R . string . cancel , null ) . show () } private fun onExit () { dataHelper . persistPoints ( binding . canvas . points ) dataHelper . persistLines ( binding . canvas . lines ) dataHelper . close () finish () } 5. (\u00f6n\u00e1ll\u00f3) feladat: A v\u00e1szon t\u00f6rl\u00e9se (1 pont) \u00b6 Vegy\u00fcnk fel a vez\u00e9rl\u0151k k\u00f6z\u00e9 egy olyan gombot, amelynek seg\u00eds\u00e9g\u00e9vel a t\u00f6r\u00f6lhetj\u00fck a v\u00e1sznat, val\u00f3s\u00edtsuk is meg a funkci\u00f3t! Kieg\u00e9sz\u00edt\u0151 iMSc feladat (2 iMSc pont) \u00b6 Vegy\u00fcnk fel az alkalmaz\u00e1sba egy olyan vez\u00e9rl\u0151t, amivel v\u00e1ltoztatni lehet a rajzol\u00e1s sz\u00edn\u00e9t a 3 f\u0151 sz\u00edn k\u00f6z\u00f6tt ( RGB ). Figyelem: az adatb\u00e1zisban is el kell menteni az adott objektum sz\u00edn\u00e9t!","title":"Labor 05 - Rajzol\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#labor-05-rajzolo-alkalmazas-keszitese","text":"","title":"Labor 05 - Rajzol\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#bevezeto","text":"A labor sor\u00e1n egy egyszer\u0171 rajzol\u00f3 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1ssal egy v\u00e1szonra lehet vonalakat vagy pontokat rajzolni. Ezen k\u00edv\u00fcl sz\u00fcks\u00e9ges a rajzolt \u00e1br\u00e1t perzisztensen elmenteni, hogy az alkalmaz\u00e1s \u00fajraind\u00edt\u00e1sa ut\u00e1n is visszat\u00f6lt\u0151dj\u00f6n.","title":"Bevezet\u0151"},{"location":"laborok/05-android-sqlite/#feltoltes","text":"Az elk\u00e9sz\u00fclt megold\u00e1st .zip form\u00e1tumban (File -> Export to zip file...) kell felt\u00f6lteni a t\u00e1rgy oldal\u00e1n, ahol a laborvezet\u0151 tudja \u00e9rt\u00e9kelni.","title":"Felt\u00f6lt\u00e9s"},{"location":"laborok/05-android-sqlite/#elokeszuletek","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t .","title":"El\u0151k\u00e9sz\u00fcletek"},{"location":"laborok/05-android-sqlite/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/05-android-sqlite/#a-projekt-elokeszitese","text":"","title":"A projekt el\u0151k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#a-projekt-letrehozasa","text":"Hozzunk l\u00e9tre egy \u00faj Android projektet, Add no Activity opci\u00f3val. Az Application name mez\u0151ben adjuk meg a Simple Drawer nevet. A Package n\u00e9v legyen hu.bme.aut.android.simpledrawer . Nyelvnek a Kotlin legyen kiv\u00e1lasztva, a minimum SDK szintje legyen API 21. Ezut\u00e1n nyomjunk a Finish gombra. Adjunk a projekthez egy \u00faj Empty activity oszt\u00e1lyt. Activity name -nek adjuk meg, hogy DrawingActivity , \u00e9s hagyjuk bepip\u00e1lva azt, hogy gener\u00e1ljon layout f\u00e1jlt, valamint pip\u00e1ljuk be a Launcher Activity opci\u00f3t. Ha ezekkel megvagyunk, akkor r\u00e1nyomhatunk a Finish -re. Miut\u00e1n l\u00e9trej\u00f6tt a projekt, t\u00f6r\u00f6lj\u00fck ki a teszt package-eket, mert most nem lesz r\u00e1 sz\u00fcks\u00e9g\u00fcnk.","title":"A projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/05-android-sqlite/#a-resource-ok-hozzaadasa","text":"El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt , ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio -ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk erre az id\u0151re). Az al\u00e1bbi, alkalmaz\u00e1shoz sz\u00fcks\u00e9ges string resource -okat m\u00e1soljuk be a res/values/strings.xml f\u00e1jlba: <resources> <string name= \"app_name\" > Simple Drawer </string> <string name= \"style\" > St\u00edlus </string> <string name= \"line\" > Vonal </string> <string name= \"point\" > Pont </string> <string name= \"are_you_sure_want_to_exit\" > Biztosan ki akarsz l\u00e9pni? </string> <string name= \"ok\" > OK </string> <string name= \"cancel\" > M\u00e9gse </string> </resources>","title":"A resource-ok hozz\u00e1ad\u00e1sa"},{"location":"laborok/05-android-sqlite/#allo-layout-kikenyszeritese","text":"Az alkalmaz\u00e1sunkban az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most csak az \u00e1ll\u00f3 m\u00f3dot t\u00e1mogatjuk. Ehhez az AndroidManifest.xml -ben a DrawingActivity nyit\u00f3tagj\u00e1hoz kell hozz\u00e1adni egy sort a k\u00f6vetkez\u0151 m\u00f3don: <activity android:name= \".DrawingActivity\" android:exported= \"true\" android:screenOrientation= \"portrait\" >","title":"\u00c1ll\u00f3 layout kik\u00e9nyszer\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#laborfeladatok","text":"A labor sor\u00e1n a k\u00f6vetkez\u0151 feladatokat kell megval\u00f3s\u00edtani a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve bizonyos feladatokat \u00f6n\u00e1ll\u00f3an. A labor v\u00e9g\u00e9n lehet\u0151s\u00e9g van iMSc pontokat is szerezni a jel\u00f6lt feladatok megold\u00e1s\u00e1val.","title":"Laborfeladatok"},{"location":"laborok/05-android-sqlite/#1-feladat-a-kezdo-layout-letrehozasa-1-pont","text":"Els\u0151 l\u00e9p\u00e9sk\u00e9nt hozzunk l\u00e9tre egy \u00faj package -et az hu.bme.aut.android.simpledrawer -en bel\u00fcl, aminek adjuk a view nevet. Ebben hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt, amit nevezz\u00fcnk el DrawingView -nak, \u00e9s sz\u00e1rmazzon le a View oszt\u00e1lyb\u00f3l ( android.view.View ). Hozzuk l\u00e9tre a sz\u00fcks\u00e9ges konstruktort ezen bel\u00fcl: class DrawingView ( context : Context?, attrs : AttributeSet?) : View ( context , attrs ) { } Miut\u00e1n l\u00e9trehoztuk a DrawingView -t, nyissuk meg a res/layout/activity_drawing.xml -t, \u00e9s hozzunk l\u00e9tre gy\u00f6k\u00e9relemk\u00e9nt egy RelativeLayout -ot, azon bel\u00fcl pedig fel\u00fclre a frissen l\u00e9trehozott DrawingView -nkb\u00f3l helyezz\u00fcnk el egy p\u00e9ld\u00e1nyt fekete h\u00e1tt\u00e9rrel, alulra pedig egy Toolbar -t rakjunk ki. V\u00e9gezet\u00fcl a layoutnak \u00edgy kell kin\u00e9znie: <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <hu.bme.aut.android.simpledrawer.view.DrawingView android:id= \"@+id/canvas\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_above= \"@+id/toolbar\" android:background= \"@android:color/black\" /> <androidx.appcompat.widget.Toolbar android:id= \"@+id/toolbar\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_alignParentBottom= \"true\" android:background= \"?android:colorPrimary\" /> </RelativeLayout>","title":"1. feladat: A kezd\u0151 layout l\u00e9trehoz\u00e1sa (1 pont)"},{"location":"laborok/05-android-sqlite/#2-feladat-stilusvalaszto-2-pont","text":"Miut\u00e1n l\u00e9trehoztuk a rajzol\u00e1s tulajdons\u00e1gainak \u00e1ll\u00edt\u00e1s\u00e1\u00e9rt felel\u0151s Toolbar -t, hozzuk l\u00e9tre a men\u00fct, amivel be lehet \u00e1ll\u00edtani, hogy pontot vagy vonalat rajzoljunk. Ehhez hozzunk l\u00e9tre egy \u00faj Android resource directory -t menu n\u00e9ven a res mapp\u00e1ban, \u00e9s Resource type -nak is v\u00e1lasszuk azt, hogy menu . Ezen bel\u00fcl hozzunk l\u00e9tre egy \u00faj Menu resource file -t menu_toolbar.xml n\u00e9ven. Ebben hozzunk l\u00e9tre az al\u00e1bbi hierarchi\u00e1t: <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" > <item android:id= \"@+id/menu_style\" android:checkableBehavior= \"single\" android:icon= \"@drawable/ic_style\" android:title= \"@string/style\" app:showAsAction= \"ifRoom\" > <menu> <group android:checkableBehavior= \"single\" > <item android:id= \"@+id/menu_style_line\" android:checked= \"true\" android:title= \"@string/line\" /> <item android:id= \"@+id/menu_style_point\" android:checked= \"false\" android:title= \"@string/point\" /> </group> </menu> </item> </menu> Ezut\u00e1n k\u00f6ss\u00fck be a men\u00fct, hogy megjelenjen a Toolbar -on. Ahhoz, hogy el\u00e9rj\u00fck a l\u00e9trehozott er\u0151forr\u00e1sokat k\u00f3db\u00f3l, view binding-ra lesz sz\u00fcks\u00e9g\u00fcnk. A modul szint\u0171 gradle file-ba fegy\u00fck fel a k\u00f6vetkez\u0151 elemet. Ne felejts\u00fcnk el a Sync now gombra kattintani a m\u00f3dos\u00edt\u00e1st k\u00f6vet\u0151en. android { ... buildFeatures { viewBinding true } } Ezut\u00e1n hozzunk l\u00e9tre egy binding adattagot a DrawingActivity -n bel\u00fcl toolbarBinding n\u00e9ven \u00e9s inicializ\u00e1ljuk az onCreate f\u00fcggv\u00e9nyben. private lateinit var binding : ActivityDrawingBinding override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDrawingBinding . inflate ( layoutInflater ) setContentView ( binding . root ) } M\u00e1r csak annyi van h\u00e1tra, hogy a DrawingActivity -ben fel\u00fcldefini\u00e1ljuk az Activity onCreateOptionsMenu() \u00e9s onOptionsItemSelected() f\u00fcggv\u00e9ny\u00e9t az al\u00e1bbi m\u00f3don: override fun onCreateOptionsMenu ( menu : Menu?) : Boolean { val toolbarMenu : Menu = binding . toolbar . menu menuInflater . inflate ( R . menu . menu_toolbar , toolbarMenu ) for ( i in 0 until toolbarMenu . size ()) { val menuItem : MenuItem = toolbarMenu . getItem ( i ) menuItem . setOnMenuItemClickListener { item -> onOptionsItemSelected ( item ) } if ( menuItem . hasSubMenu ()) { val subMenu : SubMenu = menuItem . subMenu for ( j in 0 until subMenu . size ()) { subMenu . getItem ( j ) . setOnMenuItemClickListener { item -> onOptionsItemSelected ( item ) } } } } return super . onCreateOptionsMenu ( menu ) } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . menu_style_line -> { item . isChecked = true true } R . id . menu_style_point -> { item . isChecked = true true } else -> super . onOptionsItemSelected ( item ) } }","title":"2. feladat: St\u00edlusv\u00e1laszt\u00f3 (2 pont)"},{"location":"laborok/05-android-sqlite/#3-feladat-a-drawingview-osztaly-implementalasa","text":"","title":"3. feladat: A DrawingView oszt\u00e1ly implement\u00e1l\u00e1sa"},{"location":"laborok/05-android-sqlite/#a-modellek-letrehozasa","text":"A rajzprogramunk, ahogy az m\u00e1r az el\u0151z\u0151 feladatban is kider\u00fclt, k\u00e9tf\u00e9le rajzol\u00e1si st\u00edlust fog t\u00e1mogatni. Nevezetesen a pont- \u00e9s vonalrajzol\u00e1st. Ahhoz, hogy a rajzolt alakzatokat el tudjuk t\u00e1rolni sz\u00fcks\u00e9g\u00fcnk lesz k\u00e9t \u00faj t\u00edpusra, modellre, amihez hozzunk l\u00e9tre egy \u00faj package -et a hu.bme.aut.android.simpledrawer -en bel\u00fcl model n\u00e9ven. Ezen bel\u00fcl el\u0151sz\u00f6r hozzunk l\u00e9tre egy Point oszt\u00e1lyt, ami \u00e9rtelemszer\u0171en a pontokat fogja reprezent\u00e1lni. K\u00e9tparam\u00e9teres konstruktort fogunk l\u00e9trehozni, amihez alap\u00e9rt\u00e9keket rendel\u00fcnk. data class Point ( var x : Float = 0F , var y : Float = 0F ) Miut\u00e1n ezzel megvagyunk, hozzunk l\u00e9tre egy Line oszt\u00e1lyt. Mivel egy vonalat a k\u00e9t v\u00e9gpontj\u00e1nak megad\u00e1s\u00e1val ki tudunk rajzoltatni, \u00edgy elegend\u0151 k\u00e9t Point -ot tartalmaznia az oszt\u00e1lynak. data class Line ( var start : Point , var end : Point )","title":"A modellek l\u00e9trehoz\u00e1sa"},{"location":"laborok/05-android-sqlite/#a-rajzolasi-stilus-beallitasa","text":"Most, hogy megvannak a modelljeink el lehet kezdeni mag\u00e1nak a rajzol\u00e1s funkci\u00f3j\u00e1nak fejleszt\u00e9s\u00e9t. Ehhez a DrawingView oszt\u00e1lyt fogjuk t\u00e9nylegesen is elk\u00e9sz\u00edteni. El\u0151sz\u00f6r vegy\u00fcnk fel az oszt\u00e1lyon bel\u00fcl egy companion object -et, amiben a rajzol\u00e1si st\u00edlus konstansait fogjuk meghat\u00e1rozni. Ehhez kapcsol\u00f3d\u00f3an vegy\u00fcnk fel egy \u00faj field -et az oszt\u00e1lyunkba, amiben elt\u00e1roljuk, hogy jelenleg milyen st\u00edlus van kiv\u00e1lasztva. companion object { const val DRAWING_STYLE_LINE = 1 const val DRAWING_STYLE_POINT = 2 } var currentDrawingStyle = DRAWING_STYLE_LINE Ha ezek megvannak, akkor eg\u00e9sz\u00edts\u00fck ki a DrawingActivity -ben a men\u00fckezel\u00e9st, \u00fagy, hogy a megfelel\u0151 f\u00fcggv\u00e9nyek h\u00edv\u00f3djanak meg. Az onOptionsItemSelected() f\u00fcggv\u00e9ny megfelel\u0151 case \u00e1g\u00e1ban meg kell h\u00edvnunk a canvas -ra a setDrawingStyle() f\u00fcggv\u00e9nyt a megfelel\u0151 param\u00e9terrel. override fun onOptionsItemSelected ( item : MenuItem ): Boolean { return when ( item . itemId ) { R . id . menu_style_line -> { binding . canvas . currentDrawingStyle = DrawingView . DRAWING_STYLE_LINE item . isChecked = true true } R . id . menu_style_point -> { binding . canvas . currentDrawingStyle = DrawingView . DRAWING_STYLE_POINT item . isChecked = true true } else -> super . onOptionsItemSelected ( item ) } }","title":"A rajzol\u00e1si st\u00edlus be\u00e1ll\u00edt\u00e1sa"},{"location":"laborok/05-android-sqlite/#inicializalasok","text":"A rajzol\u00e1si funkci\u00f3 megval\u00f3s\u00edt\u00e1s\u00e1hoz fel kell venn\u00fcnk n\u00e9h\u00e1ny tov\u00e1bbi field -et a DrawingView oszt\u00e1lyban, amiket a konstruktorban inicializ\u00e1lnunk kell. A paint objektumhoz hozz\u00e1adjuk a lateinit kulcssz\u00f3t, hogy el\u00e9g legyen az init blokkban inicializ\u00e1lnunk. A Point oszt\u00e1ly import-ja sor\u00e1n haszn\u00e1ljuk a kor\u00e1bban defini\u00e1lt oszt\u00e1lyunkat. private lateinit var paint : Paint private var startPoint : Point? = null private var endPoint : Point? = null var lines : MutableList < Line > = mutableListOf () var points : MutableList < Point > = mutableListOf () init { initPaint () } private fun initPaint () { paint = Paint () paint . color = Color . GREEN paint . style = Paint . Style . STROKE paint . strokeWidth = 5F }","title":"Inicializ\u00e1l\u00e1sok"},{"location":"laborok/05-android-sqlite/#gesztusok-kezelese","text":"Ahhoz, hogy vonalat vagy pontot tudjunk rajzolni a View -nkra, kezeln\u00fcnk kell a felhaszn\u00e1l\u00f3t\u00f3l kapott gesztusokat, mint p\u00e9ld\u00e1ul amikor hozz\u00e1\u00e9r a kijelz\u0151h\u00f6z, elh\u00fazza rajta vagy felemeli r\u00f3la az ujj\u00e1t. Szerencs\u00e9re ezeket a gesztusokat nem sz\u00fcks\u00e9ges manu\u00e1lisan felismern\u00fcnk \u00e9s lekezeln\u00fcnk, a View \u0151soszt\u00e1ly onTouchEvent() f\u00fcggv\u00e9ny\u00e9nek fel\u00fcldefini\u00e1l\u00e1s\u00e1val egyszer\u0171en megolhat\u00f3 a feladat. @SuppressLint ( \"ClickableViewAccessibility\" ) override fun onTouchEvent ( event : MotionEvent ): Boolean { endPoint = Point ( event . x , event . y ) when ( event . action ) { MotionEvent . ACTION_DOWN -> startPoint = Point ( event . x , event . y ) MotionEvent . ACTION_MOVE -> { } MotionEvent . ACTION_UP -> { when ( currentDrawingStyle ) { DRAWING_STYLE_POINT -> addPointToTheList ( endPoint !! ) DRAWING_STYLE_LINE -> addLineToTheList ( startPoint !! , endPoint !! ) } startPoint = null endPoint = null } else -> return false } invalidate () return true } private fun addPointToTheList ( startPoint : Point ) { points . add ( startPoint ) } private fun addLineToTheList ( startPoint : Point , endPoint : Point ) { lines . add ( Line ( startPoint , endPoint )) } Ahogy a fenti k\u00f3dr\u00e9szletb\u0151l is l\u00e1tszik minden gesztusn\u00e1l elmentj\u00fck az adott TouchEvent pontj\u00e1t, mint a rajzol\u00e1s v\u00e9gpontj\u00e1t, illetve ha MotionEvent.ACTION_DOWN t\u00f6rt\u00e9nt, teh\u00e1t a felhaszn\u00e1l\u00f3 hozz\u00e1\u00e9rt a View -hoz, elmentj\u00fck ezt kezd\u0151pontk\u00e9nt is. Am\u00edg a felhaszn\u00e1l\u00f3 mozgatja az ujj\u00e1t a View -n ( MotionEvent.ACTION_MOVE ), addig nem csin\u00e1lunk semmit, de amint felemeli ( MotionEvent.ACTION_UP ), elmentj\u00fck az adott elemet a kor\u00e1bban m\u00e1r defini\u00e1lt list\u00e1kba. Ezen k\u00edv\u00fcl minden egyes alkalommal megh\u00edvjuk az invalidate() f\u00fcggv\u00e9nyt, ami kik\u00e9nyszer\u00edti a View \u00fajrarajzol\u00e1s\u00e1t.","title":"Gesztusok kezel\u00e9se"},{"location":"laborok/05-android-sqlite/#a-rajzolas","text":"A rajzol\u00e1s megval\u00f3s\u00edt\u00e1s\u00e1hoz a View \u0151soszt\u00e1ly onDraw() met\u00f3dus\u00e1t kell fel\u00fcldefini\u00e1lnunk. Egyr\u00e9szt ki kell rajzolnunk a m\u00e1r megl\u00e9v\u0151 objektumokat (amiket a MotionEvent.ACTION_UP esem\u00e9nyn\u00e9l beleraktunk a list\u00e1ba), valamint ki kell rajzolnunk az aktu\u00e1lis kezd\u0151pont (a MotionEvent.ACTION_DOWN esem\u00e9nyt\u0151l) \u00e9s a felhaszn\u00e1l\u00f3 ujja k\u00f6z\u00f6tti vonalat. override fun onDraw ( canvas : Canvas ) { super . onDraw ( canvas ) for ( point in points ) { drawPoint ( canvas , point ) } for ( line in lines ) { drawLine ( canvas , line . start , line . end ) } when ( currentDrawingStyle ) { DRAWING_STYLE_POINT -> drawPoint ( canvas , endPoint ) DRAWING_STYLE_LINE -> drawLine ( canvas , startPoint , endPoint ) } } private fun drawPoint ( canvas : Canvas , point : Point?) { if ( point == null ) { return } canvas . drawPoint ( point . x , point . y , paint ) } private fun drawLine ( canvas : Canvas , startPoint : Point?, endPoint : Point?) { if ( startPoint == null || endPoint == null ) { return } canvas . drawLine ( startPoint . x , startPoint . y , endPoint . x , endPoint . y , paint ) }","title":"A rajzol\u00e1s"},{"location":"laborok/05-android-sqlite/#4-feladat-perzisztencia-megvalositasa-sqlite-adatbazis-segitsegevel-1-pont","text":"Ahhoz, hogy az \u00e1ltalunk rajzolt objektumok megmaradjanak az alkalmaz\u00e1sb\u00f3l val\u00f3 kil\u00e9p\u00e9s ut\u00e1n is, az adatainkat valahogy olyan form\u00e1ba kell rendezn\u00fcnk, hogy azt k\u00f6nnyed\u00e9n el tudjuk t\u00e1rolni egy SQLite adatb\u00e1zisban. Hozzunk l\u00e9tre egy \u00faj package -et az hu.bme.aut.android.simpledrawer -en bel\u00fcl, aminek adjuk az sqlite nevet.","title":"4. feladat: Perzisztencia megval\u00f3s\u00edt\u00e1sa SQLite adatb\u00e1zis seg\u00edts\u00e9g\u00e9vel (1 pont)"},{"location":"laborok/05-android-sqlite/#tablak-definialasa","text":"Az adatb\u00e1ziskezel\u00e9s sor\u00e1n sok konstans jelleg\u0171 v\u00e1ltoz\u00f3val kell dolgoznunk, mint p\u00e9ld\u00e1ul a t\u00e1bl\u00e1kban l\u00e9v\u0151 oszlopok nevei, t\u00e1bl\u00e1k neve, adatb\u00e1zis f\u00e1jl neve, s\u00e9ma l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkiptek, stb. Ezeket \u00e9rdemes egy k\u00f6z\u00f6s helyen t\u00e1rolni, \u00edgy szerkeszt\u00e9skor vagy \u00faj entit\u00e1s bevezet\u00e9sekor nem kell a forr\u00e1sf\u00e1jlok k\u00f6z\u00f6tt ugr\u00e1lni, valamint egyszer\u0171bb a teljes adatb\u00e1zist l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkripteket gener\u00e1lni. Hozzunk l\u00e9tre egy \u00faj singleton oszt\u00e1lyt az object kulcssz\u00f3val az sqlite package -en bel\u00fcl DbConstants n\u00e9ven. Ezen bel\u00fcl el\u0151sz\u00f6r is konstansk\u00e9nt felvessz\u00fck az adatb\u00e1zis nev\u00e9t \u00e9s verzi\u00f3j\u00e1t is. Ha az adatb\u00e1zisunk s\u00e9m\u00e1j\u00e1n szeretn\u00e9nk v\u00e1ltoztatni, akkor ez ut\u00f3bbit kell inkrement\u00e1lnunk, \u00edgy elker\u00fclhetj\u00fck az inkompatibilit\u00e1s miatti nem k\u00edv\u00e1natos hib\u00e1kat. object DbConstants { const val DATABASE_NAME = \"simpledrawer.db\" const val DATABASE_VERSION = 1 } Ezek ut\u00e1n a DbConstants nev\u0171 oszt\u00e1lyba hozzuk l\u00e9tre a Point oszt\u00e1lyhoz a konstansokat. Az oszt\u00e1lyokon bel\u00fcl l\u00e9trehozunk egy enum -ot is, hogy k\u00f6nnyebben tudjuk kezelni a t\u00e1bla oszlopait, majd konstansokban elt\u00e1roljuk a t\u00e1bla l\u00e9trehoz\u00e1s\u00e1t szolg\u00e1l\u00f3 SQL utas\u00edt\u00e1st valamint a t\u00e1bla nev\u00e9t is. V\u00e9gezet\u00fcl elk\u00e9sz\u00edtj\u00fck azokat a f\u00fcggv\u00e9nyeket, amelyeket a t\u00e1bla l\u00e9trehoz\u00e1sakor, illetve upgrade-el\u00e9sekor kell megh\u00edvni: object DbConstants { const val DATABASE_NAME = \"simpledrawer.db\" const val DATABASE_VERSION = 1 object Points { const val DATABASE_TABLE = \"points\" enum class Columns { ID , COORD_X , COORD_Y } private val DATABASE_CREATE = \"\"\"create table if not exists $ DATABASE_TABLE ( ${ Columns . ID . name } integer primary key autoincrement, ${ Columns . COORD_X . name } real not null, ${ Columns . COORD_Y } real not null );\"\"\" private const val DATABASE_DROP = \"drop table if exists $ DATABASE_TABLE ;\" fun onCreate ( database : SQLiteDatabase ) { database . execSQL ( DATABASE_CREATE ) } fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { Log . w ( Points :: class . java . name , \"Upgrading from version $ oldVersion to $ newVersion \" ) database . execSQL ( DATABASE_DROP ) onCreate ( database ) } } } Figyelj\u00fck meg, hogy a DbConstants oszt\u00e1lyon bel\u00fcl l\u00e9trehoztunk egy bels\u0151 Points nev\u0171 oszt\u00e1lyt, amiben a Points entit\u00e1sokat t\u00e1rol\u00f3 t\u00e1bl\u00e1hoz tartoz\u00f3 konstans \u00e9rt\u00e9keket t\u00e1roljuk. Amennyiben az alkalmaz\u00e1sunk t\u00f6bb entit\u00e1st is adatb\u00e1zisban t\u00e1rol, akkor \u00e9rdemes az egyes oszt\u00e1lyokhoz tartoz\u00f3 konstansokat k\u00fcl\u00f6n-k\u00fcl\u00f6n bels\u0151 oszt\u00e1lyokban t\u00e1rolni. \u00cdgy sokkal \u00e1tl\u00e1that\u00f3bb \u00e9s karbantarthat\u00f3bb lesz a k\u00f3d, mint ha \u00f6mlesztve felvenn\u00e9nk a DbConstants-ba az \u00f6sszes t\u00e1bla \u00f6sszes konstans\u00e1t. Ezek a bels\u0151 oszt\u00e1lyok praktikusan ugyanolyan n\u00e9vvel l\u00e9teznek, mint az entit\u00e1s oszt\u00e1lyok. Vegy\u00fck teh\u00e1t fel hasonl\u00f3 m\u00f3don a Lines nev\u0171 oszt\u00e1lyt is: object Lines { const val DATABASE_TABLE = \"lines\" enum class Columns { ID , START_X , START_Y , END_X , END_Y } private val DATABASE_CREATE = \"\"\"create table if not exists $ DATABASE_TABLE ( ${ Columns . ID . name } integer primary key autoincrement, ${ Columns . START_X } real not null, ${ Columns . START_Y } real not null, ${ Columns . END_X } real not null, ${ Columns . END_Y } real not null );\"\"\" private const val DATABASE_DROP = \"drop table if exists $ DATABASE_TABLE ;\" fun onCreate ( database : SQLiteDatabase ) { database . execSQL ( DATABASE_CREATE ) } fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { Log . w ( Lines :: class . java . name , \"Upgrading from version $ oldVersion to $ newVersion \" ) database . execSQL ( DATABASE_DROP ) onCreate ( database ) } } \u00c9rdemes megfigyelni tov\u00e1bb\u00e1 azt is, hogy az oszt\u00e1lyokat nem a class kulcssz\u00f3val deklar\u00e1ltuk. Helyette az object -et haszn\u00e1ljuk, amivel a Kotlin nyelv azt biztos\u00edtja sz\u00e1munkra, hogy a DbConstants \u00e9s a benne l\u00e9v\u0151 Points \u00e9s Lines oszt\u00e1ly is singletonk\u00e9nt viselkednek, azaz az alkalmaz\u00e1s futtat\u00e1sakor l\u00e9trej\u00f6n bel\u0151l\u00fck egy p\u00e9ld\u00e1ny, tov\u00e1bbi p\u00e9ld\u00e1nyokat pedig nem lehet l\u00e9trehozni bel\u0151l\u00fck.","title":"T\u00e1bl\u00e1k defini\u00e1l\u00e1sa"},{"location":"laborok/05-android-sqlite/#a-segedosztalyok-letrehozasa","text":"Az adatb\u00e1zis l\u00e9trehoz\u00e1s\u00e1hoz sz\u00fcks\u00e9g van egy olyan seg\u00e9doszt\u00e1lyra, ami l\u00e9trehozza mag\u00e1t az adatb\u00e1zist, \u00e9s azon bel\u00fcl inicializ\u00e1lja a t\u00e1bl\u00e1kat is. Eset\u00fcnkben ez lesz a DBHelper oszt\u00e1ly, ami az SQLiteOpenHelper oszt\u00e1lyb\u00f3l sz\u00e1rmazik. Vegy\u00fck fel ezt is az sqlite package -be. class DbHelper ( context : Context ) : SQLiteOpenHelper ( context , DbConstants . DATABASE_NAME , null , DbConstants . DATABASE_VERSION ) { override fun onCreate ( sqLiteDatabase : SQLiteDatabase ) { DbConstants . Lines . onCreate ( sqLiteDatabase ) DbConstants . Points . onCreate ( sqLiteDatabase ) } override fun onUpgrade ( sqLiteDatabase : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { DbConstants . Lines . onUpgrade ( sqLiteDatabase , oldVersion , newVersion ) DbConstants . Points . onUpgrade ( sqLiteDatabase , oldVersion , newVersion ) } } Ezen k\u00edv\u00fcl sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy olyan seg\u00e9doszt\u00e1lyra is, ami ezt az eg\u00e9szet \u00f6sszefogja, \u00e9s amivel egyszer\u0171en tudjuk kezelni az adatb\u00e1zisunkat. Ez lesz a PersistentDataHelper tov\u00e1bbra is az sqlite package -ben. Ebben olyan f\u00fcgg\u00e9nyeket fogunk megval\u00f3s\u00edtani, mint pl. az open() \u00e9s a close() , amikkel az adatb\u00e1ziskapcsolatot nyithatjuk meg, illetve z\u00e1rhatjuk le. Ezen k\u00edv\u00fcl ebben az oszt\u00e1lyban val\u00f3s\u00edtjuk meg azokat a f\u00fcggv\u00e9nyeket is, amik az adatok adatb\u00e1zisba val\u00f3 ki\u00edr\u00e1s\u00e1\u00e9rt, illetve az onnan val\u00f3 kiolvas\u00e1s\u00e1\u00e9rt felel\u0151sek. Figyelj\u00fcnk r\u00e1, hogy a saj\u00e1t Point oszt\u00e1lyunkat v\u00e1lasszuk az import sor\u00e1n. class PersistentDataHelper ( context : Context ) { private var database : SQLiteDatabase? = null private val dbHelper : DbHelper = DbHelper ( context ) private val pointColumns = arrayOf ( DbConstants . Points . Columns . ID . name , DbConstants . Points . Columns . COORD_X . name , DbConstants . Points . Columns . COORD_Y . name ) private val lineColumns = arrayOf ( DbConstants . Lines . Columns . ID . name , DbConstants . Lines . Columns . START_X . name , DbConstants . Lines . Columns . START_Y . name , DbConstants . Lines . Columns . END_X . name , DbConstants . Lines . Columns . END_Y . name ) @Throws ( SQLiteException :: class ) fun open () { database = dbHelper . writableDatabase } fun close () { dbHelper . close () } fun persistPoints ( points : List < Point > ) { clearPoints () for ( point in points ) { val values = ContentValues () values . put ( DbConstants . Points . Columns . COORD_X . name , point . x ) values . put ( DbConstants . Points . Columns . COORD_Y . name , point . y ) database !! . insert ( DbConstants . Points . DATABASE_TABLE , null , values ) } } fun restorePoints (): MutableList < Point > { val points : MutableList < Point > = ArrayList () val cursor : Cursor = database !! . query ( DbConstants . Points . DATABASE_TABLE , pointColumns , null , null , null , null , null ) cursor . moveToFirst () while ( ! cursor . isAfterLast ) { val point : Point = cursorToPoint ( cursor ) points . add ( point ) cursor . moveToNext () } cursor . close () return points } fun clearPoints () { database !! . delete ( DbConstants . Points . DATABASE_TABLE , null , null ) } private fun cursorToPoint ( cursor : Cursor ): Point { val point = Point () point . x = cursor . getFloat ( DbConstants . Points . Columns . COORD_X . ordinal ) point . y = cursor . getFloat ( DbConstants . Points . Columns . COORD_Y . ordinal ) return point } fun persistLines ( lines : List < Line > ) { clearLines () for ( line in lines ) { val values = ContentValues () values . put ( DbConstants . Lines . Columns . START_X . name , line . start . x ) values . put ( DbConstants . Lines . Columns . START_Y . name , line . start . y ) values . put ( DbConstants . Lines . Columns . END_X . name , line . end . x ) values . put ( DbConstants . Lines . Columns . END_Y . name , line . end . y ) database !! . insert ( DbConstants . Lines . DATABASE_TABLE , null , values ) } } fun restoreLines (): MutableList < Line > { val lines : MutableList < Line > = ArrayList () val cursor : Cursor = database !! . query ( DbConstants . Lines . DATABASE_TABLE , lineColumns , null , null , null , null , null ) cursor . moveToFirst () while ( ! cursor . isAfterLast ) { val line : Line = cursorToLine ( cursor ) lines . add ( line ) cursor . moveToNext () } cursor . close () return lines } fun clearLines () { database !! . delete ( DbConstants . Lines . DATABASE_TABLE , null , null ) } private fun cursorToLine ( cursor : Cursor ): Line { val startPoint = Point ( cursor . getFloat ( DbConstants . Lines . Columns . START_X . ordinal ), cursor . getFloat ( DbConstants . Lines . Columns . START_Y . ordinal ) ) val endPoint = Point ( cursor . getFloat ( DbConstants . Lines . Columns . END_X . ordinal ), cursor . getFloat ( DbConstants . Lines . Columns . END_Y . ordinal ) ) return Line ( startPoint , endPoint ) } }","title":"A seg\u00e9doszt\u00e1lyok l\u00e9trehoz\u00e1sa"},{"location":"laborok/05-android-sqlite/#a-drawingview-kiegeszitese","text":"Ahhoz, hogy a rajzolt objektumainkat el tudjuk menteni az adatb\u00e1zisba, fel kell k\u00e9sz\u00edteni a DrawingView oszt\u00e1lyunkat arra, hogy \u00e1tadja, illetve meg lehessen adni neki k\u00edv\u00fclr\u0151l is \u0151ket. Ehhez a k\u00f6vetkez\u0151 f\u00fcggv\u00e9nyeket kell felvenn\u00fcnk: fun restoreObjects ( points : MutableList < Point >? , lines : MutableList < Line >? ) { points ?. also { this . points = it } lines ?. also { this . lines = it } invalidate () }","title":"A DrawingView kieg\u00e9sz\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#a-drawingactivity-kiegeszitese","text":"A perzisztencia megval\u00f3s\u00edt\u00e1s\u00e1hoz m\u00e1r csak egy feladatunk maradt h\u00e1tra, m\u00e9gpedig az, hogy bek\u00f6ss\u00fck a frissen l\u00e9trehozott oszt\u00e1lyainkat a DrawingActivity -nkbe. Ehhez el\u0151sz\u00f6r is p\u00e9ld\u00e1nyos\u00edtanunk kell a PersistentDataHelper oszt\u00e1lyunkat. Mivel az adatb\u00e1zishozz\u00e1f\u00e9r\u00e9s dr\u00e1ga er\u0151forr\u00e1s, ez\u00e9rt ne felejts\u00fck el az Activity onResume() f\u00fcggv\u00e9ny\u00e9ben megnyitni, az onPause() f\u00fcggv\u00e9ny\u00e9ben pedig lez\u00e1rni a vele val\u00f3 kapcsolatot: private lateinit var dataHelper : PersistentDataHelper override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDrawingBinding . inflate ( layoutInflater ) setContentView ( binding . root ) dataHelper = PersistentDataHelper ( this ) dataHelper . open () restorePersistedObjects () } override fun onResume () { super . onResume () dataHelper . open () } override fun onPause () { dataHelper . close () super . onPause () } private fun restorePersistedObjects () { binding . canvas . restoreObjects ( dataHelper . restorePoints (), dataHelper . restoreLines ()) } V\u00e9gezet\u00fcl szeretn\u00e9nk, hogy amikor a felhaszn\u00e1l\u00f3 ki szeretne l\u00e9pni az alkalmaz\u00e1sb\u00f3l, akkor egy dial\u00f3gusablak jelenjen meg, hogy biztos kil\u00e9p-e, \u00e9s ha igen, csak abban az esetben ments\u00fck el a rajzolt objektumokat, \u00e9s l\u00e9pj\u00fcnk ki az alkalmaz\u00e1sb\u00f3l. Ehhez fel\u00fcl kell defini\u00e1lnunk az Activity onBackPressed() f\u00fcggv\u00e9ny\u00e9t. Az AlertDialog -n\u00e1l v\u00e1lasszuk az anroidx.appcompat.app -ba tartoz\u00f3 verzi\u00f3t. override fun onBackPressed () { AlertDialog . Builder ( this ) . setMessage ( R . string . are_you_sure_want_to_exit ) . setPositiveButton ( R . string . ok ) { _ , _ -> onExit () } . setNegativeButton ( R . string . cancel , null ) . show () } private fun onExit () { dataHelper . persistPoints ( binding . canvas . points ) dataHelper . persistLines ( binding . canvas . lines ) dataHelper . close () finish () }","title":"A DrawingActivity kieg\u00e9sz\u00edt\u00e9se"},{"location":"laborok/05-android-sqlite/#5-onallo-feladat-a-vaszon-torlese-1-pont","text":"Vegy\u00fcnk fel a vez\u00e9rl\u0151k k\u00f6z\u00e9 egy olyan gombot, amelynek seg\u00eds\u00e9g\u00e9vel a t\u00f6r\u00f6lhetj\u00fck a v\u00e1sznat, val\u00f3s\u00edtsuk is meg a funkci\u00f3t!","title":"5. (\u00f6n\u00e1ll\u00f3) feladat: A v\u00e1szon t\u00f6rl\u00e9se (1 pont)"},{"location":"laborok/05-android-sqlite/#kiegeszito-imsc-feladat-2-imsc-pont","text":"Vegy\u00fcnk fel az alkalmaz\u00e1sba egy olyan vez\u00e9rl\u0151t, amivel v\u00e1ltoztatni lehet a rajzol\u00e1s sz\u00edn\u00e9t a 3 f\u0151 sz\u00edn k\u00f6z\u00f6tt ( RGB ). Figyelem: az adatb\u00e1zisban is el kell menteni az adott objektum sz\u00edn\u00e9t!","title":"Kieg\u00e9sz\u00edt\u0151 iMSc feladat (2 iMSc pont)"},{"location":"laborok/06-android-room/","text":"Labor 06 - Bev\u00e1s\u00e1rl\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se \u00b6 Bevezet\u0151 \u00b6 A labor sor\u00e1n egy bev\u00e1s\u00e1rl\u00f3 lista alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1sban fel lehet venni megv\u00e1s\u00e1rolni k\u00edv\u00e1nt term\u00e9keket, valamint megv\u00e1s\u00e1roltnak lehet jel\u00f6lni \u00e9s t\u00f6r\u00f6lni lehet megl\u00e9v\u0151ket. Az alkalmaz\u00e1s a term\u00e9kek list\u00e1j\u00e1t RecyclerView -ban jelen\u00edti meg, a lista elemeket \u00e9s azok \u00e1llapot\u00e1t a Room nev\u0171 ORM library seg\u00edts\u00e9g\u00e9vel t\u00e1rolja perzisztensen. \u00daj elem felv\u00e9tel\u00e9re egy FloatingActionButton megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g. ORM ORM = Object-relational mapping Felhaszn\u00e1lt technol\u00f3gi\u00e1k: Activity Fragment RecyclerView FloatingActionButton Room Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja \u00b6 Az alkalmaz\u00e1s egy Activity -b\u0151l \u00e1ll, ami bev\u00e1s\u00e1rl\u00f3lista elemeket jelen\u00edt meg. \u00daj elemet a jobb als\u00f3 sarokban tal\u00e1lhat\u00f3 FloatingActionButton seg\u00edts\u00e9g\u00e9vel vehet\u00fcnk fel. Erre kattintva egy dial\u00f3gus jelenik meg, amin megadhatjuk a v\u00e1s\u00e1rolni k\u00edv\u00e1nt \u00e1ru nev\u00e9t, le\u00edr\u00e1s\u00e1t, kateg\u00f3ri\u00e1j\u00e1t \u00e9s becs\u00fclt \u00e1r\u00e1t. A dial\u00f3guson az OK gombra kattintva a dial\u00f3gus elt\u0171nik, a benne megadott adatokkal l\u00e9trej\u00f6n egy lista elem a list\u00e1ban. Az egyes lista elemeken CheckBox seg\u00edts\u00e9g\u00e9vel jelezhetj\u00fck, hogy m\u00e1r megv\u00e1s\u00e1roltuk \u0151ket. A kuka ikonra kattintva t\u00f6r\u00f6lhetj\u00fck az adott elemet. A men\u00fcben tal\u00e1lhat\u00f3 \u201eRemove all\u201d opci\u00f3val az \u00f6sszes lista elemet t\u00f6r\u00f6lhetj\u00fck. Laborfeladatok \u00b6 A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani. Perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa: 1 pont Lista megjelen\u00edt\u00e9se RecyclerView -val: 2 pont Dial\u00f3gus megval\u00f3s\u00edt\u00e1sa \u00faj elem hozz\u00e1ad\u00e1s\u00e1hoz: 1 pont \u00d6n\u00e1ll\u00f3 feladat (t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa): 1 pont IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladatokat megoldva 2 IMSc pont szerezhet\u0151: Meger\u0151s\u00edt\u0151 dial\u00f3gus: 1 pont Elemek szerkeszt\u00e9se: 1 pont Projekt l\u00e9trehoz\u00e1sa \u00b6 Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd: 1. Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get. 2. A projekt neve legyen ShoppingList , a kezd\u0151 package pedig hu.bme.aut.android.shoppinglist 3. Nyelvnek v\u00e1lasszuk a Kotlin -t. 4. A minimum API szint legyen API21: Android 5.0 . 5. A Use legacy android.support libraries pontot ne pip\u00e1ljuk be. Amint elk\u00e9sz\u00fclt a projekt\u00fcnk, kapcsoljuk is be a ViewBinding -ot. Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android tagen bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u00e9st (Ezek ut\u00e1n kattintsunk jobb fel\u00fcl a Sync Now gombra.): android { ... buildFeatures { viewBinding true } } A kezd\u0151 Activity neve maradhat MainActivity, valamint t\u00f6lts\u00fck le \u00e9s t\u00f6m\u00f6r\u00edts\u00fck ki az alkalmaz\u00e1shoz sz\u00fcks\u00e9ges er\u0151forr\u00e1sokat , majd m\u00e1soljuk be \u0151ket a projekt app/src/main/res mapp\u00e1j\u00e1ba (Studio-ban a res mapp\u00e1n \u00e1llva Ctrl+V )! Perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Az adatok perzisztens t\u00e1rol\u00e1s\u00e1hoz a Room k\u00f6nyvt\u00e1rat fogjuk haszn\u00e1lni. Room hozz\u00e1ad\u00e1sa a projekthez \u00b6 Kezdj\u00fck azzal, hogy az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban a pluginokhoz hozz\u00e1\u00edrunk egy sort (bekapcsoljuk a Kotlin Annotation Processort - KAPT): plugins { id 'com.android.application' id 'kotlin-android' id 'kotlin-kapt' } //... Ezt k\u00f6vet\u0151en, szint\u00e9n ebben a build.gradle f\u00e1jlban a dependencies blokkhoz adjuk hozz\u00e1 a Room libraryt: dependencies { //... def room_version = \"2.3.0\" implementation \"androidx.room:room-runtime:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" } Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync now gombra. Room A Room egy k\u00e9nyelmes adatbaz\u00e1skezel\u00e9st lehet\u0151v\u00e9 tev\u0151 API-t ny\u00fajt a platform szint\u0171 SQLite implement\u00e1ci\u00f3 f\u00f6l\u00e9. Megsp\u00f3rolhat\u00f3 vele a kor\u00e1bban l\u00e1tott sok \u00fajra \u00e9s \u00fajra meg\u00edrand\u00f3 k\u00f3d, p\u00e9ld\u00e1ul a t\u00e1bl\u00e1k adatait \u00e9s l\u00e9trehoz\u00f3 scriptj\u00e9t tartalmaz\u00f3 Table oszt\u00e1lyok, a DBHelper \u00e9s a PersistentDataHelper . Ezeket \u00e9s m\u00e1s seg\u00e9doszt\u00e1lyokat a Room annotation alap\u00fa k\u00f3dgener\u00e1l\u00e1ssal hozza l\u00e9tre a build folyamat r\u00e9szek\u00e9nt. A Room alapvet\u0151 komponenseinek, architekt\u00far\u00e1j\u00e1nak \u00e9s haszn\u00e1lat\u00e1nak le\u00edr\u00e1sa megtal\u00e1lhat\u00f3 a megfelel\u0151 developer.android.com oldalon. Egy modell oszt\u00e1ly l\u00e9trehoz\u00e1sa \u00b6 A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et data n\u00e9ven. A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen ShoppingItem : @Entity ( tableName = \"shoppingitem\" ) data class ShoppingItem ( @ColumnInfo ( name = \"id\" ) @PrimaryKey ( autoGenerate = true ) var id : Long? = null , @ColumnInfo ( name = \"name\" ) var name : String , @ColumnInfo ( name = \"description\" ) var description : String , @ColumnInfo ( name = \"category\" ) var category : Category , @ColumnInfo ( name = \"estimated_price\" ) var estimatedPrice : Int , @ColumnInfo ( name = \"is_bought\" ) var isBought : Boolean ) { enum class Category { FOOD , ELECTRONIC , BOOK ; companion object { @JvmStatic @TypeConverter fun getByOrdinal ( ordinal : Int ): Category? { var ret : Category? = null for ( cat in values ()) { if ( cat . ordinal == ordinal ) { ret = cat break } } return ret } @JvmStatic @TypeConverter fun toInt ( category : Category ): Int { return category . ordinal } } } } L\u00e1that\u00f3, hogy az oszt\u00e1lyon, az oszt\u00e1ly v\u00e1ltoz\u00f3in, valamint az oszt\u00e1lyon bel\u00fcl l\u00e9v\u0151 enum oszt\u00e1ly f\u00fcggv\u00e9nyein annot\u00e1ci\u00f3kat helyezt\u00fcnk el. Az @Entity jelzi a Room k\u00f3dgener\u00e1tor\u00e1nak, hogy ennek az oszt\u00e1lynak a p\u00e9ld\u00e1nyai adatb\u00e1zis rekordoknak fognak megfelelni egy t\u00e1bl\u00e1ban \u00e9s hogy az egyes v\u00e1ltoz\u00f3i felelnek majd meg a t\u00e1bla oszlopainak. A @ColumnInfo annot\u00e1ci\u00f3val megadjuk, hogy mi legyen a tagv\u00e1ltoz\u00f3nak megfelel\u0151 oszlop neve. @PrimaryKey -jel jel\u00f6lj\u00fck a t\u00e1bla egyszer\u0171 kulcs attrib\u00fatum\u00e1t. Az oszt\u00e1lyban l\u00e9trehoztunk egy enum -ot is, amivel egy kateg\u00f3ri\u00e1t akarunk k\u00f3dolni. Az enum-nak van k\u00e9t statikus met\u00f3dusa, @TypeConverter annot\u00e1ci\u00f3val ell\u00e1tva. Ezekkel oldhat\u00f3 meg, hogy az adatb\u00e1zis ak\u00e1r \u00f6sszetett adatszerkezeteket is t\u00e1rolni tudjon. Ezek a f\u00fcggv\u00e9nyek felel\u0151sek az\u00e9rt, hogy egy felhaszn\u00e1l\u00f3i t\u00edpust leford\u00edtsanak egy, az adatb\u00e1zis \u00e1ltal t\u00e1mogatott t\u00edpusra, illetve ford\u00edtva. Megfigyelhet\u0151 tov\u00e1bb\u00e1, hogy ezen f\u00fcggv\u00e9nyek el vannak l\u00e1tva a @JvmStatic annot\u00e1ci\u00f3val is. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert alapvet\u0151en, amikor a companion object-ek Jvm b\u00e1jtk\u00f3dra fordulnak, akkor egy k\u00fcl\u00f6n statikus oszt\u00e1ly j\u00f6n sz\u00e1mukra l\u00e9tre. Ezzel az annot\u00e1ci\u00f3val lehet megadni, hogy ne j\u00f6jj\u00f6n l\u00e9tre k\u00fcl\u00f6n statikus oszt\u00e1ly, ehelyett a bennfoglal\u00f3 oszt\u00e1ly (jelen esetben Category) statikus f\u00fcggv\u00e9nyei legyenek. Erre a speci\u00e1lis viselked\u00e9sre pedig a Room m\u0171k\u00f6d\u00e9se miatt van sz\u00fcks\u00e9g, ugyanis tudnia kell, hol keresse egy-egy t\u00edpusra a konvertereket. data class Kotlinban van lehet\u0151s\u00e9g \u00fagynevezett data class l\u00e9trehoz\u00e1s\u00e1ra. Ezt tal\u00e1n legk\u00f6nnyebben a Java-s POJO (Plain-Old-Java-Object) oszt\u00e1lyoknak lehet megfeleltetni. A c\u00e9ljuk, hogy publikus property-kben \u00f6sszef\u00fcgg\u0151 adatokat t\u00e1roljanak, semmi t\u00f6bb! Ezen k\u00edv\u00fcl automatikusan l\u00e9trej\u00f6nnek bizonyos seg\u00e9df\u00fcggv\u00e9nyek is, p\u00e9ld\u00e1ul egy megfelel\u0151 equals, toString \u00e9s copy implement\u00e1ci\u00f3. Egy DAO oszt\u00e1ly l\u00e9trehoz\u00e1sa \u00b6 DAO DAO = Data Access Object A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin interf\u00e9szt, aminek a neve legyen ShoppingItemDao : @Dao interface ShoppingItemDao { @Query ( \"SELECT * FROM shoppingitem\" ) fun getAll (): List < ShoppingItem > @Insert fun insert ( shoppingItems : ShoppingItem ): Long @Update fun update ( shoppingItem : ShoppingItem ) @Delete fun deleteItem ( shoppingItem : ShoppingItem ) } Egy @Dao annot\u00e1ci\u00f3val ell\u00e1tott interf\u00e9sz a Room k\u00f3dgener\u00e1tora sz\u00e1m\u00e1ra azt jelzi, hogy gener\u00e1lni kell az interf\u00e9szhez egy olyan implement\u00e1ci\u00f3t, ami az interf\u00e9sz f\u00fcggv\u00e9nyeket az azokon l\u00e9v\u0151 annot\u00e1ci\u00f3k ( @Query , @Insert , @Update , @Delete ) alapj\u00e1n val\u00f3s\u00edtja meg. Figyelj\u00fck meg, hogy az Android Studio a @Query annot\u00e1ci\u00f3 param\u00e9terek\u00e9nt \u00e1tadott SQLite scriptre is ny\u00fajt k\u00f3dkieg\u00e9sz\u00edt\u00e9st, hiba jelz\u00e9st! Az adatb\u00e1zis oszt\u00e1ly l\u00e9trehoz\u00e1sa \u00b6 A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen ShoppingListDatabase : @Database ( entities = [ ShoppingItem :: class ] , version = 1 ) @TypeConverters ( value = [ ShoppingItem . Category :: class ] ) abstract class ShoppingListDatabase : RoomDatabase () { abstract fun shoppingItemDao (): ShoppingItemDao companion object { fun getDatabase ( applicationContext : Context ): ShoppingListDatabase { return Room . databaseBuilder ( applicationContext , ShoppingListDatabase :: class . java , \"shopping-list\" ). build (); } } } A @Database annot\u00e1ci\u00f3val lehet jelezni a k\u00f3dgener\u00e1tornak, hogy egy oszt\u00e1ly egy adatb\u00e1zist fog reprezent\u00e1lni. Az ilyen oszt\u00e1lynak absztraktnak kell lennie, valamint a RoomDatabase -b\u0151l kell sz\u00e1rmaznia. Az annot\u00e1ci\u00f3 entities param\u00e9ter\u00e9nek egy list\u00e1t kell \u00e1tadni, ami az adatb\u00e1zis t\u00e1bl\u00e1knak megfelel\u0151 @Entity -vel jelzett oszt\u00e1lyokat tartalmazza. A version param\u00e9ter \u00e9rt\u00e9ke a lok\u00e1lis adatb\u00e1zis verzi\u00f3. A @TypeConverters annot\u00e1ci\u00f3val lehet megadni a Room -nak olyan oszt\u00e1lyokat, amik @TypeConverter -rel ell\u00e1tott f\u00fcggv\u00e9nyeket tartalmaznak, ezzel t\u00e1mogatva a t\u00edpuskonverzi\u00f3t adatb\u00e1zis \u00e9s objektum modell k\u00f6z\u00f6tt. A ShoppingListDatabase oszt\u00e1ly felel\u0151s a megfelel\u0151 DAO oszt\u00e1lyok el\u00e9rhet\u0151s\u00e9g\u00e9\u00e9rt is. Ezen k\u00edv\u00fcl van m\u00e9g egy statikus getDatabase f\u00fcggv\u00e9ny, ami azt \u00edrja le, hogyan kell l\u00e9trehozni az adatb\u00e1zist (melyik oszt\u00e1lyb\u00f3l, milyen n\u00e9ven). Ez a f\u00fcggv\u00e9ny az alkalmaz\u00e1s kontextus\u00e1t v\u00e1rja param\u00e9ter\u00fcl. Lista megjelen\u00edt\u00e9se RecyclerView -val (2 pont) \u00b6 A lista adapter l\u00e9trehoz\u00e1sa \u00b6 K\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt a lista adaptert fogjuk l\u00e9trehozni, ami a modell elemeket fogja majd szolg\u00e1ltatni a RecyclerView -nak. A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et adapter n\u00e9ven! Az adapter package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt ShoppingAdapter n\u00e9ven: class ShoppingAdapter ( private val listener : ShoppingItemClickListener ) : RecyclerView . Adapter < ShoppingAdapter . ShoppingViewHolder > () { private val items = mutableListOf < ShoppingItem > () override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ) = ShoppingViewHolder ( ItemShoppingListBinding . inflate ( LayoutInflater . from ( parent . context ), parent , false ) ) override fun onBindViewHolder ( holder : ShoppingViewHolder , position : Int ) { // TODO implementation } override fun getItemCount (): Int = items . size interface ShoppingItemClickListener { fun onItemChanged ( item : ShoppingItem ) } inner class ShoppingViewHolder ( val binding : ItemShoppingListBinding ) : RecyclerView . ViewHolder ( binding . root ) } A list\u00e1t RecyclerView seg\u00edts\u00e9g\u00e9vel szeretn\u00e9nk megjelen\u00edteni, ez\u00e9rt az adapter a RecyclerView.Adapter oszt\u00e1lyb\u00f3l sz\u00e1rmazik. Az adapter a modell elemeket egy list\u00e1ban t\u00e1rolja. A rendszer a RecyclerView -val val\u00f3 hat\u00e9kony lista megjelen\u00edt\u00e9shez a ViewHolder tervez\u00e9si mint\u00e1t val\u00f3s\u00edtja meg, ez\u00e9rt sz\u00fcks\u00e9g van egy ViewHolder oszt\u00e1ly megad\u00e1s\u00e1ra is. ViewHolder -eken kereszt\u00fcl \u00e9rhetj\u00fck majd el a lista elemekhez tartoz\u00f3 View -kat. Mivel a ViewHolder oszt\u00e1ly p\u00e9ld\u00e1nyai az Adapterhez lesznek csatolva (az\u00e9rt, hogy el\u00e9rj\u00e9k a bels\u0151 v\u00e1ltoz\u00f3it), inner class oszt\u00e1lyk\u00e9nt kell defini\u00e1lni. A RecyclerView.Adapter h\u00e1rom absztrakt f\u00fcggv\u00e9nyt defini\u00e1l, amelyeket k\u00f6telez\u0151 megval\u00f3s\u00edtani. Az onCreateViewHolder() -ben hozzuk l\u00e9tre az adott lista elemet megjelen\u00edt\u0151 View -t \u00e9s a hozz\u00e1 tartoz\u00f3 ViewHolder -t. Az onBindViewHolder() -ben k\u00f6tj\u00fck hozz\u00e1 a modell elemhez a n\u00e9zetet, a getItemCount() pedig a list\u00e1ban tal\u00e1lhat\u00f3 (\u00e1ltal\u00e1nos esetre fogalmazva a megjelen\u00edtend\u0151) elemek sz\u00e1m\u00e1t kell, hogy visszaadja. A ShoppingAdapter -ben defini\u00e1ltunk egy ShoppingItemClickListener nev\u0171 interf\u00e9szt is, aminek a seg\u00edts\u00e9g\u00e9vel jelezhetj\u00fck az alkalmaz\u00e1s t\u00f6bbi r\u00e9sze fel\u00e9, hogy esem\u00e9ny t\u00f6rt\u00e9nt egy lista elemen. Az ItemShoppingListBinding-ra hib\u00e1t jelez a ford\u00edt\u00f3, hiszen m\u00e9g nem hoztuk l\u00e9tre a hozz\u00e1 tartoz\u00f3 layout er\u0151forr\u00e1st. Ezt tegy\u00fck is meg: Hozzuk l\u00e9tre item_shopping_list.xml n\u00e9ven \u00e9s cser\u00e9lj\u00fck le a f\u00e1jl tartalm\u00e1t az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:paddingBottom= \"8dp\" android:paddingLeft= \"16dp\" android:paddingRight= \"16dp\" android:paddingTop= \"8dp\" > <CheckBox android:id= \"@+id/cbIsBought\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_vertical\" android:text= \"@string/bought\" /> <ImageView android:id= \"@+id/ivIcon\" android:layout_width= \"64dp\" android:layout_height= \"64dp\" android:layout_marginLeft= \"8dp\" tools:src= \"@drawable/open_book\" /> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_marginLeft= \"8dp\" android:layout_weight= \"1\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/tvName\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"Apple\" /> <TextView android:id= \"@+id/tvDescription\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"My favorite fruit\" /> <TextView android:id= \"@+id/tvCategory\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"Food\" /> <TextView android:id= \"@+id/tvPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"20 Ft\" /> </LinearLayout> <ImageButton android:id= \"@+id/ibRemove\" style= \"@style/Widget.AppCompat.Button.Borderless\" android:layout_width= \"50dp\" android:layout_height= \"50dp\" android:layout_gravity= \"center_vertical\" android:scaleType= \"fitXY\" android:src= \"@drawable/ic_delete_grey600_48dp\" /> </LinearLayout> Hozzuk l\u00e9tre a @string/bought er\u0151forr\u00e1st! Kattintsunk r\u00e1 az er\u0151forr\u00e1s hivatkoz\u00e1sra, majd Alt + Enter lenyom\u00e1sa ut\u00e1n v\u00e1lasszuk a \u201eCreate string value resource \u2019bought\u2019\u201d lehet\u0151s\u00e9get! A felugr\u00f3 ablakban az er\u0151forr\u00e1s \u00e9rt\u00e9k\u00e9nek adjuk a Bought \u00e9rt\u00e9ket! T\u00e9rj\u00fcnk vissza az ShoppingAdapter -hez, \u00e9s \u00edrjuk meg onBindViewHolder -ben az adatok megjelen\u00edt\u00e9s\u00e9nek logik\u00e1j\u00e1t. \u00c9rdemes megfigyelni a getImageResource f\u00fcggv\u00e9nyt, ami az enum-hoz t\u00e1rs\u00edtja a megfelel\u0151 k\u00e9pi er\u0151forr\u00e1st. override fun onBindViewHolder ( holder : ShoppingViewHolder , position : Int ) { val shoppingItem = items [ position ] holder . binding . ivIcon . setImageResource ( getImageResource ( shoppingItem . category )) holder . binding . cbIsBought . isChecked = shoppingItem . isBought holder . binding . tvName . text = shoppingItem . name holder . binding . tvDescription . text = shoppingItem . description holder . binding . tvCategory . text = shoppingItem . category . name holder . binding . tvPrice . text = \" ${ shoppingItem . estimatedPrice } Ft\" holder . binding . cbIsBought . setOnCheckedChangeListener { buttonView , isChecked -> shoppingItem . isBought = isChecked listener . onItemChanged ( shoppingItem ) } } @DrawableRes () private fun getImageResource ( category : ShoppingItem . Category ): Int { return when ( category ) { ShoppingItem . Category . FOOD -> R . drawable . groceries ShoppingItem . Category . ELECTRONIC -> R . drawable . lightning ShoppingItem . Category . BOOK -> R . drawable . open_book } } L\u00e1that\u00f3, hogy a fel\u00fcletet a holder nev\u0171 ViewHolder objektum binding attrib\u00fatum\u00e1n kereszt\u00fcl \u00e9rj\u00fck el, innen tudjuk haszn\u00e1lni a resource id -kat. Biztos\u00edtsuk egy elem hozz\u00e1ad\u00e1s\u00e1nak, valamint a teljes lista friss\u00edt\u00e9s\u00e9nek lehet\u0151s\u00e9g\u00e9t az al\u00e1bbi f\u00fcggv\u00e9nyekkel: fun addItem ( item : ShoppingItem ) { items . add ( item ) notifyItemInserted ( items . size - 1 ) } fun update ( shoppingItems : List < ShoppingItem > ) { items . clear () items . addAll ( shoppingItems ) notifyDataSetChanged () } RecyclerView notify A RecyclerView meg\u00edr\u00e1s\u00e1n\u00e1l figyeltek arra, hogy hat\u00e9kony legyen, ez\u00e9rt az adathalmaz v\u00e1ltoz\u00e1sakor csak azokat a n\u00e9zeteket friss\u00edti, amit felt\u00e9tlen sz\u00fcks\u00e9ges. Azonban szint\u00e9n hat\u00e9konys\u00e1g miatt, nem az adapter fogja kisz\u00e1molni a v\u00e1ltoz\u00e1st, hanem ezt a programoz\u00f3nak kell k\u00e9zzel jeleznie. Erre szolg\u00e1l a notify*** f\u00fcggv\u00e9nycsal\u00e1d, aminek k\u00e9t tagja fent l\u00e1that\u00f3. Az als\u00f3 hat\u00e1s\u00e1ra a teljes adathalmaz lecser\u00e9l\u0151dik, \u00e9s \u00fajrarajzol\u00f3dik minden. Az els\u0151 hat\u00e1s\u00e1ra viszont a m\u00e1r l\u00e9tez\u0151 elemek nem m\u00f3dosulnak, csak egy \u00fajonnan besz\u00fart elem lesz kirajzolva. A RecyclerView \u00e9s az adatok megjelen\u00edt\u00e9se \u00b6 Kezdj\u00fck azzal, hogy kieg\u00e9sz\u00edtj\u00fck a theme.xml f\u00e1jl tartalm\u00e1t az al\u00e1bbiakkal: <style name= \"Theme.ShoppingList\" parent= \"Theme.MaterialComponents.DayNight.DarkActionBar\" > <item name= \"windowActionBar\" > false </item> <item name= \"windowNoTitle\" > true </item> ... </style> Szeretn\u00e9k, hogy a bev\u00e1s\u00e1rl\u00f3lista alkalmaz\u00e1s egyetlen Activity -j\u00e9t teljesen elfoglalja. Ennek az el\u00e9r\u00e9s\u00e9hez cser\u00e9lj\u00fck le az activity_main.xml tartalm\u00e1t az al\u00e1bbiakra: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <com.google.android.material.appbar.AppBarLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <androidx.appcompat.widget.Toolbar android:id= \"@+id/toolbar\" android:layout_width= \"match_parent\" android:layout_height= \"?attr/actionBarSize\" android:background= \"?attr/colorSecondary\" /> </com.google.android.material.appbar.AppBarLayout> <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rvMain\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_marginTop= \"?attr/actionBarSize\" tools:listitem= \"@layout/item_shopping_list\" /> <com.google.android.material.floatingactionbutton.FloatingActionButton android:id= \"@+id/fab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"bottom|end\" android:layout_margin= \"24dp\" app:srcCompat= \"@drawable/ic_add_white_36dp\" /> </androidx.coordinatorlayout.widget.CoordinatorLayout> Megfigyelhet\u0151, hogy a t\u00e9m\u00e1ban kikapcsoltuk az ActionBar megjelen\u00e9s\u00e9t, helyette az xml f\u00e1jlban szerepel egy Toolbar t\u00edpus\u00fa elem, egy AppBarLayout-ba csomagolva. Mostan\u00e1ban tan\u00e1csos nem a be\u00e9p\u00edtett ActionBar-t haszn\u00e1lni, hanem helyette egy Toolbar-t lehelyezni, mert ez t\u00f6bb, hasznos funkci\u00f3t is t\u00e1mogat, p\u00e9ld\u00e1ul integr\u00e1l\u00f3dni tud egy NavigationDrawer-rel, vagy az \u00fajabb navig\u00e1ci\u00f3s komponenssel (amit ebb\u0151l a t\u00e1rgyb\u00f3l nem vesz\u00fcnk). A tools:listitem param\u00e9ter seg\u00edts\u00e9g\u00e9vel az Android Studio layout megjelen\u00edt\u0151 fel\u00fclet\u00e9n megjelenik a param\u00e9terben \u00e1tadott listaelem. Adjuk hozz\u00e1 az al\u00e1bbi v\u00e1ltoz\u00f3kat a MainActivity -hez \u00e9s cser\u00e9lj\u00fck le a projekt l\u00e9trehoz\u00e1sakor gener\u00e1lt onCreate() f\u00fcggv\u00e9nyt: private lateinit var binding : ActivityMainBinding private lateinit var database : ShoppingListDatabase private lateinit var adapter : ShoppingAdapter override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) setSupportActionBar ( binding . toolbar ) database = ShoppingListDatabase . getDatabase ( applicationContext ) binding . fab . setOnClickListener { //TODO } } A MainActivity -hez adjuk hozz\u00e1 a RecyclerView -t inicializ\u00e1l\u00f3 k\u00f3dr\u00e9szletet: private fun initRecyclerView () { adapter = ShoppingAdapter ( this ) binding . rvMain . layoutManager = LinearLayoutManager ( this ) binding . rvMain . adapter = adapter loadItemsInBackground () } private fun loadItemsInBackground () { thread { val items = database . shoppingItemDao (). getAll () runOnUiThread { adapter . update ( items ) } } } Mivel az adatb\u00e1zis k\u00e9r\u00e9s nem t\u00f6rt\u00e9nhet az alkalmaz\u00e1s f\u0151sz\u00e1l\u00e1n, a Kotlin \u00e1ltal biztos\u00edtott thread() seg\u00e9df\u00fcggv\u00e9nnyel l\u00e9trehozunk egy \u00faj sz\u00e1lat, a kiolvasott list\u00e1t pedig az Activity \u00e1ltal biztos\u00edtott runOnUiThread f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel a f\u0151sz\u00e1lon adjuk \u00e1t az adapternek. Ez nem t\u00f6k\u00e9letes megold\u00e1s, mivel ha elhagyn\u00e1nk az activity-t a kiolvas\u00e1s sor\u00e1n, a thread \u00e9letben maradna, ami ak\u00e1r mem\u00f3riasziv\u00e1rg\u00e1st is okozhat. Egy jobb megold\u00e1st biztos\u00edt a Kotlin Coroutine t\u00e1mogat\u00e1sa, ennek bemutat\u00e1s\u00e1ra azonban sajnos a labor keretei k\u00f6z\u00f6tt nincsen id\u0151. A ShoppingAdapter l\u00e9trehoz\u00e1sakor a MainActivity -t adjuk \u00e1t az adapter konstruktor param\u00e9terek\u00e9nt, de a MainActivity m\u00e9g nem implement\u00e1lja a sz\u00fcks\u00e9ges interf\u00e9szt. P\u00f3toljuk a hi\u00e1nyoss\u00e1got: class MainActivity : AppCompatActivity (), ShoppingAdapter . ShoppingItemClickListener { //... override fun onItemChanged ( item : ShoppingItem ) { thread { database . shoppingItemDao (). update ( item ) Log . d ( \"MainActivity\" , \"ShoppingItem update was successful\" ) } } } H\u00edvjuk meg az initRecyclerView() f\u00fcggv\u00e9nyt az onCreate() f\u00fcggv\u00e9ny utols\u00f3 l\u00e9p\u00e9sek\u00e9nt: override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) setSupportActionBar ( binding . toolbar ) database = ShoppingListDatabase . getDatabase ( applicationContext ) binding . fab . setOnClickListener { //TODO } initRecyclerView () } Ezen a ponton az alkalmaz\u00e1sunk m\u00e1r meg tudja jelen\u00edteni az adatb\u00e1zisban t\u00e1rolt v\u00e1s\u00e1rolni val\u00f3kat, azonban sajnos m\u00e9g egy elem\u00fcnk sincs, mivel lehet\u0151s\u00e9g\u00fcnk sem volt felvenni \u0151ket. A k\u00f6vetkez\u0151 l\u00e9p\u00e9s az \u00faj elem l\u00e9trehoz\u00e1s\u00e1t biztos\u00edt\u00f3 funkci\u00f3 implement\u00e1l\u00e1sa. Dial\u00f3gus megval\u00f3s\u00edt\u00e1sa \u00faj elem hozz\u00e1ad\u00e1s\u00e1hoz (1 pont) \u00b6 A dial\u00f3gus megjelen\u00edt\u00e9s\u00e9hez DialogFragment -et fogunk haszn\u00e1lni. Hozzuk l\u00e9tre a dial\u00f3gushoz tartoz\u00f3 layoutot dialog_new_shopping_item.xml , majd m\u00e1soljuk be a dial\u00f3gushoz tartoz\u00f3 layoutot: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"24dip\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/name\" /> <EditText android:id= \"@+id/etName\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/description\" /> <EditText android:id= \"@+id/etDescription\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/category\" /> <Spinner android:id= \"@+id/spCategory\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/estimated_price\" /> <EditText android:id= \"@+id/etEstimatedPrice\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:inputType= \"numberDecimal\" /> <CheckBox android:id= \"@+id/cbAlreadyPurchased\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"@string/already_purchased\" /> </LinearLayout> Vegy\u00fck fel a hi\u00e1nyz\u00f3 sz\u00f6veges er\u0151forr\u00e1sokat a strings.xml -ben: <resources> ... <string name= \"name\" > Name </string> <string name= \"description\" > Description </string> <string name= \"category\" > Category </string> <string name= \"estimated_price\" > Estimated Price </string> <string name= \"already_purchased\" > Already purchased </string> <string name= \"new_shopping_item\" > New Shopping Item </string> <string name= \"button_ok\" > OK </string> <string name= \"button_cancel\" > Cancel </string> <string-array name= \"category_items\" > <item> Food </item> <item> Electronic </item> <item> Book </item> </string-array> ... </resources> L\u00e1that\u00f3, hogy felvesz\u00fcnk egy string-array -t is, ezeket a sz\u00f6vegeket a Spinnerben fogjuk megjelen\u00edteni. A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et fragments n\u00e9ven. A fragments package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen NewShoppingItemDialogFragment : class NewShoppingItemDialogFragment : DialogFragment () { interface NewShoppingItemDialogListener { fun onShoppingItemCreated ( newItem : ShoppingItem ) } private lateinit var listener : NewShoppingItemDialogListener private lateinit var binding : DialogNewShoppingItemBinding override fun onAttach ( context : Context ) { super . onAttach ( context ) listener = context as? NewShoppingItemDialogListener ?: throw RuntimeException ( \"Activity must implement the NewShoppingItemDialogListener interface!\" ) } override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { binding = DialogNewShoppingItemBinding . inflate ( LayoutInflater . from ( context )) binding . spCategory . adapter = ArrayAdapter ( requireContext (), R . layout . support_simple_spinner_dropdown_item , resources . getStringArray ( R . array . category_items ) ) return AlertDialog . Builder ( requireContext ()) . setTitle ( R . string . new_shopping_item ) . setView ( binding . root ) . setPositiveButton ( R . string . button_ok ) { dialogInterface , i -> // TODO implement item creation } . setNegativeButton ( R . string . button_cancel , null ) . create () } companion object { const val TAG = \"NewShoppingItemDialogFragment\" } } A DialogFragment -et az androidx.fragment.app csomagb\u00f3l, az AlertDialog -ot pedig az androidx.appcompat.app csomagb\u00f3l import\u00e1ljuk! Ha az auto-import beimport\u00e1lja az android.R package-t, azt t\u00f6r\u00f6lj\u00fck ki. Az oszt\u00e1lyban defini\u00e1ltunk egy NewShoppingItemDialogListener nev\u0171 callback interface -t, amelyen kereszt\u00fcl a dial\u00f3gust megjelen\u00edt\u0151 Activity \u00e9rtes\u00fclhet az \u00faj elem l\u00e9trehoz\u00e1s\u00e1r\u00f3l. A megjelen\u0151 dial\u00f3gust az onCreateDialog() f\u00fcggv\u00e9nyben \u00e1ll\u00edtjuk \u00f6ssze. Ehhez az AlertDialog.Builder oszt\u00e1lyt haszn\u00e1ljuk fel. Az \u00faj elemet az OK gomb ClickListener -j\u00e9ben fogjuk l\u00e9trehozni, amennyiben a bevitt adatok \u00e9rv\u00e9nyesek. Jelen esetben az \u00e9rv\u00e9nyess\u00e9g a n\u00e9v mez\u0151 kit\u00f6lt\u00f6tts\u00e9g\u00e9t jelenti. Implement\u00e1ljuk a dial\u00f3gus pozit\u00edv gombj\u00e1nak esem\u00e9nykezel\u0151j\u00e9t a NewShoppingItemDialogFragment oszt\u00e1ly onCreateDialog f\u00fcggv\u00e9ny\u00e9n bel\u00fcl: . setPositiveButton ( R . string . button_ok ) { dialogInterface , i -> if ( isValid ()) { listener . onShoppingItemCreated ( getShoppingItem ()) } } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 f\u00fcggv\u00e9nyeket: private fun isValid () = binding . etName . text . isNotEmpty () private fun getShoppingItem () = ShoppingItem ( name = binding . etName . text . toString (), description = binding . etDescription . text . toString (), estimatedPrice = binding . etEstimatedPrice . text . toString (). toIntOrNull () ?: 0 , category = ShoppingItem . Category . getByOrdinal ( binding . spCategory . selectedItemPosition ) ?: ShoppingItem . Category . BOOK , isBought = binding . cbAlreadyPurchased . isChecked ) A fenti k\u00f3dr\u00e9szletben k\u00e9t dolgot \u00e9rdemes megfigyelni. Egyr\u00e9szt, a konstruktor param\u00e9tereit (\u00e9s Kotlinban \u00e1ltal\u00e1nosan b\u00e1rmely f\u00fcggv\u00e9ny param\u00e9tereit) n\u00e9v szerint is \u00e1t lehet adni, \u00edgy nem sz\u00fcks\u00e9ges megjegyezni a param\u00e9terek sorrendj\u00e9t, ha esetleg sok param\u00e9ter\u00fcnk lenne. Amennyiben a f\u00fcggv\u00e9nyparam\u00e9tereknek m\u00e9g alap\u00e9rtelmezett \u00e9rt\u00e9ket is adunk, \u00fagy m\u00e9g k\u00e9nyelbesebb\u00e9 v\u00e1lhat ez a funkci\u00f3, hiszen csak az \"\u00e9rdekes\" param\u00e9terek kapnak \u00e9rt\u00e9ket. Ez a m\u00f3dszer esetleg a Python nyelvb\u0151l lehet ismer\u0151s. Elvis oper\u00e1tor Egy m\u00e1sik \u00e9rdekess\u00e9g a ?: , avagy az Elvis oper\u00e1tor . Ez azt csin\u00e1lja, hogy amennyiben a bal oldali kifejez\u00e9s nem null-ra \u00e9rt\u00e9kel\u0151dik ki, akkor \u00e9rt\u00e9k\u00fcl a bal oldali kifejez\u00e9st adja, ha pedig null-ra \u00e9rt\u00e9kel\u0151dik ki, akkor a jobb oldali kifejez\u00e9st. \u00cdgy egyszer\u0171 null \u00e9rt\u00e9kt\u0151l f\u00fcgg\u0151 \u00e9rt\u00e9kad\u00e1st t\u00f6m\u00f6ren le lehet \u00edrni. A MainActivity onCreate() f\u00fcggv\u00e9ny\u00e9ben friss\u00edts\u00fck a FloatingActionButton OnClickListener -j\u00e9t, hogy az a fentebb megval\u00f3s\u00edtott dial\u00f3gust dobja fel: binding . fab . setOnClickListener { NewShoppingItemDialogFragment (). show ( supportFragmentManager , NewShoppingItemDialogFragment . TAG ) } Friss\u00edts\u00fck a MainActivity -t, hogy implement\u00e1lja a dial\u00f3gusban defini\u00e1lt interface-t: class MainActivity : AppCompatActivity (), ShoppingAdapter . ShoppingItemClickListener , NewShoppingItemDialogFragment . NewShoppingItemDialogListener { //... override fun onShoppingItemCreated ( newItem : ShoppingItem ) { thread { val insertId = database . shoppingItemDao (). insert ( newItem ) newItem . id = insertId runOnUiThread { adapter . addItem ( newItem ) } } } Figyelj\u00fck meg, hogy ebben az esetben is thread -be csomagolva futtatunk adatb\u00e1zis m\u0171veletet. A Room tiltja a UI sz\u00e1lon t\u00f6rt\u00e9n\u0151 adatb\u00e1zis m\u0171veletek futtat\u00e1s\u00e1t. Emellett a user experience (UX) is romlik, ha az esetlegesen lass\u00fa m\u0171veletek megakasztj\u00e1k a UI sz\u00e1lat. Az adatb\u00e1zisba val\u00f3 beilleszt\u00e9s ut\u00e1n sz\u00fcks\u00e9ges az eredeti objektumunk id-j\u00e9t az adatb\u00e1zist\u00f3l kapott id-re be\u00e1ll\u00edtani, k\u00fcl\u00f6nben egy\u00e9b m\u0171veletek nem v\u00e9gezhet\u0151k rajta. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! \u00d6n\u00e1ll\u00f3 feladat: t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Elem t\u00f6rl\u00e9se egyes\u00e9vel, az elemeken tal\u00e1lhat\u00f3 szemetes ikonra kattint\u00e1s hat\u00e1s\u00e1ra. Megold\u00e1s Gomb esem\u00e9nykezel\u0151j\u00e9nek megval\u00f3s\u00edt\u00e1sa Interf\u00e9sz kib\u0151v\u00edt\u00e9se Interf\u00e9sz f\u00fcggv\u00e9ny megval\u00f3s\u00edt\u00e1sa T\u00f6rl\u00e9s az adatb\u00e1zisb\u00f3l T\u00f6rl\u00e9s az adapterb\u0151l RecyclerView friss\u00edt\u00e9se IMSc feladatok \u00b6 Meger\u0151s\u00edt\u0151 dial\u00f3gus (1 pont) \u00b6 Implement\u00e1ljunk egy Remove all felirat\u00fa men\u00fcpontot \u00e9s a hozz\u00e1 tartoz\u00f3 funkci\u00f3t! Az alkalmaz\u00e1s jelen\u00edtsen meg egy meger\u0151s\u00edt\u0151 dial\u00f3gust, amikor a felhaszn\u00e1l\u00f3 a Remove all men\u00fcpontra kattint. A dial\u00f3gus tartalmazzon egy r\u00f6vid sz\u00f6veges figyelmeztet\u00e9st, hogy minden elem t\u00f6rl\u0151dni fog, egy pozit\u00edv \u00e9s negat\u00edv gombot ( OK \u00e9s Cancel ). A pozit\u00edv gomb lenyom\u00e1sakor t\u00f6rl\u0151djenek csak az elemek. Elemek szerkeszt\u00e9se (1 pont) \u00b6 Teremts\u00fck meg a lista elemek szerkeszt\u00e9s\u00e9nek lehet\u0151s\u00e9g\u00e9t. A lista elemre helyezz\u00fcnk egy szerkeszt\u00e9s gombot, melynek hat\u00e1s\u00e1ra ny\u00edljon meg a m\u00e1r kor\u00e1bban implement\u00e1lt felviteli dial\u00f3gus, a beviteli mez\u0151k pedig legyenek el\u0151re kit\u00f6ltve a mentett \u00e9rt\u00e9kekkel. Az OK gomb hat\u00e1s\u00e1ra a megl\u00e9v\u0151 lista elem m\u00f3dosuljon az adatb\u00e1zisban \u00e9s a n\u00e9zeten is.","title":"Labor 06 - Bev\u00e1s\u00e1rl\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/06-android-room/#labor-06-bevasarlo-alkalmazas-keszitese","text":"","title":"Labor 06 - Bev\u00e1s\u00e1rl\u00f3 alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/06-android-room/#bevezeto","text":"A labor sor\u00e1n egy bev\u00e1s\u00e1rl\u00f3 lista alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1sban fel lehet venni megv\u00e1s\u00e1rolni k\u00edv\u00e1nt term\u00e9keket, valamint megv\u00e1s\u00e1roltnak lehet jel\u00f6lni \u00e9s t\u00f6r\u00f6lni lehet megl\u00e9v\u0151ket. Az alkalmaz\u00e1s a term\u00e9kek list\u00e1j\u00e1t RecyclerView -ban jelen\u00edti meg, a lista elemeket \u00e9s azok \u00e1llapot\u00e1t a Room nev\u0171 ORM library seg\u00edts\u00e9g\u00e9vel t\u00e1rolja perzisztensen. \u00daj elem felv\u00e9tel\u00e9re egy FloatingActionButton megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g. ORM ORM = Object-relational mapping Felhaszn\u00e1lt technol\u00f3gi\u00e1k: Activity Fragment RecyclerView FloatingActionButton Room","title":"Bevezet\u0151"},{"location":"laborok/06-android-room/#az-alkalmazas-specifikacioja","text":"Az alkalmaz\u00e1s egy Activity -b\u0151l \u00e1ll, ami bev\u00e1s\u00e1rl\u00f3lista elemeket jelen\u00edt meg. \u00daj elemet a jobb als\u00f3 sarokban tal\u00e1lhat\u00f3 FloatingActionButton seg\u00edts\u00e9g\u00e9vel vehet\u00fcnk fel. Erre kattintva egy dial\u00f3gus jelenik meg, amin megadhatjuk a v\u00e1s\u00e1rolni k\u00edv\u00e1nt \u00e1ru nev\u00e9t, le\u00edr\u00e1s\u00e1t, kateg\u00f3ri\u00e1j\u00e1t \u00e9s becs\u00fclt \u00e1r\u00e1t. A dial\u00f3guson az OK gombra kattintva a dial\u00f3gus elt\u0171nik, a benne megadott adatokkal l\u00e9trej\u00f6n egy lista elem a list\u00e1ban. Az egyes lista elemeken CheckBox seg\u00edts\u00e9g\u00e9vel jelezhetj\u00fck, hogy m\u00e1r megv\u00e1s\u00e1roltuk \u0151ket. A kuka ikonra kattintva t\u00f6r\u00f6lhetj\u00fck az adott elemet. A men\u00fcben tal\u00e1lhat\u00f3 \u201eRemove all\u201d opci\u00f3val az \u00f6sszes lista elemet t\u00f6r\u00f6lhetj\u00fck.","title":"Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja"},{"location":"laborok/06-android-room/#laborfeladatok","text":"A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani. Perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa: 1 pont Lista megjelen\u00edt\u00e9se RecyclerView -val: 2 pont Dial\u00f3gus megval\u00f3s\u00edt\u00e1sa \u00faj elem hozz\u00e1ad\u00e1s\u00e1hoz: 1 pont \u00d6n\u00e1ll\u00f3 feladat (t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa): 1 pont IMSc A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladatokat megoldva 2 IMSc pont szerezhet\u0151: Meger\u0151s\u00edt\u0151 dial\u00f3gus: 1 pont Elemek szerkeszt\u00e9se: 1 pont","title":"Laborfeladatok"},{"location":"laborok/06-android-room/#projekt-letrehozasa","text":"Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd: 1. Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get. 2. A projekt neve legyen ShoppingList , a kezd\u0151 package pedig hu.bme.aut.android.shoppinglist 3. Nyelvnek v\u00e1lasszuk a Kotlin -t. 4. A minimum API szint legyen API21: Android 5.0 . 5. A Use legacy android.support libraries pontot ne pip\u00e1ljuk be. Amint elk\u00e9sz\u00fclt a projekt\u00fcnk, kapcsoljuk is be a ViewBinding -ot. Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android tagen bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u00e9st (Ezek ut\u00e1n kattintsunk jobb fel\u00fcl a Sync Now gombra.): android { ... buildFeatures { viewBinding true } } A kezd\u0151 Activity neve maradhat MainActivity, valamint t\u00f6lts\u00fck le \u00e9s t\u00f6m\u00f6r\u00edts\u00fck ki az alkalmaz\u00e1shoz sz\u00fcks\u00e9ges er\u0151forr\u00e1sokat , majd m\u00e1soljuk be \u0151ket a projekt app/src/main/res mapp\u00e1j\u00e1ba (Studio-ban a res mapp\u00e1n \u00e1llva Ctrl+V )!","title":"Projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/06-android-room/#perzisztens-adattarolas-megvalositasa-1-pont","text":"Az adatok perzisztens t\u00e1rol\u00e1s\u00e1hoz a Room k\u00f6nyvt\u00e1rat fogjuk haszn\u00e1lni.","title":"Perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/06-android-room/#room-hozzaadasa-a-projekthez","text":"Kezdj\u00fck azzal, hogy az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban a pluginokhoz hozz\u00e1\u00edrunk egy sort (bekapcsoljuk a Kotlin Annotation Processort - KAPT): plugins { id 'com.android.application' id 'kotlin-android' id 'kotlin-kapt' } //... Ezt k\u00f6vet\u0151en, szint\u00e9n ebben a build.gradle f\u00e1jlban a dependencies blokkhoz adjuk hozz\u00e1 a Room libraryt: dependencies { //... def room_version = \"2.3.0\" implementation \"androidx.room:room-runtime:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" } Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync now gombra. Room A Room egy k\u00e9nyelmes adatbaz\u00e1skezel\u00e9st lehet\u0151v\u00e9 tev\u0151 API-t ny\u00fajt a platform szint\u0171 SQLite implement\u00e1ci\u00f3 f\u00f6l\u00e9. Megsp\u00f3rolhat\u00f3 vele a kor\u00e1bban l\u00e1tott sok \u00fajra \u00e9s \u00fajra meg\u00edrand\u00f3 k\u00f3d, p\u00e9ld\u00e1ul a t\u00e1bl\u00e1k adatait \u00e9s l\u00e9trehoz\u00f3 scriptj\u00e9t tartalmaz\u00f3 Table oszt\u00e1lyok, a DBHelper \u00e9s a PersistentDataHelper . Ezeket \u00e9s m\u00e1s seg\u00e9doszt\u00e1lyokat a Room annotation alap\u00fa k\u00f3dgener\u00e1l\u00e1ssal hozza l\u00e9tre a build folyamat r\u00e9szek\u00e9nt. A Room alapvet\u0151 komponenseinek, architekt\u00far\u00e1j\u00e1nak \u00e9s haszn\u00e1lat\u00e1nak le\u00edr\u00e1sa megtal\u00e1lhat\u00f3 a megfelel\u0151 developer.android.com oldalon.","title":"Room hozz\u00e1ad\u00e1sa a projekthez"},{"location":"laborok/06-android-room/#egy-modell-osztaly-letrehozasa","text":"A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et data n\u00e9ven. A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen ShoppingItem : @Entity ( tableName = \"shoppingitem\" ) data class ShoppingItem ( @ColumnInfo ( name = \"id\" ) @PrimaryKey ( autoGenerate = true ) var id : Long? = null , @ColumnInfo ( name = \"name\" ) var name : String , @ColumnInfo ( name = \"description\" ) var description : String , @ColumnInfo ( name = \"category\" ) var category : Category , @ColumnInfo ( name = \"estimated_price\" ) var estimatedPrice : Int , @ColumnInfo ( name = \"is_bought\" ) var isBought : Boolean ) { enum class Category { FOOD , ELECTRONIC , BOOK ; companion object { @JvmStatic @TypeConverter fun getByOrdinal ( ordinal : Int ): Category? { var ret : Category? = null for ( cat in values ()) { if ( cat . ordinal == ordinal ) { ret = cat break } } return ret } @JvmStatic @TypeConverter fun toInt ( category : Category ): Int { return category . ordinal } } } } L\u00e1that\u00f3, hogy az oszt\u00e1lyon, az oszt\u00e1ly v\u00e1ltoz\u00f3in, valamint az oszt\u00e1lyon bel\u00fcl l\u00e9v\u0151 enum oszt\u00e1ly f\u00fcggv\u00e9nyein annot\u00e1ci\u00f3kat helyezt\u00fcnk el. Az @Entity jelzi a Room k\u00f3dgener\u00e1tor\u00e1nak, hogy ennek az oszt\u00e1lynak a p\u00e9ld\u00e1nyai adatb\u00e1zis rekordoknak fognak megfelelni egy t\u00e1bl\u00e1ban \u00e9s hogy az egyes v\u00e1ltoz\u00f3i felelnek majd meg a t\u00e1bla oszlopainak. A @ColumnInfo annot\u00e1ci\u00f3val megadjuk, hogy mi legyen a tagv\u00e1ltoz\u00f3nak megfelel\u0151 oszlop neve. @PrimaryKey -jel jel\u00f6lj\u00fck a t\u00e1bla egyszer\u0171 kulcs attrib\u00fatum\u00e1t. Az oszt\u00e1lyban l\u00e9trehoztunk egy enum -ot is, amivel egy kateg\u00f3ri\u00e1t akarunk k\u00f3dolni. Az enum-nak van k\u00e9t statikus met\u00f3dusa, @TypeConverter annot\u00e1ci\u00f3val ell\u00e1tva. Ezekkel oldhat\u00f3 meg, hogy az adatb\u00e1zis ak\u00e1r \u00f6sszetett adatszerkezeteket is t\u00e1rolni tudjon. Ezek a f\u00fcggv\u00e9nyek felel\u0151sek az\u00e9rt, hogy egy felhaszn\u00e1l\u00f3i t\u00edpust leford\u00edtsanak egy, az adatb\u00e1zis \u00e1ltal t\u00e1mogatott t\u00edpusra, illetve ford\u00edtva. Megfigyelhet\u0151 tov\u00e1bb\u00e1, hogy ezen f\u00fcggv\u00e9nyek el vannak l\u00e1tva a @JvmStatic annot\u00e1ci\u00f3val is. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert alapvet\u0151en, amikor a companion object-ek Jvm b\u00e1jtk\u00f3dra fordulnak, akkor egy k\u00fcl\u00f6n statikus oszt\u00e1ly j\u00f6n sz\u00e1mukra l\u00e9tre. Ezzel az annot\u00e1ci\u00f3val lehet megadni, hogy ne j\u00f6jj\u00f6n l\u00e9tre k\u00fcl\u00f6n statikus oszt\u00e1ly, ehelyett a bennfoglal\u00f3 oszt\u00e1ly (jelen esetben Category) statikus f\u00fcggv\u00e9nyei legyenek. Erre a speci\u00e1lis viselked\u00e9sre pedig a Room m\u0171k\u00f6d\u00e9se miatt van sz\u00fcks\u00e9g, ugyanis tudnia kell, hol keresse egy-egy t\u00edpusra a konvertereket. data class Kotlinban van lehet\u0151s\u00e9g \u00fagynevezett data class l\u00e9trehoz\u00e1s\u00e1ra. Ezt tal\u00e1n legk\u00f6nnyebben a Java-s POJO (Plain-Old-Java-Object) oszt\u00e1lyoknak lehet megfeleltetni. A c\u00e9ljuk, hogy publikus property-kben \u00f6sszef\u00fcgg\u0151 adatokat t\u00e1roljanak, semmi t\u00f6bb! Ezen k\u00edv\u00fcl automatikusan l\u00e9trej\u00f6nnek bizonyos seg\u00e9df\u00fcggv\u00e9nyek is, p\u00e9ld\u00e1ul egy megfelel\u0151 equals, toString \u00e9s copy implement\u00e1ci\u00f3.","title":"Egy modell oszt\u00e1ly l\u00e9trehoz\u00e1sa"},{"location":"laborok/06-android-room/#egy-dao-osztaly-letrehozasa","text":"DAO DAO = Data Access Object A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin interf\u00e9szt, aminek a neve legyen ShoppingItemDao : @Dao interface ShoppingItemDao { @Query ( \"SELECT * FROM shoppingitem\" ) fun getAll (): List < ShoppingItem > @Insert fun insert ( shoppingItems : ShoppingItem ): Long @Update fun update ( shoppingItem : ShoppingItem ) @Delete fun deleteItem ( shoppingItem : ShoppingItem ) } Egy @Dao annot\u00e1ci\u00f3val ell\u00e1tott interf\u00e9sz a Room k\u00f3dgener\u00e1tora sz\u00e1m\u00e1ra azt jelzi, hogy gener\u00e1lni kell az interf\u00e9szhez egy olyan implement\u00e1ci\u00f3t, ami az interf\u00e9sz f\u00fcggv\u00e9nyeket az azokon l\u00e9v\u0151 annot\u00e1ci\u00f3k ( @Query , @Insert , @Update , @Delete ) alapj\u00e1n val\u00f3s\u00edtja meg. Figyelj\u00fck meg, hogy az Android Studio a @Query annot\u00e1ci\u00f3 param\u00e9terek\u00e9nt \u00e1tadott SQLite scriptre is ny\u00fajt k\u00f3dkieg\u00e9sz\u00edt\u00e9st, hiba jelz\u00e9st!","title":"Egy DAO oszt\u00e1ly l\u00e9trehoz\u00e1sa"},{"location":"laborok/06-android-room/#az-adatbazis-osztaly-letrehozasa","text":"A data package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen ShoppingListDatabase : @Database ( entities = [ ShoppingItem :: class ] , version = 1 ) @TypeConverters ( value = [ ShoppingItem . Category :: class ] ) abstract class ShoppingListDatabase : RoomDatabase () { abstract fun shoppingItemDao (): ShoppingItemDao companion object { fun getDatabase ( applicationContext : Context ): ShoppingListDatabase { return Room . databaseBuilder ( applicationContext , ShoppingListDatabase :: class . java , \"shopping-list\" ). build (); } } } A @Database annot\u00e1ci\u00f3val lehet jelezni a k\u00f3dgener\u00e1tornak, hogy egy oszt\u00e1ly egy adatb\u00e1zist fog reprezent\u00e1lni. Az ilyen oszt\u00e1lynak absztraktnak kell lennie, valamint a RoomDatabase -b\u0151l kell sz\u00e1rmaznia. Az annot\u00e1ci\u00f3 entities param\u00e9ter\u00e9nek egy list\u00e1t kell \u00e1tadni, ami az adatb\u00e1zis t\u00e1bl\u00e1knak megfelel\u0151 @Entity -vel jelzett oszt\u00e1lyokat tartalmazza. A version param\u00e9ter \u00e9rt\u00e9ke a lok\u00e1lis adatb\u00e1zis verzi\u00f3. A @TypeConverters annot\u00e1ci\u00f3val lehet megadni a Room -nak olyan oszt\u00e1lyokat, amik @TypeConverter -rel ell\u00e1tott f\u00fcggv\u00e9nyeket tartalmaznak, ezzel t\u00e1mogatva a t\u00edpuskonverzi\u00f3t adatb\u00e1zis \u00e9s objektum modell k\u00f6z\u00f6tt. A ShoppingListDatabase oszt\u00e1ly felel\u0151s a megfelel\u0151 DAO oszt\u00e1lyok el\u00e9rhet\u0151s\u00e9g\u00e9\u00e9rt is. Ezen k\u00edv\u00fcl van m\u00e9g egy statikus getDatabase f\u00fcggv\u00e9ny, ami azt \u00edrja le, hogyan kell l\u00e9trehozni az adatb\u00e1zist (melyik oszt\u00e1lyb\u00f3l, milyen n\u00e9ven). Ez a f\u00fcggv\u00e9ny az alkalmaz\u00e1s kontextus\u00e1t v\u00e1rja param\u00e9ter\u00fcl.","title":"Az adatb\u00e1zis oszt\u00e1ly l\u00e9trehoz\u00e1sa"},{"location":"laborok/06-android-room/#lista-megjelenitese-recyclerview-val-2-pont","text":"","title":"Lista megjelen\u00edt\u00e9se RecyclerView-val (2 pont)"},{"location":"laborok/06-android-room/#a-lista-adapter-letrehozasa","text":"K\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt a lista adaptert fogjuk l\u00e9trehozni, ami a modell elemeket fogja majd szolg\u00e1ltatni a RecyclerView -nak. A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et adapter n\u00e9ven! Az adapter package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt ShoppingAdapter n\u00e9ven: class ShoppingAdapter ( private val listener : ShoppingItemClickListener ) : RecyclerView . Adapter < ShoppingAdapter . ShoppingViewHolder > () { private val items = mutableListOf < ShoppingItem > () override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ) = ShoppingViewHolder ( ItemShoppingListBinding . inflate ( LayoutInflater . from ( parent . context ), parent , false ) ) override fun onBindViewHolder ( holder : ShoppingViewHolder , position : Int ) { // TODO implementation } override fun getItemCount (): Int = items . size interface ShoppingItemClickListener { fun onItemChanged ( item : ShoppingItem ) } inner class ShoppingViewHolder ( val binding : ItemShoppingListBinding ) : RecyclerView . ViewHolder ( binding . root ) } A list\u00e1t RecyclerView seg\u00edts\u00e9g\u00e9vel szeretn\u00e9nk megjelen\u00edteni, ez\u00e9rt az adapter a RecyclerView.Adapter oszt\u00e1lyb\u00f3l sz\u00e1rmazik. Az adapter a modell elemeket egy list\u00e1ban t\u00e1rolja. A rendszer a RecyclerView -val val\u00f3 hat\u00e9kony lista megjelen\u00edt\u00e9shez a ViewHolder tervez\u00e9si mint\u00e1t val\u00f3s\u00edtja meg, ez\u00e9rt sz\u00fcks\u00e9g van egy ViewHolder oszt\u00e1ly megad\u00e1s\u00e1ra is. ViewHolder -eken kereszt\u00fcl \u00e9rhetj\u00fck majd el a lista elemekhez tartoz\u00f3 View -kat. Mivel a ViewHolder oszt\u00e1ly p\u00e9ld\u00e1nyai az Adapterhez lesznek csatolva (az\u00e9rt, hogy el\u00e9rj\u00e9k a bels\u0151 v\u00e1ltoz\u00f3it), inner class oszt\u00e1lyk\u00e9nt kell defini\u00e1lni. A RecyclerView.Adapter h\u00e1rom absztrakt f\u00fcggv\u00e9nyt defini\u00e1l, amelyeket k\u00f6telez\u0151 megval\u00f3s\u00edtani. Az onCreateViewHolder() -ben hozzuk l\u00e9tre az adott lista elemet megjelen\u00edt\u0151 View -t \u00e9s a hozz\u00e1 tartoz\u00f3 ViewHolder -t. Az onBindViewHolder() -ben k\u00f6tj\u00fck hozz\u00e1 a modell elemhez a n\u00e9zetet, a getItemCount() pedig a list\u00e1ban tal\u00e1lhat\u00f3 (\u00e1ltal\u00e1nos esetre fogalmazva a megjelen\u00edtend\u0151) elemek sz\u00e1m\u00e1t kell, hogy visszaadja. A ShoppingAdapter -ben defini\u00e1ltunk egy ShoppingItemClickListener nev\u0171 interf\u00e9szt is, aminek a seg\u00edts\u00e9g\u00e9vel jelezhetj\u00fck az alkalmaz\u00e1s t\u00f6bbi r\u00e9sze fel\u00e9, hogy esem\u00e9ny t\u00f6rt\u00e9nt egy lista elemen. Az ItemShoppingListBinding-ra hib\u00e1t jelez a ford\u00edt\u00f3, hiszen m\u00e9g nem hoztuk l\u00e9tre a hozz\u00e1 tartoz\u00f3 layout er\u0151forr\u00e1st. Ezt tegy\u00fck is meg: Hozzuk l\u00e9tre item_shopping_list.xml n\u00e9ven \u00e9s cser\u00e9lj\u00fck le a f\u00e1jl tartalm\u00e1t az al\u00e1bbira: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:paddingBottom= \"8dp\" android:paddingLeft= \"16dp\" android:paddingRight= \"16dp\" android:paddingTop= \"8dp\" > <CheckBox android:id= \"@+id/cbIsBought\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_vertical\" android:text= \"@string/bought\" /> <ImageView android:id= \"@+id/ivIcon\" android:layout_width= \"64dp\" android:layout_height= \"64dp\" android:layout_marginLeft= \"8dp\" tools:src= \"@drawable/open_book\" /> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_marginLeft= \"8dp\" android:layout_weight= \"1\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/tvName\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"Apple\" /> <TextView android:id= \"@+id/tvDescription\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"My favorite fruit\" /> <TextView android:id= \"@+id/tvCategory\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"Food\" /> <TextView android:id= \"@+id/tvPrice\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"20 Ft\" /> </LinearLayout> <ImageButton android:id= \"@+id/ibRemove\" style= \"@style/Widget.AppCompat.Button.Borderless\" android:layout_width= \"50dp\" android:layout_height= \"50dp\" android:layout_gravity= \"center_vertical\" android:scaleType= \"fitXY\" android:src= \"@drawable/ic_delete_grey600_48dp\" /> </LinearLayout> Hozzuk l\u00e9tre a @string/bought er\u0151forr\u00e1st! Kattintsunk r\u00e1 az er\u0151forr\u00e1s hivatkoz\u00e1sra, majd Alt + Enter lenyom\u00e1sa ut\u00e1n v\u00e1lasszuk a \u201eCreate string value resource \u2019bought\u2019\u201d lehet\u0151s\u00e9get! A felugr\u00f3 ablakban az er\u0151forr\u00e1s \u00e9rt\u00e9k\u00e9nek adjuk a Bought \u00e9rt\u00e9ket! T\u00e9rj\u00fcnk vissza az ShoppingAdapter -hez, \u00e9s \u00edrjuk meg onBindViewHolder -ben az adatok megjelen\u00edt\u00e9s\u00e9nek logik\u00e1j\u00e1t. \u00c9rdemes megfigyelni a getImageResource f\u00fcggv\u00e9nyt, ami az enum-hoz t\u00e1rs\u00edtja a megfelel\u0151 k\u00e9pi er\u0151forr\u00e1st. override fun onBindViewHolder ( holder : ShoppingViewHolder , position : Int ) { val shoppingItem = items [ position ] holder . binding . ivIcon . setImageResource ( getImageResource ( shoppingItem . category )) holder . binding . cbIsBought . isChecked = shoppingItem . isBought holder . binding . tvName . text = shoppingItem . name holder . binding . tvDescription . text = shoppingItem . description holder . binding . tvCategory . text = shoppingItem . category . name holder . binding . tvPrice . text = \" ${ shoppingItem . estimatedPrice } Ft\" holder . binding . cbIsBought . setOnCheckedChangeListener { buttonView , isChecked -> shoppingItem . isBought = isChecked listener . onItemChanged ( shoppingItem ) } } @DrawableRes () private fun getImageResource ( category : ShoppingItem . Category ): Int { return when ( category ) { ShoppingItem . Category . FOOD -> R . drawable . groceries ShoppingItem . Category . ELECTRONIC -> R . drawable . lightning ShoppingItem . Category . BOOK -> R . drawable . open_book } } L\u00e1that\u00f3, hogy a fel\u00fcletet a holder nev\u0171 ViewHolder objektum binding attrib\u00fatum\u00e1n kereszt\u00fcl \u00e9rj\u00fck el, innen tudjuk haszn\u00e1lni a resource id -kat. Biztos\u00edtsuk egy elem hozz\u00e1ad\u00e1s\u00e1nak, valamint a teljes lista friss\u00edt\u00e9s\u00e9nek lehet\u0151s\u00e9g\u00e9t az al\u00e1bbi f\u00fcggv\u00e9nyekkel: fun addItem ( item : ShoppingItem ) { items . add ( item ) notifyItemInserted ( items . size - 1 ) } fun update ( shoppingItems : List < ShoppingItem > ) { items . clear () items . addAll ( shoppingItems ) notifyDataSetChanged () } RecyclerView notify A RecyclerView meg\u00edr\u00e1s\u00e1n\u00e1l figyeltek arra, hogy hat\u00e9kony legyen, ez\u00e9rt az adathalmaz v\u00e1ltoz\u00e1sakor csak azokat a n\u00e9zeteket friss\u00edti, amit felt\u00e9tlen sz\u00fcks\u00e9ges. Azonban szint\u00e9n hat\u00e9konys\u00e1g miatt, nem az adapter fogja kisz\u00e1molni a v\u00e1ltoz\u00e1st, hanem ezt a programoz\u00f3nak kell k\u00e9zzel jeleznie. Erre szolg\u00e1l a notify*** f\u00fcggv\u00e9nycsal\u00e1d, aminek k\u00e9t tagja fent l\u00e1that\u00f3. Az als\u00f3 hat\u00e1s\u00e1ra a teljes adathalmaz lecser\u00e9l\u0151dik, \u00e9s \u00fajrarajzol\u00f3dik minden. Az els\u0151 hat\u00e1s\u00e1ra viszont a m\u00e1r l\u00e9tez\u0151 elemek nem m\u00f3dosulnak, csak egy \u00fajonnan besz\u00fart elem lesz kirajzolva.","title":"A lista adapter l\u00e9trehoz\u00e1sa"},{"location":"laborok/06-android-room/#a-recyclerview-es-az-adatok-megjelenitese","text":"Kezdj\u00fck azzal, hogy kieg\u00e9sz\u00edtj\u00fck a theme.xml f\u00e1jl tartalm\u00e1t az al\u00e1bbiakkal: <style name= \"Theme.ShoppingList\" parent= \"Theme.MaterialComponents.DayNight.DarkActionBar\" > <item name= \"windowActionBar\" > false </item> <item name= \"windowNoTitle\" > true </item> ... </style> Szeretn\u00e9k, hogy a bev\u00e1s\u00e1rl\u00f3lista alkalmaz\u00e1s egyetlen Activity -j\u00e9t teljesen elfoglalja. Ennek az el\u00e9r\u00e9s\u00e9hez cser\u00e9lj\u00fck le az activity_main.xml tartalm\u00e1t az al\u00e1bbiakra: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <com.google.android.material.appbar.AppBarLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <androidx.appcompat.widget.Toolbar android:id= \"@+id/toolbar\" android:layout_width= \"match_parent\" android:layout_height= \"?attr/actionBarSize\" android:background= \"?attr/colorSecondary\" /> </com.google.android.material.appbar.AppBarLayout> <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rvMain\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_marginTop= \"?attr/actionBarSize\" tools:listitem= \"@layout/item_shopping_list\" /> <com.google.android.material.floatingactionbutton.FloatingActionButton android:id= \"@+id/fab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"bottom|end\" android:layout_margin= \"24dp\" app:srcCompat= \"@drawable/ic_add_white_36dp\" /> </androidx.coordinatorlayout.widget.CoordinatorLayout> Megfigyelhet\u0151, hogy a t\u00e9m\u00e1ban kikapcsoltuk az ActionBar megjelen\u00e9s\u00e9t, helyette az xml f\u00e1jlban szerepel egy Toolbar t\u00edpus\u00fa elem, egy AppBarLayout-ba csomagolva. Mostan\u00e1ban tan\u00e1csos nem a be\u00e9p\u00edtett ActionBar-t haszn\u00e1lni, hanem helyette egy Toolbar-t lehelyezni, mert ez t\u00f6bb, hasznos funkci\u00f3t is t\u00e1mogat, p\u00e9ld\u00e1ul integr\u00e1l\u00f3dni tud egy NavigationDrawer-rel, vagy az \u00fajabb navig\u00e1ci\u00f3s komponenssel (amit ebb\u0151l a t\u00e1rgyb\u00f3l nem vesz\u00fcnk). A tools:listitem param\u00e9ter seg\u00edts\u00e9g\u00e9vel az Android Studio layout megjelen\u00edt\u0151 fel\u00fclet\u00e9n megjelenik a param\u00e9terben \u00e1tadott listaelem. Adjuk hozz\u00e1 az al\u00e1bbi v\u00e1ltoz\u00f3kat a MainActivity -hez \u00e9s cser\u00e9lj\u00fck le a projekt l\u00e9trehoz\u00e1sakor gener\u00e1lt onCreate() f\u00fcggv\u00e9nyt: private lateinit var binding : ActivityMainBinding private lateinit var database : ShoppingListDatabase private lateinit var adapter : ShoppingAdapter override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) setSupportActionBar ( binding . toolbar ) database = ShoppingListDatabase . getDatabase ( applicationContext ) binding . fab . setOnClickListener { //TODO } } A MainActivity -hez adjuk hozz\u00e1 a RecyclerView -t inicializ\u00e1l\u00f3 k\u00f3dr\u00e9szletet: private fun initRecyclerView () { adapter = ShoppingAdapter ( this ) binding . rvMain . layoutManager = LinearLayoutManager ( this ) binding . rvMain . adapter = adapter loadItemsInBackground () } private fun loadItemsInBackground () { thread { val items = database . shoppingItemDao (). getAll () runOnUiThread { adapter . update ( items ) } } } Mivel az adatb\u00e1zis k\u00e9r\u00e9s nem t\u00f6rt\u00e9nhet az alkalmaz\u00e1s f\u0151sz\u00e1l\u00e1n, a Kotlin \u00e1ltal biztos\u00edtott thread() seg\u00e9df\u00fcggv\u00e9nnyel l\u00e9trehozunk egy \u00faj sz\u00e1lat, a kiolvasott list\u00e1t pedig az Activity \u00e1ltal biztos\u00edtott runOnUiThread f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel a f\u0151sz\u00e1lon adjuk \u00e1t az adapternek. Ez nem t\u00f6k\u00e9letes megold\u00e1s, mivel ha elhagyn\u00e1nk az activity-t a kiolvas\u00e1s sor\u00e1n, a thread \u00e9letben maradna, ami ak\u00e1r mem\u00f3riasziv\u00e1rg\u00e1st is okozhat. Egy jobb megold\u00e1st biztos\u00edt a Kotlin Coroutine t\u00e1mogat\u00e1sa, ennek bemutat\u00e1s\u00e1ra azonban sajnos a labor keretei k\u00f6z\u00f6tt nincsen id\u0151. A ShoppingAdapter l\u00e9trehoz\u00e1sakor a MainActivity -t adjuk \u00e1t az adapter konstruktor param\u00e9terek\u00e9nt, de a MainActivity m\u00e9g nem implement\u00e1lja a sz\u00fcks\u00e9ges interf\u00e9szt. P\u00f3toljuk a hi\u00e1nyoss\u00e1got: class MainActivity : AppCompatActivity (), ShoppingAdapter . ShoppingItemClickListener { //... override fun onItemChanged ( item : ShoppingItem ) { thread { database . shoppingItemDao (). update ( item ) Log . d ( \"MainActivity\" , \"ShoppingItem update was successful\" ) } } } H\u00edvjuk meg az initRecyclerView() f\u00fcggv\u00e9nyt az onCreate() f\u00fcggv\u00e9ny utols\u00f3 l\u00e9p\u00e9sek\u00e9nt: override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) setContentView ( binding . root ) setSupportActionBar ( binding . toolbar ) database = ShoppingListDatabase . getDatabase ( applicationContext ) binding . fab . setOnClickListener { //TODO } initRecyclerView () } Ezen a ponton az alkalmaz\u00e1sunk m\u00e1r meg tudja jelen\u00edteni az adatb\u00e1zisban t\u00e1rolt v\u00e1s\u00e1rolni val\u00f3kat, azonban sajnos m\u00e9g egy elem\u00fcnk sincs, mivel lehet\u0151s\u00e9g\u00fcnk sem volt felvenni \u0151ket. A k\u00f6vetkez\u0151 l\u00e9p\u00e9s az \u00faj elem l\u00e9trehoz\u00e1s\u00e1t biztos\u00edt\u00f3 funkci\u00f3 implement\u00e1l\u00e1sa.","title":"A RecyclerView \u00e9s az adatok megjelen\u00edt\u00e9se"},{"location":"laborok/06-android-room/#dialogus-megvalositasa-uj-elem-hozzaadasahoz-1-pont","text":"A dial\u00f3gus megjelen\u00edt\u00e9s\u00e9hez DialogFragment -et fogunk haszn\u00e1lni. Hozzuk l\u00e9tre a dial\u00f3gushoz tartoz\u00f3 layoutot dialog_new_shopping_item.xml , majd m\u00e1soljuk be a dial\u00f3gushoz tartoz\u00f3 layoutot: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"24dip\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/name\" /> <EditText android:id= \"@+id/etName\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/description\" /> <EditText android:id= \"@+id/etDescription\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/category\" /> <Spinner android:id= \"@+id/spCategory\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dip\" android:text= \"@string/estimated_price\" /> <EditText android:id= \"@+id/etEstimatedPrice\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:inputType= \"numberDecimal\" /> <CheckBox android:id= \"@+id/cbAlreadyPurchased\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"@string/already_purchased\" /> </LinearLayout> Vegy\u00fck fel a hi\u00e1nyz\u00f3 sz\u00f6veges er\u0151forr\u00e1sokat a strings.xml -ben: <resources> ... <string name= \"name\" > Name </string> <string name= \"description\" > Description </string> <string name= \"category\" > Category </string> <string name= \"estimated_price\" > Estimated Price </string> <string name= \"already_purchased\" > Already purchased </string> <string name= \"new_shopping_item\" > New Shopping Item </string> <string name= \"button_ok\" > OK </string> <string name= \"button_cancel\" > Cancel </string> <string-array name= \"category_items\" > <item> Food </item> <item> Electronic </item> <item> Book </item> </string-array> ... </resources> L\u00e1that\u00f3, hogy felvesz\u00fcnk egy string-array -t is, ezeket a sz\u00f6vegeket a Spinnerben fogjuk megjelen\u00edteni. A hu.bme.aut.android.shoppinglist package-ben hozzunk l\u00e9tre egy \u00faj package-et fragments n\u00e9ven. A fragments package-ben hozzunk l\u00e9tre egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen NewShoppingItemDialogFragment : class NewShoppingItemDialogFragment : DialogFragment () { interface NewShoppingItemDialogListener { fun onShoppingItemCreated ( newItem : ShoppingItem ) } private lateinit var listener : NewShoppingItemDialogListener private lateinit var binding : DialogNewShoppingItemBinding override fun onAttach ( context : Context ) { super . onAttach ( context ) listener = context as? NewShoppingItemDialogListener ?: throw RuntimeException ( \"Activity must implement the NewShoppingItemDialogListener interface!\" ) } override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { binding = DialogNewShoppingItemBinding . inflate ( LayoutInflater . from ( context )) binding . spCategory . adapter = ArrayAdapter ( requireContext (), R . layout . support_simple_spinner_dropdown_item , resources . getStringArray ( R . array . category_items ) ) return AlertDialog . Builder ( requireContext ()) . setTitle ( R . string . new_shopping_item ) . setView ( binding . root ) . setPositiveButton ( R . string . button_ok ) { dialogInterface , i -> // TODO implement item creation } . setNegativeButton ( R . string . button_cancel , null ) . create () } companion object { const val TAG = \"NewShoppingItemDialogFragment\" } } A DialogFragment -et az androidx.fragment.app csomagb\u00f3l, az AlertDialog -ot pedig az androidx.appcompat.app csomagb\u00f3l import\u00e1ljuk! Ha az auto-import beimport\u00e1lja az android.R package-t, azt t\u00f6r\u00f6lj\u00fck ki. Az oszt\u00e1lyban defini\u00e1ltunk egy NewShoppingItemDialogListener nev\u0171 callback interface -t, amelyen kereszt\u00fcl a dial\u00f3gust megjelen\u00edt\u0151 Activity \u00e9rtes\u00fclhet az \u00faj elem l\u00e9trehoz\u00e1s\u00e1r\u00f3l. A megjelen\u0151 dial\u00f3gust az onCreateDialog() f\u00fcggv\u00e9nyben \u00e1ll\u00edtjuk \u00f6ssze. Ehhez az AlertDialog.Builder oszt\u00e1lyt haszn\u00e1ljuk fel. Az \u00faj elemet az OK gomb ClickListener -j\u00e9ben fogjuk l\u00e9trehozni, amennyiben a bevitt adatok \u00e9rv\u00e9nyesek. Jelen esetben az \u00e9rv\u00e9nyess\u00e9g a n\u00e9v mez\u0151 kit\u00f6lt\u00f6tts\u00e9g\u00e9t jelenti. Implement\u00e1ljuk a dial\u00f3gus pozit\u00edv gombj\u00e1nak esem\u00e9nykezel\u0151j\u00e9t a NewShoppingItemDialogFragment oszt\u00e1ly onCreateDialog f\u00fcggv\u00e9ny\u00e9n bel\u00fcl: . setPositiveButton ( R . string . button_ok ) { dialogInterface , i -> if ( isValid ()) { listener . onShoppingItemCreated ( getShoppingItem ()) } } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 f\u00fcggv\u00e9nyeket: private fun isValid () = binding . etName . text . isNotEmpty () private fun getShoppingItem () = ShoppingItem ( name = binding . etName . text . toString (), description = binding . etDescription . text . toString (), estimatedPrice = binding . etEstimatedPrice . text . toString (). toIntOrNull () ?: 0 , category = ShoppingItem . Category . getByOrdinal ( binding . spCategory . selectedItemPosition ) ?: ShoppingItem . Category . BOOK , isBought = binding . cbAlreadyPurchased . isChecked ) A fenti k\u00f3dr\u00e9szletben k\u00e9t dolgot \u00e9rdemes megfigyelni. Egyr\u00e9szt, a konstruktor param\u00e9tereit (\u00e9s Kotlinban \u00e1ltal\u00e1nosan b\u00e1rmely f\u00fcggv\u00e9ny param\u00e9tereit) n\u00e9v szerint is \u00e1t lehet adni, \u00edgy nem sz\u00fcks\u00e9ges megjegyezni a param\u00e9terek sorrendj\u00e9t, ha esetleg sok param\u00e9ter\u00fcnk lenne. Amennyiben a f\u00fcggv\u00e9nyparam\u00e9tereknek m\u00e9g alap\u00e9rtelmezett \u00e9rt\u00e9ket is adunk, \u00fagy m\u00e9g k\u00e9nyelbesebb\u00e9 v\u00e1lhat ez a funkci\u00f3, hiszen csak az \"\u00e9rdekes\" param\u00e9terek kapnak \u00e9rt\u00e9ket. Ez a m\u00f3dszer esetleg a Python nyelvb\u0151l lehet ismer\u0151s. Elvis oper\u00e1tor Egy m\u00e1sik \u00e9rdekess\u00e9g a ?: , avagy az Elvis oper\u00e1tor . Ez azt csin\u00e1lja, hogy amennyiben a bal oldali kifejez\u00e9s nem null-ra \u00e9rt\u00e9kel\u0151dik ki, akkor \u00e9rt\u00e9k\u00fcl a bal oldali kifejez\u00e9st adja, ha pedig null-ra \u00e9rt\u00e9kel\u0151dik ki, akkor a jobb oldali kifejez\u00e9st. \u00cdgy egyszer\u0171 null \u00e9rt\u00e9kt\u0151l f\u00fcgg\u0151 \u00e9rt\u00e9kad\u00e1st t\u00f6m\u00f6ren le lehet \u00edrni. A MainActivity onCreate() f\u00fcggv\u00e9ny\u00e9ben friss\u00edts\u00fck a FloatingActionButton OnClickListener -j\u00e9t, hogy az a fentebb megval\u00f3s\u00edtott dial\u00f3gust dobja fel: binding . fab . setOnClickListener { NewShoppingItemDialogFragment (). show ( supportFragmentManager , NewShoppingItemDialogFragment . TAG ) } Friss\u00edts\u00fck a MainActivity -t, hogy implement\u00e1lja a dial\u00f3gusban defini\u00e1lt interface-t: class MainActivity : AppCompatActivity (), ShoppingAdapter . ShoppingItemClickListener , NewShoppingItemDialogFragment . NewShoppingItemDialogListener { //... override fun onShoppingItemCreated ( newItem : ShoppingItem ) { thread { val insertId = database . shoppingItemDao (). insert ( newItem ) newItem . id = insertId runOnUiThread { adapter . addItem ( newItem ) } } } Figyelj\u00fck meg, hogy ebben az esetben is thread -be csomagolva futtatunk adatb\u00e1zis m\u0171veletet. A Room tiltja a UI sz\u00e1lon t\u00f6rt\u00e9n\u0151 adatb\u00e1zis m\u0171veletek futtat\u00e1s\u00e1t. Emellett a user experience (UX) is romlik, ha az esetlegesen lass\u00fa m\u0171veletek megakasztj\u00e1k a UI sz\u00e1lat. Az adatb\u00e1zisba val\u00f3 beilleszt\u00e9s ut\u00e1n sz\u00fcks\u00e9ges az eredeti objektumunk id-j\u00e9t az adatb\u00e1zist\u00f3l kapott id-re be\u00e1ll\u00edtani, k\u00fcl\u00f6nben egy\u00e9b m\u0171veletek nem v\u00e9gezhet\u0151k rajta. Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!","title":"Dial\u00f3gus megval\u00f3s\u00edt\u00e1sa \u00faj elem hozz\u00e1ad\u00e1s\u00e1hoz (1 pont)"},{"location":"laborok/06-android-room/#onallo-feladat-torles-megvalositasa-1-pont","text":"Elem t\u00f6rl\u00e9se egyes\u00e9vel, az elemeken tal\u00e1lhat\u00f3 szemetes ikonra kattint\u00e1s hat\u00e1s\u00e1ra. Megold\u00e1s Gomb esem\u00e9nykezel\u0151j\u00e9nek megval\u00f3s\u00edt\u00e1sa Interf\u00e9sz kib\u0151v\u00edt\u00e9se Interf\u00e9sz f\u00fcggv\u00e9ny megval\u00f3s\u00edt\u00e1sa T\u00f6rl\u00e9s az adatb\u00e1zisb\u00f3l T\u00f6rl\u00e9s az adapterb\u0151l RecyclerView friss\u00edt\u00e9se","title":"\u00d6n\u00e1ll\u00f3 feladat: t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/06-android-room/#imsc-feladatok","text":"","title":"IMSc feladatok"},{"location":"laborok/06-android-room/#megerosito-dialogus-1-pont","text":"Implement\u00e1ljunk egy Remove all felirat\u00fa men\u00fcpontot \u00e9s a hozz\u00e1 tartoz\u00f3 funkci\u00f3t! Az alkalmaz\u00e1s jelen\u00edtsen meg egy meger\u0151s\u00edt\u0151 dial\u00f3gust, amikor a felhaszn\u00e1l\u00f3 a Remove all men\u00fcpontra kattint. A dial\u00f3gus tartalmazzon egy r\u00f6vid sz\u00f6veges figyelmeztet\u00e9st, hogy minden elem t\u00f6rl\u0151dni fog, egy pozit\u00edv \u00e9s negat\u00edv gombot ( OK \u00e9s Cancel ). A pozit\u00edv gomb lenyom\u00e1sakor t\u00f6rl\u0151djenek csak az elemek.","title":"Meger\u0151s\u00edt\u0151 dial\u00f3gus (1 pont)"},{"location":"laborok/06-android-room/#elemek-szerkesztese-1-pont","text":"Teremts\u00fck meg a lista elemek szerkeszt\u00e9s\u00e9nek lehet\u0151s\u00e9g\u00e9t. A lista elemre helyezz\u00fcnk egy szerkeszt\u00e9s gombot, melynek hat\u00e1s\u00e1ra ny\u00edljon meg a m\u00e1r kor\u00e1bban implement\u00e1lt felviteli dial\u00f3gus, a beviteli mez\u0151k pedig legyenek el\u0151re kit\u00f6ltve a mentett \u00e9rt\u00e9kekkel. Az OK gomb hat\u00e1s\u00e1ra a megl\u00e9v\u0151 lista elem m\u00f3dosuljon az adatb\u00e1zisban \u00e9s a n\u00e9zeten is.","title":"Elemek szerkeszt\u00e9se (1 pont)"},{"location":"laborok/07-android-network/","text":"Labor 07 - Weather Info alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se \u00b6 Bevezet\u0151 \u00b6 A labor sor\u00e1n egy id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3kat megjelen\u00edt\u0151 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. A kor\u00e1bban l\u00e1tott UI elemek haszn\u00e1lata mellett l\u00e1thatunk majd p\u00e9ld\u00e1t h\u00e1l\u00f3zati kommunk\u00e1ci\u00f3 hat\u00e9kony megval\u00f3s\u00edt\u00e1s\u00e1ra is a Retrofit library felhaszn\u00e1l\u00e1s\u00e1val. Az alkalmaz\u00e1s v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg egy RecyclerView -ban, egy kiv\u00e1lasztott v\u00e1ros r\u00e9szletes id\u0151j\u00e1r\u00e1s adatait pedig az OpenWeatherMap REST API-j\u00e1nak seg\u00edts\u00e9g\u00e9vel k\u00e9rdezi le. A r\u00e9szletez\u0151 n\u00e9zeten egy ViewPager -ben k\u00e9t Fragment -en lehet megtekinteni a r\u00e9szleteket. \u00daj v\u00e1ros hozz\u00e1ad\u00e1s\u00e1ra egy FloatingActionButton megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g. REST = **Re**presentational **S**tate **T**ransfer Felhaszn\u00e1lt technol\u00f3gi\u00e1k: Activity Fragment RecyclerView ViewPager Retrofit Gson Glide Felt\u00f6lt\u00e9s \u00b6 Az elk\u00e9sz\u00fclt megold\u00e1st .zip form\u00e1tumban (File... -> Export to Zip File...) kell felt\u00f6lteni a t\u00e1rgy oldal\u00e1n, ahol a laborvezet\u0151 tudja \u00e9rt\u00e9kelni. Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja \u00b6 Az alkalmaz\u00e1s k\u00e9t Activity -b\u0151l \u00e1ll. Az alkalmaz\u00e1s indul\u00e1sakor megjelen\u0151 Activity a felhaszn\u00e1l\u00f3 \u00e1ltal felvett v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg. Minden lista elemhez tartozik egy Remove gomb, aminek a megnyom\u00e1s\u00e1ra az adott v\u00e1ros t\u00f6rl\u0151dik a list\u00e1b\u00f3l. \u00daj v\u00e1rost a n\u00e9zet jobb als\u00f3 sark\u00e1ban tal\u00e1lhat\u00f3 FloatingActionButton megnyom\u00e1s\u00e1val lehet felvenni. Egy v\u00e1rosra val\u00f3 kattint\u00e1s hat\u00e1s\u00e1ra megny\u00edlik egy \u00faj Activity k\u00e9t Fragment -tel, amik k\u00f6z\u00f6tt ViewPager -rel lehet v\u00e1ltani. Az els\u0151 Fragment a kiv\u00e1lasztott v\u00e1ros id\u0151j\u00e1r\u00e1s\u00e1nak le\u00edr\u00e1s\u00e1t \u00e9s az ahhoz tartoz\u00f3 ikont jelen\u00edti meg. A m\u00e1sodik Fragment -en a v\u00e1rosban m\u00e9rt \u00e1tlagos, minimum \u00e9s maximum h\u0151m\u00e9rs\u00e9klet, a l\u00e9gnyom\u00e1s \u00e9s a p\u00e1ratartalom \u00e9rt\u00e9ke l\u00e1that\u00f3. Laborfeladatok \u00b6 A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani. V\u00e1ros lista megval\u00f3s\u00edt\u00e1sa: 1 pont R\u00e9szletez\u0151 n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba: 1 pont H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa: 1 pont A h\u00e1l\u00f3zati r\u00e9teg bek\u00f6t\u00e9se a r\u00e9szletez\u0151 n\u00e9zetbe: 1 pont \u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa: 1 pont A labor sor\u00e1n egy komplex id\u0151j\u00e1r\u00e1s alkalmaz\u00e1s k\u00e9sz\u00fcl el. A labor sz\u0171k\u00f6s id\u0151kerete miatt sz\u00fcks\u00e9g lesz nagyobb k\u00f3dblokkok m\u00e1sol\u00e1s\u00e1ra, azonban minden esetben figyelj\u00fcnk a laborvezet\u0151 magyar\u00e1zat\u00e1ra, hogy a k\u00f3dr\u00e9szek \u00e9rthet\u0151ek legyenek. A c\u00e9l a bemutatott k\u00f3dok meg\u00e9rt\u00e9se \u00e9s a felhaszn\u00e1lt libraryk haszn\u00e1lat\u00e1nak elsaj\u00e1t\u00edt\u00e1sa. Eln\u00e9z\u00e9st k\u00e9r\u00fcnk az eddigiekn\u00e9l nagyobb k\u00f3d blokkok\u00e9rt, de egy ilyen, bemutat\u00f3 jelleg\u0171 feladat kisebb m\u00e9retben nem oldhat\u00f3 meg, illetve a labor elvesz\u00edten\u00e9 a l\u00e9nyeg\u00e9t, ha csak egy \u201ehello world\u201d h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3s lek\u00e9r\u00e9st val\u00f3s\u00edtan\u00e1nk meg. K\u00f6sz\u00f6nj\u00fck a meg\u00e9rt\u00e9st. Projekt l\u00e9trehoz\u00e1sa \u00b6 Hozzunk l\u00e9tre egy projektet Android Studioban. Az alkalmaz\u00e1st telefonra \u00e9s tabletre k\u00e9sz\u00edtj\u00fck, teh\u00e1t v\u00e1lasszuk ki a Phone and Tablet lehet\u0151s\u00e9get, No Activity opci\u00f3val! Az alkalmaz\u00e1st WeatherInfo n\u00e9ven hozzuk l\u00e9tre, a package name legyen hu.bme.aut.weatherinfo ! minimum SDK-nak pedig v\u00e1lasszuk az alap\u00e9rtelmezett API 21 -et! Els\u0151 Activity -k\u00e9nt hozzunk l\u00e9tre egy Basic Activityt , \u00e9s nevezz\u00fck el CityActivity -nek, legyen ez a Launcher Activity -nk majd kattintsunk a Finish gombra! Mindenek el\u0151tt kapcsoljuk be a ViewBinding -ot. Ehhez az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android blokkon bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u0151 k\u00f3dr\u00e9szletet (majd kattintsunk a jobb fel\u00fcl megjelen\u0151 Sync Now gombra). buildFeatures { viewBinding true } T\u00f6lts\u00fck le \u00e9s t\u00f6m\u00f6r\u00edts\u00fck ki az alkalmaz\u00e1shoz sz\u00fcks\u00e9ges er\u0151forr\u00e1sokat , majd m\u00e1soljuk be \u0151ket a projekt app/src/main/res mapp\u00e1j\u00e1ba (Studio-ban a res mappa kijel\u00f6l\u00e9se ut\u00e1n Ctrl+V )! Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban a dependencies blokkhoz adjuk hozz\u00e1 a Retrofit \u00e9s Glide libraryket: dependencies { //... def retrofit_version = \"2.9.0\" implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\" implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\" implementation 'com.github.bumptech.glide:glide:4.12.0' annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0' } Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync now gombra. A Retrofit a fejleszt\u0151 \u00e1ltal le\u00edrt egyszer\u0171, megfelel\u0151en annot\u00e1lt interf\u00e9szek alapj\u00e1n k\u00f3dgener\u00e1l\u00e1ssal \u00e1ll\u00edt el\u0151 HTTP hiv\u00e1sokat lebonyol\u00edt\u00f3 implement\u00e1ci\u00f3t. Kezeli az URL-ben inline m\u00f3don adott param\u00e9tereket, az URL queryket, stb. T\u00e1mogatja a legn\u00e9pszer\u0171bb szerializ\u00e1l\u00f3/deszerializ\u00e1l\u00f3 megold\u00e1sokat is (pl.: Gson , Moshi , Simple XML , stb.), amikkel Java/Kotlin objektumok, \u00e9s JSON vagy XML form\u00e1tum\u00fa adatok k\u00f6z\u00f6tti k\u00e9tir\u00e1ny\u00fa \u00e1talak\u00edt\u00e1s val\u00f3s\u00edthat\u00f3 meg. A laboron ezek k\u00f6z\u00fcl a Gsont fogjuk haszn\u00e1lni a JSON-ban \u00e9rkez\u0151 id\u0151j\u00e1r\u00e1s adatok konvert\u00e1l\u00e1s\u00e1ra. A Glide egy hat\u00e9kony k\u00e9pbet\u00f6lt\u00e9st \u00e9s -cache-el\u00e9st megval\u00f3s\u00edt\u00f3 library Androidra. Egyszer\u0171 interf\u00e9sze \u00e9s hat\u00e9konys\u00e1ga miatt haszn\u00e1ljuk. Az alkalmaz\u00e1sban sz\u00fcks\u00e9g\u00fcnk lesz internet el\u00e9r\u00e9sre. Vegy\u00fck fel az AndroidManifest.xml \u00e1llom\u00e1nyban az Internet permission -t az application tagen k\u00edv\u00fclre : <uses-permission android:name= \"android.permission.INTERNET\" /> Androidon API 23-t\u00f3l (6.0, Marshmallow) az enged\u00e9lyek k\u00e9t csoportba lettek osztva. A normal csoportba tartoz\u00f3 enged\u00e9lyeket el\u00e9g felvenni az AndroidManifest.xml f\u00e1jlba az el\u0151bb l\u00e1tott m\u00f3don \u00e9s az alkalmaz\u00e1s automatikusan megkapja \u0151ket. A dangerous csoportba tartoz\u00f3 enged\u00e9lyek eset\u00e9n ez m\u00e1r nem el\u00e9g, fut\u00e1s id\u0151ben explicit m\u00f3don el kell k\u00e9rni \u0151ket a felhaszn\u00e1l\u00f3t\u00f3l, aki ak\u00e1rmikor meg is tagadhatja az alkalmaz\u00e1st\u00f3l a k\u00e9rt enged\u00e9lyt. Az enged\u00e9lyek kezel\u00e9s\u00e9r\u0151l b\u0151vebben a developer.android.com oldalon lehet t\u00e1j\u00e9koz\u00f3dni Vegy\u00fck fel az al\u00e1bbi sz\u00f6veges er\u0151forr\u00e1sokat a res/values/strings.xml -be: <resources> <string name= \"app_name\" > WeatherInfo </string> <string name= \"action_settings\" > Settings </string> <string name= \"title_activity_city\" > Cities </string> <string name= \"remove\" > Remove </string> <string name= \"new_city\" > New city </string> <string name= \"new_city_hint\" > City </string> <string name= \"ok\" > OK </string> <string name= \"cancel\" > Cancel </string> <string name= \"title_activity_details\" > DetailsActivity </string> <string name= \"weather\" > Weather </string> <string name= \"temperature\" > Temperature </string> <string name= \"min_temperature\" > Min temperature </string> <string name= \"max_temperature\" > Max temperature </string> <string name= \"pressure\" > Pressure </string> <string name= \"humidity\" > Humidity </string> <string name= \"main\" > Main </string> <string name= \"details\" > Details </string> </resources> OpenWeatherMap API kulcs \u00b6 Regisztr\u00e1ljunk saj\u00e1t felhaszn\u00e1l\u00f3t az OpenWeatherMap oldalon, \u00e9s hozzunk l\u00e9tre egy API kulcsot, aminek a seg\u00edts\u00e9g\u00e9vel haszn\u00e1lhatjuk majd a szolg\u00e1ltat\u00e1st az alkalmaz\u00e1sunkban! Kattintsunk a Sign in majd a Create an account gombra. T\u00f6lts\u00fck ki a regisztr\u00e1ci\u00f3s formot A Company mez\u0151 \u00e9rt\u00e9ke legyen \"BME\", a Purpose \u00e9rt\u00e9ke legyen \"Education/Science\" Sikeres regisztr\u00e1ci\u00f3 ut\u00e1n az API keys tabon tal\u00e1lhat\u00f3 az alap\u00e9rtelmezettk\u00e9nt l\u00e9trehozott API kulcs. A kapott API kulcsra k\u00e9s\u0151bb sz\u00fcks\u00e9g\u00fcnk lesz az id\u0151j\u00e1r\u00e1s adatokat lek\u00e9r\u0151 API h\u00edv\u00e1sn\u00e1l. 1. V\u00e1roslista megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Val\u00f3s\u00edtsuk meg az egy RecyclerView -b\u00f3l \u00e1ll\u00f3, v\u00e1rosok list\u00e1j\u00e1t megjelen\u00edt\u0151 CityActivity -t! A v\u00e1ros nev\u00e9re kattintva jelenik majd meg egy r\u00e9szletez\u0151 n\u00e9zet ( DetailsAcitivity ), ahol az id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3k let\u00f6lt\u00e9se fog t\u00f6rt\u00e9nni. \u00daj v\u00e1ros felv\u00e9tel\u00e9re egy FloatingActionButton fog szolg\u00e1lni. Cser\u00e9lj\u00fck le az activity_city.xml tartalm\u00e1t egy RecyclerView -ra \u00e9s egy FloatingActionButton -re: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".CityActivity\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/mainRecyclerView\" android:layout_width= \"0dp\" android:layout_height= \"0dp\" app:layout_behavior= \"@string/appbar_scrolling_view_behavior\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintEnd_toEndOf= \"parent\" app:layout_constraintStart_toStartOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> <com.google.android.material.floatingactionbutton.FloatingActionButton android:id= \"@+id/fab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"bottom|end\" android:layout_margin= \"24dp\" android:src= \"@drawable/ic_add_white_36dp\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintEnd_toEndOf= \"parent\" /> </androidx.constraintlayout.widget.ConstraintLayout> Az egyes funkci\u00f3khoz tartoz\u00f3 oszt\u00e1lyokat k\u00fcl\u00f6n package-ekbe fogjuk szervezni. El\u0151fordulhat, hogy a m\u00e1sol\u00e1sok miatt az Android Studio nem ismeri fel egyb\u0151l a package szerkezetet, \u00edgy ha ilyen probl\u00e9m\u00e1nk lenne, az oszt\u00e1ly n\u00e9ven \u00e1llva Alt+Enter ut\u00e1n \u00e1ll\u00edtassuk be a megfelel\u0151 package nevet. A hu.bme.aut.weatherinfo package-ben hozzunk l\u00e9tre egy feature nev\u0171 package-et. A feature package-ben hozzunk l\u00e9tre egy city nev\u0171 package-et. Drag and drop m\u00f3dszerrel helyezz\u00fck \u00e1t a CityActivity -t a city package -be, a felugr\u00f3 dial\u00f3gusban pedig kattintsunk a Refactor gombra. T\u00f6r\u00f6lj\u00fck a gener\u00e1lt k\u00e9t Fragment-et \u00e9s a hozz\u00e1juk tartoz\u00f3 layout file-okat, valamint a res/navigation mappa tartalm\u00e1t. A CityActivity k\u00f3dj\u00e1t cser\u00e9lj\u00fck le a k\u00f6vetkez\u0151re: class CityActivity : AppCompatActivity (), CityAdapter . OnCitySelectedListener , AddCityDialogFragment . AddCityDialogListener { private lateinit var binding : ActivityCityBinding private lateinit var adapter : CityAdapter override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityCityBinding . inflate ( layoutInflater ) setContentView ( binding . root ) initFab () initRecyclerView () } private fun initFab () { binding . fab . setOnClickListener { // TODO: Show new city dialog } } private fun initRecyclerView () { binding . mainRecyclerView . layoutManager = LinearLayoutManager ( this ) adapter = CityAdapter ( this ) adapter . addCity ( \"Budapest\" ) adapter . addCity ( \"Debrecen\" ) adapter . addCity ( \"Sopron\" ) adapter . addCity ( \"Szeged\" ) binding . mainRecyclerView . adapter = adapter } override fun onCitySelected ( city : String? ) { // Todo: Start DetailsActivity with the selected city } override fun onCityAdded ( city : String? ) { adapter . addCity ( city !! ) } } A city package-ben hozzuk l\u00e9tre a CityAdapter oszt\u00e1lyt: class CityAdapter ( private val listener : OnCitySelectedListener ) : RecyclerView . Adapter < CityAdapter . CityViewHolder > () { private val cities : MutableList < String > = ArrayList () interface OnCitySelectedListener { fun onCitySelected ( city : String? ) } override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ): CityViewHolder { val view = LayoutInflater . from ( parent . context ). inflate ( R . layout . item_city , parent , false ) return CityViewHolder ( view ) } override fun onBindViewHolder ( holder : CityViewHolder , position : Int ) { val item = cities [ position ] holder . bind ( item ) } override fun getItemCount (): Int = cities . size fun addCity ( newCity : String ) { cities . add ( newCity ) notifyItemInserted ( cities . size - 1 ) } fun removeCity ( position : Int ) { cities . removeAt ( position ) notifyItemRemoved ( position ) if ( position < cities . size ) { notifyItemRangeChanged ( position , cities . size - position ) } } inner class CityViewHolder ( private val itemView : View ) : RecyclerView . ViewHolder ( itemView ) { var binding = ItemCityBinding . bind ( itemView ) var item : String? = null init { binding . root . setOnClickListener { listener . onCitySelected ( item ) } } fun bind ( newCity : String? ) { item = newCity binding . CityItemNameTextView . text = item } } } Hozzuk l\u00e9tre a res/layout mapp\u00e1ban az item_city.xml layoutot: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:paddingBottom= \"8dp\" android:paddingLeft= \"16dp\" android:paddingRight= \"16dp\" android:paddingTop= \"8dp\" android:weightSum= \"3\" > <TextView android:id= \"@+id/CityItemNameTextView\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"2\" tools:text= \"Budapest\" /> <Button android:id= \"@+id/CityItemRemoveButton\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:text= \"@string/remove\" /> </LinearLayout> Ig\u00e9ny szerint vizsg\u00e1ljuk meg a laborvezet\u0151vel a CityAdapter oszt\u00e1lyban az al\u00e1bbiakat: - Hogyan t\u00f6rt\u00e9nik a lista tartalmi elemeinek kezel\u00e9se? - Hogyan \u00e9p\u00fcl fel egy lista elem? - Hogyan t\u00f6rt\u00e9nik a lista elemen a kiv\u00e1laszt\u00e1s esem\u00e9nyek kezel\u00e9se? Hogyan \u00e9rtes\u00edtj\u00fck a CityActivity -t egy elem kiv\u00e1laszt\u00e1s\u00e1r\u00f3l? - Hogyan ker\u00fcltek megval\u00f3s\u00edt\u00e1sra az addCity(...) \u00e9s removeCity(\u2026) met\u00f3dusok! A CityActivity -vel kapcsolatos k\u00f6vetkez\u0151 l\u00e9p\u00e9s az \u00faj v\u00e1ros nev\u00e9t bek\u00e9r\u0151 dial\u00f3gus ( DialogFragment ) megval\u00f3s\u00edt\u00e1sa \u00e9s bek\u00f6t\u00e9se. Hozzunk l\u00e9tre egy dialog_new_city.xml nev\u0171 layout f\u00e1jlt a res/layout mapp\u00e1ban a k\u00f6vetkez\u0151 tartalommal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"24dp\" > <EditText android:id= \"@+id/NewCityDialogEditText\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:hint= \"@string/new_city_hint\" android:inputType= \"text\" /> </LinearLayout> A city package-ben hozzuk l\u00e9tre az AddCityDialogFragment oszt\u00e1lyt: class AddCityDialogFragment : AppCompatDialogFragment () { private lateinit var binding : DialogNewCityBinding private lateinit var listener : AddCityDialogListener interface AddCityDialogListener { fun onCityAdded ( city : String? ) } override fun onAttach ( context : Context ) { super . onAttach ( context ) binding = DialogNewCityBinding . inflate ( LayoutInflater . from ( context )) try { listener = if ( targetFragment != null ) { targetFragment as AddCityDialogListener } else { activity as AddCityDialogListener } } catch ( e : ClassCastException ) { throw RuntimeException ( e ) } } override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { return AlertDialog . Builder ( requireContext ()) . setTitle ( R . string . new_city ) . setView ( binding . root ) . setPositiveButton ( R . string . ok ) { _ , _ -> listener . onCityAdded ( binding . NewCityDialogEditText . text . toString () ) } . setNegativeButton ( R . string . cancel , null ) . create () } } Ig\u00e9ny szerint vizsg\u00e1ljuk meg a laborvezet\u0151vel az AddCityDialogFragment implement\u00e1ci\u00f3j\u00e1ban az al\u00e1bbiakat: - Hogyan ellen\u0151rizz\u00fck azt, hogy az Activity , amihez a DialogFragment felcsatol\u00f3dott implement\u00e1lja-e az AddCityDialogListener interf\u00e9szt? - Hogyan ker\u00fcl be\u00e1ll\u00edt\u00e1sra az egyedi layout a DialogFragment -ben? - Hogyan t\u00e9r\u00fcnk vissza a be\u00edrt v\u00e1rosn\u00e9vvel? Szorgalmi feladat otthonra: az alkalmaz\u00e1s ne engedje a v\u00e1ros l\u00e9trehoz\u00e1s\u00e1t, ha a v\u00e1rosn\u00e9v mez\u0151 \u00fcres! Tipp: http://stackoverflow.com/questions/13746412/prevent-dialogfragment-from-dismissing-when-button-is-clicked V\u00e9g\u00fcl eg\u00e9sz\u00edts\u00fck ki a CityActivity initFab(\u2026) f\u00fcggv\u00e9ny\u00e9t \u00fagy, hogy a gombra kattintva jelenjen meg az \u00faj dial\u00f3gus: private fun initFab () { binding . fab . setOnClickListener { AddCityDialogFragment (). show ( supportFragmentManager , AddCityDialogFragment :: class . java . simpleName ) } } Ind\u00edtsuk el az alkalmaz\u00e1st, amely m\u00e1r k\u00e9pes v\u00e1rosnevek bek\u00e9r\u00e9s\u00e9re \u00e9s megjelen\u00edt\u00e9s\u00e9re. 2. R\u00e9szletez\u0151 n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba (1 pont) \u00b6 A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben a hu.bme.aut.weatherinfo.feature package-en bel\u00fcl hozzunk l\u00e9tre egy details nev\u0171 packaget. A details package-ben hozzunk l\u00e9tre egy Empty Activity t\u00edpus\u00fa Activity -t DetailsActivity n\u00e9ven. A hozz\u00e1 tartoz\u00f3 activity_details.xml layout k\u00f3dja: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:paddingBottom= \"@dimen/activity_vertical_margin\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" > <com.google.android.material.tabs.TabLayout android:id= \"@+id/tabLayout\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_gravity= \"top\" /> <androidx.viewpager2.widget.ViewPager2 android:id= \"@+id/mainViewPager\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" /> </LinearLayout> Hozzunk l\u00e9tre a hi\u00e1nyz\u00f3 dimen er\u0151forr\u00e1sokat ( Alt+Enter -> Create dimen value... ), \u00e9rt\u00e9k\u00fck legyen 16dp ! A fel\u00fclet gyakorlatilag egy ViewPager -t tartalmaz, melyben k\u00e9t Fragment -et fogunk megjelen\u00edteni. A TabLayout biztos\u00edtja a Tab jelleg\u0171 fejl\u00e9cet. A DetailsActivity.kt k\u00f3dja legyen a k\u00f6vetkez\u0151: class DetailsActivity : AppCompatActivity () { private lateinit var binding : ActivityDetailsBinding private var city : String? = null companion object { private const val TAG = \"DetailsActivity\" const val EXTRA_CITY_NAME = \"extra.city_name\" } override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDetailsBinding . inflate ( layoutInflater ) setContentView ( binding . root ) city = intent . getStringExtra ( EXTRA_CITY_NAME ) supportActionBar ?. title = getString ( R . string . weather , city ) supportActionBar ?. setDisplayHomeAsUpEnabled ( true ) } override fun onResume () { super . onResume () } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { if ( item . itemId == android . R . id . home ) { finish () return true } return super . onOptionsItemSelected ( item ) } } Cser\u00e9lj\u00fck le a strings.xml -ben a weather sz\u00f6veges er\u0151forr\u00e1st: <string name= \"weather\" > Weather in %s </string> A string er\u0151forr\u00e1sba \u00edrt %s jel\u00f6l\u0151 haszn\u00e1lat\u00e1val lehet\u0151v\u00e9 v\u00e1lik egy String argumentum beilleszt\u00e9se a stringbe, ahogy a fenti k\u00f3dr\u00e9szletben l\u00e1thatjuk. Figyelj\u00fck meg, hogy a DetailsActivity hogyan \u00e1ll\u00edtja be az ActionBar c\u00edm\u00e9t a param\u00e9ter\u00fcl kapott v\u00e1ros nev\u00e9vel, illetve \u00e9s azt, hogy az ActionBar bal fels\u0151 sark\u00e1ban a vissza gomb kezel\u00e9se hogyan ker\u00fclt megval\u00f3s\u00edt\u00e1sra. Val\u00f3s\u00edtsuk meg a CityActivity onCitySelected(\u2026) f\u00fcggv\u00e9ny\u00e9ben azt, hogy egy v\u00e1rosn\u00e9v kiv\u00e1laszt\u00e1sakor a DetailsActivity megfelel\u0151en felparam\u00e9terezve induljon el: override fun onCitySelected ( city : String? ) { val showDetailsIntent = Intent () showDetailsIntent . setClass ( this @CityActivity , DetailsActivity :: class . java ) showDetailsIntent . putExtra ( DetailsActivity . EXTRA_CITY_NAME , city ) startActivity ( showDetailsIntent ) } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st, kattintsunk egy v\u00e1ros nev\u00e9re! 3. H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Modell oszt\u00e1lyok l\u00e9trehoz\u00e1sa \u00b6 A modell oszt\u00e1lyok sz\u00e1m\u00e1ra a hu.bme.aut.weatherinfo package-ben hozzunk l\u00e9tre \u00faj package-et model n\u00e9ven. A model package-ben hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt WeatherData n\u00e9ven: data class WeatherData ( var coord : Coord , var weather : List < Weather >? = null , var base : String , var main : MainWeatherData? = null , var visibility : Int , var wind : Wind? = null , var clouds : Cloud , var dt : Int , var sys : Sys , var timezone : Int , var id : Int , var name : String , var cod : Int ) Az id\u0151j\u00e1r\u00e1s szolg\u00e1ltat\u00e1st\u00f3l kapott JSON v\u00e1lasz alapj\u00e1n egy ilyen WeatherData p\u00e9ld\u00e1ny fog l\u00e9trej\u00f6nni a Retrofit \u00e9s a Gson egy\u00fcttm\u0171k\u00f6d\u00e9s\u00e9nek k\u00f6sz\u00f6nhet\u0151en. A model package-ben hozzuk l\u00e9tre a Weather oszt\u00e1lyt: data class Weather ( val id : Long = 0 , val main : String? = null , val description : String? = null , val icon : String? = null ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a MainWeatherData oszt\u00e1lyt: data class MainWeatherData ( val temp : Float = 0f , val pressure : Float = 0f , val humidity : Float = 0f , val temp_min : Float = 0f , val temp_max : Float = 0f ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Coord oszt\u00e1lyt: data class Coord ( var lon : Float = 0f , var lat : Float = 0f ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Cloud oszt\u00e1lyt: data class Cloud ( var all : Int = 0 ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Sys oszt\u00e1lyt: data class Sys ( var type : Int = 0 , var id : Int = 0 , var country : String? = null , var sunrise : Int = 0 , var sunset : Int = 0 ) V\u00e9g\u00fcl hozzuk l\u00e9tre a Wind oszt\u00e1lyt is: class Wind ( val speed : Float = 0f , val deg : Float = 0f ) A details package -ben hozzuk l\u00e9tre a WeatherDataHolder interf\u00e9szt: interface WeatherDataHolder { fun getWeatherData (): WeatherData? } A WeatherDataHolder -en kereszt\u00fcl fogj\u00e1k lek\u00e9rni a Fragment -ek az Activity -t\u0151l az id\u0151j\u00e1r\u00e1s adatokat. Vegy\u00fcnk fel egy WeatherData t\u00edpus\u00fa tagv\u00e1ltoz\u00f3t a DetailsActiviy -be: private var weatherData : WeatherData? = null M\u00f3dos\u00edtsuk \u00fagy a DetailsActivity -t, hogy implement\u00e1lja a WeatherDataHolder interf\u00e9szt: class DetailsActivity : AppCompatActivity (), WeatherDataHolder { Implement\u00e1ljuk a sz\u00fcks\u00e9ges f\u00fcggv\u00e9nyt: override fun getWeatherData (): WeatherData? { return weatherData } A haszn\u00e1lt weatherData v\u00e1ltoz\u00f3nak fogunk k\u00e9s\u0151bb \u00e9rt\u00e9ket adni, amikor vissza\u00e9rkezett az \u00e9rt\u00e9ke a h\u00e1l\u00f3zati h\u00edv\u00e1s eredm\u00e9nyek\u00e9nt. A ViewPager k\u00e9t lapj\u00e1n lev\u0151 Fragment -ek a WeatherDataHolder interf\u00e9szen kereszt\u00fcl fogj\u00e1k lek\u00e9rni az Activity -t\u0151l a weatherData objekutmot a megjelen\u00edt\u00e9shez. A h\u00e1l\u00f3zati r\u00e9teg megval\u00f3s\u00edt\u00e1sa \u00b6 A hu.bme.aut.weatherinfo package-ben hozzuk l\u00e9tre egy network nev\u0171 package-et, amely a h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3hoz kapcsol\u00f3d\u00f3 oszt\u00e1lyokat fogja tartalmazni. A network package-en bel\u00fcl hozzuk l\u00e9tre egy WeatherApi nev\u0171 interf\u00e9szt. interface WeatherApi { @GET ( \"/data/2.5/weather\" ) fun getWeather ( @Query ( \"q\" ) cityName : String? , @Query ( \"units\" ) units : String? , @Query ( \"appid\" ) appId : String? ): Call < WeatherData?> ? } L\u00e1that\u00f3, hogy annot\u00e1ci\u00f3k alkalmaz\u00e1s\u00e1val tuduk jelezni, hogy az adott f\u00fcggv\u00e9nyh\u00edv\u00e1s milyen h\u00e1l\u00f3zati h\u00edv\u00e1snak fog megfelelni. A @GET annot\u00e1ci\u00f3 HTTP GET k\u00e9r\u00e9st jelent, a param\u00e9terk\u00e9nt adott string pedig azt jelzi, hogy hogy a szerver alap URL -\u00e9hez k\u00e9pest melyik v\u00e9gpontra szeretn\u00e9nk k\u00fcldeni a k\u00e9r\u00e9st. Hasonl\u00f3 m\u00f3don tudjuk le\u00edrni a t\u00f6bbi HTTP k\u00e9r\u00e9s t\u00edpust is: @POST, @UPDATE, @PATCH, @DELETE A f\u00fcggv\u00e9ny parem\u00e9tereit a @Query annot\u00e1ci\u00f3val l\u00e1ttuk el. Ez azt jelenti, hogy a Retrofit az adott param\u00e9ter \u00e9rt\u00e9k\u00e9t a k\u00e9r\u00e9shez f\u0171zi query param\u00e9terk\u00e9nt az annot\u00e1ci\u00f3ban megadott kulccsal. Tov\u00e1bbi eml\u00edt\u00e9sre m\u00e9lt\u00f3 annot\u00e1ci\u00f3k a teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl: @HEAD, @Multipart, @Field A h\u00e1l\u00f3zati h\u00edv\u00e1st jel\u00f6l\u0151 interf\u00e9sz f\u00fcggv\u00e9ny visszat\u00e9r\u00e9si \u00e9rt\u00e9ke egy Call<WeatherData> t\u00edpus\u00fa objektum lesz. Ez egy olyan h\u00e1l\u00f3zati h\u00edv\u00e1st \u00edr le, aminek a v\u00e1lasza WeatherData t\u00edpus\u00fa objektumm\u00e1 alak\u00edthat\u00f3. Hozzunk l\u00e9tre a network package-ben egy NetworkManager oszt\u00e1lyt: object NetworkManager { private val retrofit : Retrofit private val weatherApi : WeatherApi private const val SERVICE_URL = \"https://api.openweathermap.org\" private const val APP_ID = \"ide_jon_a_token\" init { retrofit = Retrofit . Builder () . baseUrl ( SERVICE_URL ) . client ( OkHttpClient . Builder (). build ()) . addConverterFactory ( GsonConverterFactory . create ()) . build () weatherApi = retrofit . create ( WeatherApi :: class . java ) } fun getWeather ( city : String? ): Call < WeatherData?> ? { return weatherApi . getWeather ( city , \"metric\" , APP_ID ) } } Ez az oszt\u00e1ly lesz felel\u0151s a h\u00e1l\u00f3zati k\u00e9r\u00e9sek lebonyol\u00edt\u00e1s\u00e1\u00e9rt. Egyetlen p\u00e9ld\u00e1nyra lesz sz\u00fcks\u00e9g\u00fcnk bel\u0151le, \u00edgy singleton k\u00e9nt implement\u00e1ltuk. Konstansokban t\u00e1roljuk a szerver alap c\u00edm\u00e9t, valamint a szolg\u00e1ltat\u00e1s haszn\u00e1lat\u00e1hoz sz\u00fcks\u00e9ges API kulcsot. A Retrofit.Builder() h\u00edv\u00e1ssal k\u00e9rhet\u00fcnk egy parem\u00e9terehzet\u0151 Builder p\u00e9ld\u00e1nyt. Ebben adhatjuk meg a h\u00e1l\u00f3zati h\u00edv\u00e1saink tulajdons\u00e1gait. Jelen p\u00e9ld\u00e1ban be\u00e1ll\u00edtjuk az el\u00e9rni k\u00edv\u00e1nt szolg\u00e1ltat\u00e1s c\u00edm\u00e9t, a HTTP kliens implement\u00e1ci\u00f3t ( OkHttp ), valamint a JSON \u00e9s objektum reprezent\u00e1ci\u00f3k k\u00f6z\u00f6tti konvertert (Gson). A WeatherApi interf\u00e9szb\u0151l a Builder -rel l\u00e9trehozott Retrofit p\u00e9ld\u00e1ny seg\u00edts\u00e9g\u00e9vel tudjuk elk\u00e9rni a ford\u00edt\u00e1si id\u0151ben gener\u00e1lt, param\u00e9terezett implement\u00e1ci\u00f3t. A retrofit.create(WeatherApi.class) h\u00edv\u00e1s eredm\u00e9nyek\u00e9nt kapott objektum megval\u00f3s\u00edtja a WeatherApi interf\u00e9szt. Ha ezen az objektumon megh\u00edvjuk a getWeather(...) f\u00fcggv\u00e9nyt, akkor megt\u00f6rt\u00e9nik az \u00e1ltalunk az interf\u00e9szben defini\u00e1lt h\u00e1l\u00f3zati h\u00edv\u00e1s. Az APP_ID param\u00e9tert elfedj\u00fck az id\u0151j\u00e1r\u00e1st lek\u00e9rdez\u0151 oszt\u00e1lyok el\u0151l, ez\u00e9rt a NetworkManager is tartalmaz egy getWeather(...) f\u00fcggv\u00e9nyt, ami a WeatherApi implement\u00e1ci\u00f3ba h\u00edv tov\u00e1bb. Cser\u00e9lj\u00fck le az APP_ID \u00e9rt\u00e9k\u00e9t az OpenWeatherMap oldalon kapott saj\u00e1t API kulcsunkra! 4. A h\u00e1l\u00f3zati r\u00e9teg bek\u00f6t\u00e9se a r\u00e9szletez\u0151 n\u00e9zetbe (1 pont) \u00b6 A modell elemek \u00e9s a h\u00e1l\u00f3zati r\u00e9teg megval\u00f3s\u00edt\u00e1sa ut\u00e1n a r\u00e9szletez\u0151 n\u00e9zetet fogjuk a specifik\u00e1ci\u00f3nak megfelel\u0151en implement\u00e1lni, majd bek\u00f6tj\u00fck a h\u00e1l\u00f3zati r\u00e9teget is. A r\u00e9szletez\u0151 n\u00e9zetek tov\u00e1bbfejleszt\u00e9se \u00b6 A ViewPager megfelel\u0151 m\u0171k\u00f6d\u00e9s\u00e9hez l\u00e9tre kell hoznunk egy FragmentStateAdapter -b\u0151l sz\u00e1rmaz\u00f3 oszt\u00e1lyt a details package-ben, ami az eddig l\u00e1tott adapterekhez hasonl\u00f3an azt hat\u00e1rozza meg, hogy milyen elemek jelenjenek meg a hozz\u00e1juk tartoz\u00f3 n\u00e9zeten (jelen esetben az elemek Fragment -ek lesznek): class DetailsPagerAdapter ( fragmentActivity : FragmentActivity ) : FragmentStateAdapter ( fragmentActivity ) { companion object { private const val NUM_PAGES : Int = 2 } override fun createFragment ( position : Int ): Fragment { return when ( position ) { 0 -> DetailsMainFragment () 1 -> DetailsMoreFragment () else -> DetailsMainFragment () } } override fun getItemCount (): Int = NUM_PAGES } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 Fragment -eket a hozz\u00e1juk tartoz\u00f3 n\u00e9zetekkel egy\u00fctt: DetailsMainFragment \u00b6 res/layout/fragment_details_main.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:id= \"@+id/tvMain\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" tools:text= \"Clear\" /> <TextView android:id= \"@+id/tvDescription\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dp\" tools:text= \"Clear sky\" /> <ImageView android:id= \"@+id/ivIcon\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_marginTop= \"16dp\" /> </LinearLayout> A details package-ben a DetailsMainFragment : class DetailsMainFragment : Fragment () { private lateinit var binding : FragmentDetailsMainBinding private var weatherDataHolder : WeatherDataHolder? = null override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) weatherDataHolder = if ( activity is WeatherDataHolder ) { activity as WeatherDataHolder? } else { throw RuntimeException ( \"Activity must implement WeatherDataHolder interface!\" ) } } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { binding = FragmentDetailsMainBinding . inflate ( LayoutInflater . from ( context )) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) if ( weatherDataHolder ?. getWeatherData () != null ) { displayWeatherData () } } private fun displayWeatherData () { val weather = weatherDataHolder ?. getWeatherData () ?. weather ?. first () binding . tvMain . text = weather ?. main binding . tvDescription . text = weather ?. description Glide . with ( this ) . load ( \"https://openweathermap.org/img/w/ ${ weather ?. icon } .png\" ) . transition ( DrawableTransitionOptions (). crossFade ()) . into ( binding . ivIcon ) } } Figyelj\u00fck meg, hogy hogy haszn\u00e1ljuk a k\u00f3dban a Glide libraryt! Az OpenWeatherMap API-t\u00f3l a k\u00e9pek lek\u00e9rhet\u0151k a visszakapott adatok alapj\u00e1n, pl: https://openweathermap.org/img/w/10d.png DetailsMoreFragment \u00b6 res/layout/fragment_details_more.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <TableLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:padding= \"16dp\" android:stretchColumns= \"0\" > <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/temperature\" /> <TextView android:id= \"@+id/tvTemperature\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"25 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/min_temperature\" /> <TextView android:id= \"@+id/tvMinTemp\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"24 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/max_temperature\" /> <TextView android:id= \"@+id/tvMaxTemp\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"26 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/pressure\" /> <TextView android:id= \"@+id/tvPressure\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"100 Pa\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/humidity\" /> <TextView android:id= \"@+id/tvHumidity\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"50 %\" /> </TableRow> </TableLayout> A details package-ben a DetailsMoreFragment : class DetailsMoreFragment : Fragment () { private lateinit var binding : FragmentDetailsMoreBinding private var weatherDataHolder : WeatherDataHolder? = null override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) weatherDataHolder = if ( activity is WeatherDataHolder ) { activity as WeatherDataHolder? } else { throw RuntimeException ( \"Activity must implement WeatherDataHolder interface!\" ) } } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentDetailsMoreBinding . inflate ( LayoutInflater . from ( context )) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) if ( weatherDataHolder ?. getWeatherData () != null ) { showWeatherData () } } private fun showWeatherData () { val weatherData = weatherDataHolder !! . getWeatherData () binding . tvTemperature . text = weatherData ?. main ?. temp . toString () binding . tvMinTemp . text = weatherData ?. main ?. temp_min . toString () binding . tvMaxTemp . text = weatherData ?. main ?. temp_max . toString () binding . tvPressure . text = weatherData ?. main ?. pressure . toString () binding . tvHumidity . text = weatherData ?. main ?. humidity . toString () } } Figyelj\u00fck meg, hogyan ellen\u0151rzi a DetailsMainFragment \u00e9s a DetailsMoreFragment azt, hogy az Activity implement\u00e1lja-e a WeatherDataHolder interf\u00e9szt. Fontos, hogy ezt a k\u00e9t Fragment majd csak azut\u00e1n ker\u00fcl a DetailsActivity -re a ViewPager -en kereszt\u00fcl, amikor az adatokat lek\u00e9r\u0151 h\u00e1l\u00f3zati k\u00e9r\u00e9s m\u00e1r adott vissza eredm\u00e9nyt. Ideiglenesen a DetailsActivity onResume() f\u00fcggv\u00e9nye legyen az al\u00e1bbi: override fun onResume () { super . onResume () val detailsPagerAdapter = DetailsPagerAdapter ( this ) binding . mainViewPager . adapter = detailsPagerAdapter TabLayoutMediator ( binding . tabLayout , binding . mainViewPager ) { tab , position -> tab . text = when ( position ) { 0 -> getString ( R . string . main ) 1 -> getString ( R . string . details ) else -> \"\" } }. attach () } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st, kattintsunk egy v\u00e1rosra! jelenleg m\u00e9g nem jelennek meg val\u00f3s adatok, mivel m\u00e9g nem k\u00f6t\u00f6tt\u00fck be a az adatok lek\u00e9r\u00e9s\u00e9\u00e9rt felel\u0151s h\u00edv\u00e1st. H\u00e1l\u00f3zati h\u00edv\u00e1s bek\u00f6t\u00e9se \u00b6 Az id\u0151j\u00e1r\u00e1s adatok lek\u00e9rdez\u00e9s\u00e9nek bek\u00f6t\u00e9s\u00e9hez implement\u00e1ljunk egy loadWeatherData() nev\u0171 f\u00fcggv\u00e9nyt a DetailsActivity -ben: private fun loadWeatherData () { NetworkManager . getWeather ( city ) ?. enqueue ( object : Callback < WeatherData?> { override fun onResponse ( call : Call < WeatherData?> , response : Response < WeatherData?> ) { Log . d ( TAG , \"onResponse: \" + response . code ()) if ( response . isSuccessful ) { displayWeatherData ( response . body ()) } else { Toast . makeText ( this @DetailsActivity , \"Error: \" + response . message (), Toast . LENGTH_LONG ). show () } } override fun onFailure ( call : Call < WeatherData?> , throwable : Throwable ) { throwable . printStackTrace () Toast . makeText ( this @DetailsActivity , \"Network request error occured, check LOG\" , Toast . LENGTH_LONG ). show () } }) } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 displayWeatherData(...) f\u00fcggv\u00e9nyt, ami sikeres API h\u00edv\u00e1s eset\u00e9n megjelen\u00edti az eredm\u00e9nyt: private fun displayWeatherData ( receivedWeatherData : WeatherData?) { weatherData = receivedWeatherData val detailsPagerAdapter = DetailsPagerAdapter ( this ) binding . mainViewPager . adapter = detailsPagerAdapter } A DetailsActivity onResume() f\u00fcggv\u00e9ny\u00e9ben h\u00edvjuk meg a loadWeatherData() f\u00fcggv\u00e9nyt: override fun onResume () { super . onResume () ... loadWeatherData () } Futtassuk az alkalmaz\u00e1st \u00e9s figyelj\u00fck meg a m\u0171k\u00f6d\u00e9s\u00e9t! Pr\u00f3b\u00e1ljuk ki azt is, hogy mi t\u00f6rt\u00e9nik akkor, ha megszak\u00edtjuk a futtat\u00f3 eszk\u00f6z internet kapcsolat\u00e1t \u00e9s megpr\u00f3b\u00e1ljuk megnyitni a r\u00e9szletez\u0151 n\u00e9zetet! 5. \u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont) \u00b6 Val\u00f3s\u00edtsuk meg a v\u00e1rosok t\u00f6rl\u00e9s\u00e9t a Remove gomb megnyom\u00e1s\u00e1nak hat\u00e1s\u00e1ra.","title":"Labor 07 - Weather Info alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/07-android-network/#labor-07-weather-info-alkalmazas-keszitese","text":"","title":"Labor 07 - Weather Info alkalmaz\u00e1s k\u00e9sz\u00edt\u00e9se"},{"location":"laborok/07-android-network/#bevezeto","text":"A labor sor\u00e1n egy id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3kat megjelen\u00edt\u0151 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. A kor\u00e1bban l\u00e1tott UI elemek haszn\u00e1lata mellett l\u00e1thatunk majd p\u00e9ld\u00e1t h\u00e1l\u00f3zati kommunk\u00e1ci\u00f3 hat\u00e9kony megval\u00f3s\u00edt\u00e1s\u00e1ra is a Retrofit library felhaszn\u00e1l\u00e1s\u00e1val. Az alkalmaz\u00e1s v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg egy RecyclerView -ban, egy kiv\u00e1lasztott v\u00e1ros r\u00e9szletes id\u0151j\u00e1r\u00e1s adatait pedig az OpenWeatherMap REST API-j\u00e1nak seg\u00edts\u00e9g\u00e9vel k\u00e9rdezi le. A r\u00e9szletez\u0151 n\u00e9zeten egy ViewPager -ben k\u00e9t Fragment -en lehet megtekinteni a r\u00e9szleteket. \u00daj v\u00e1ros hozz\u00e1ad\u00e1s\u00e1ra egy FloatingActionButton megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g. REST = **Re**presentational **S**tate **T**ransfer Felhaszn\u00e1lt technol\u00f3gi\u00e1k: Activity Fragment RecyclerView ViewPager Retrofit Gson Glide","title":"Bevezet\u0151"},{"location":"laborok/07-android-network/#feltoltes","text":"Az elk\u00e9sz\u00fclt megold\u00e1st .zip form\u00e1tumban (File... -> Export to Zip File...) kell felt\u00f6lteni a t\u00e1rgy oldal\u00e1n, ahol a laborvezet\u0151 tudja \u00e9rt\u00e9kelni.","title":"Felt\u00f6lt\u00e9s"},{"location":"laborok/07-android-network/#az-alkalmazas-specifikacioja","text":"Az alkalmaz\u00e1s k\u00e9t Activity -b\u0151l \u00e1ll. Az alkalmaz\u00e1s indul\u00e1sakor megjelen\u0151 Activity a felhaszn\u00e1l\u00f3 \u00e1ltal felvett v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg. Minden lista elemhez tartozik egy Remove gomb, aminek a megnyom\u00e1s\u00e1ra az adott v\u00e1ros t\u00f6rl\u0151dik a list\u00e1b\u00f3l. \u00daj v\u00e1rost a n\u00e9zet jobb als\u00f3 sark\u00e1ban tal\u00e1lhat\u00f3 FloatingActionButton megnyom\u00e1s\u00e1val lehet felvenni. Egy v\u00e1rosra val\u00f3 kattint\u00e1s hat\u00e1s\u00e1ra megny\u00edlik egy \u00faj Activity k\u00e9t Fragment -tel, amik k\u00f6z\u00f6tt ViewPager -rel lehet v\u00e1ltani. Az els\u0151 Fragment a kiv\u00e1lasztott v\u00e1ros id\u0151j\u00e1r\u00e1s\u00e1nak le\u00edr\u00e1s\u00e1t \u00e9s az ahhoz tartoz\u00f3 ikont jelen\u00edti meg. A m\u00e1sodik Fragment -en a v\u00e1rosban m\u00e9rt \u00e1tlagos, minimum \u00e9s maximum h\u0151m\u00e9rs\u00e9klet, a l\u00e9gnyom\u00e1s \u00e9s a p\u00e1ratartalom \u00e9rt\u00e9ke l\u00e1that\u00f3.","title":"Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja"},{"location":"laborok/07-android-network/#laborfeladatok","text":"A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani. V\u00e1ros lista megval\u00f3s\u00edt\u00e1sa: 1 pont R\u00e9szletez\u0151 n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba: 1 pont H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa: 1 pont A h\u00e1l\u00f3zati r\u00e9teg bek\u00f6t\u00e9se a r\u00e9szletez\u0151 n\u00e9zetbe: 1 pont \u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa: 1 pont A labor sor\u00e1n egy komplex id\u0151j\u00e1r\u00e1s alkalmaz\u00e1s k\u00e9sz\u00fcl el. A labor sz\u0171k\u00f6s id\u0151kerete miatt sz\u00fcks\u00e9g lesz nagyobb k\u00f3dblokkok m\u00e1sol\u00e1s\u00e1ra, azonban minden esetben figyelj\u00fcnk a laborvezet\u0151 magyar\u00e1zat\u00e1ra, hogy a k\u00f3dr\u00e9szek \u00e9rthet\u0151ek legyenek. A c\u00e9l a bemutatott k\u00f3dok meg\u00e9rt\u00e9se \u00e9s a felhaszn\u00e1lt libraryk haszn\u00e1lat\u00e1nak elsaj\u00e1t\u00edt\u00e1sa. Eln\u00e9z\u00e9st k\u00e9r\u00fcnk az eddigiekn\u00e9l nagyobb k\u00f3d blokkok\u00e9rt, de egy ilyen, bemutat\u00f3 jelleg\u0171 feladat kisebb m\u00e9retben nem oldhat\u00f3 meg, illetve a labor elvesz\u00edten\u00e9 a l\u00e9nyeg\u00e9t, ha csak egy \u201ehello world\u201d h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3s lek\u00e9r\u00e9st val\u00f3s\u00edtan\u00e1nk meg. K\u00f6sz\u00f6nj\u00fck a meg\u00e9rt\u00e9st.","title":"Laborfeladatok"},{"location":"laborok/07-android-network/#projekt-letrehozasa","text":"Hozzunk l\u00e9tre egy projektet Android Studioban. Az alkalmaz\u00e1st telefonra \u00e9s tabletre k\u00e9sz\u00edtj\u00fck, teh\u00e1t v\u00e1lasszuk ki a Phone and Tablet lehet\u0151s\u00e9get, No Activity opci\u00f3val! Az alkalmaz\u00e1st WeatherInfo n\u00e9ven hozzuk l\u00e9tre, a package name legyen hu.bme.aut.weatherinfo ! minimum SDK-nak pedig v\u00e1lasszuk az alap\u00e9rtelmezett API 21 -et! Els\u0151 Activity -k\u00e9nt hozzunk l\u00e9tre egy Basic Activityt , \u00e9s nevezz\u00fck el CityActivity -nek, legyen ez a Launcher Activity -nk majd kattintsunk a Finish gombra! Mindenek el\u0151tt kapcsoljuk be a ViewBinding -ot. Ehhez az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban az android blokkon bel\u00fclre illessz\u00fck be az enged\u00e9lyez\u0151 k\u00f3dr\u00e9szletet (majd kattintsunk a jobb fel\u00fcl megjelen\u0151 Sync Now gombra). buildFeatures { viewBinding true } T\u00f6lts\u00fck le \u00e9s t\u00f6m\u00f6r\u00edts\u00fck ki az alkalmaz\u00e1shoz sz\u00fcks\u00e9ges er\u0151forr\u00e1sokat , majd m\u00e1soljuk be \u0151ket a projekt app/src/main/res mapp\u00e1j\u00e1ba (Studio-ban a res mappa kijel\u00f6l\u00e9se ut\u00e1n Ctrl+V )! Az app modulhoz tartoz\u00f3 build.gradle f\u00e1jlban a dependencies blokkhoz adjuk hozz\u00e1 a Retrofit \u00e9s Glide libraryket: dependencies { //... def retrofit_version = \"2.9.0\" implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\" implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\" implementation 'com.github.bumptech.glide:glide:4.12.0' annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0' } Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync now gombra. A Retrofit a fejleszt\u0151 \u00e1ltal le\u00edrt egyszer\u0171, megfelel\u0151en annot\u00e1lt interf\u00e9szek alapj\u00e1n k\u00f3dgener\u00e1l\u00e1ssal \u00e1ll\u00edt el\u0151 HTTP hiv\u00e1sokat lebonyol\u00edt\u00f3 implement\u00e1ci\u00f3t. Kezeli az URL-ben inline m\u00f3don adott param\u00e9tereket, az URL queryket, stb. T\u00e1mogatja a legn\u00e9pszer\u0171bb szerializ\u00e1l\u00f3/deszerializ\u00e1l\u00f3 megold\u00e1sokat is (pl.: Gson , Moshi , Simple XML , stb.), amikkel Java/Kotlin objektumok, \u00e9s JSON vagy XML form\u00e1tum\u00fa adatok k\u00f6z\u00f6tti k\u00e9tir\u00e1ny\u00fa \u00e1talak\u00edt\u00e1s val\u00f3s\u00edthat\u00f3 meg. A laboron ezek k\u00f6z\u00fcl a Gsont fogjuk haszn\u00e1lni a JSON-ban \u00e9rkez\u0151 id\u0151j\u00e1r\u00e1s adatok konvert\u00e1l\u00e1s\u00e1ra. A Glide egy hat\u00e9kony k\u00e9pbet\u00f6lt\u00e9st \u00e9s -cache-el\u00e9st megval\u00f3s\u00edt\u00f3 library Androidra. Egyszer\u0171 interf\u00e9sze \u00e9s hat\u00e9konys\u00e1ga miatt haszn\u00e1ljuk. Az alkalmaz\u00e1sban sz\u00fcks\u00e9g\u00fcnk lesz internet el\u00e9r\u00e9sre. Vegy\u00fck fel az AndroidManifest.xml \u00e1llom\u00e1nyban az Internet permission -t az application tagen k\u00edv\u00fclre : <uses-permission android:name= \"android.permission.INTERNET\" /> Androidon API 23-t\u00f3l (6.0, Marshmallow) az enged\u00e9lyek k\u00e9t csoportba lettek osztva. A normal csoportba tartoz\u00f3 enged\u00e9lyeket el\u00e9g felvenni az AndroidManifest.xml f\u00e1jlba az el\u0151bb l\u00e1tott m\u00f3don \u00e9s az alkalmaz\u00e1s automatikusan megkapja \u0151ket. A dangerous csoportba tartoz\u00f3 enged\u00e9lyek eset\u00e9n ez m\u00e1r nem el\u00e9g, fut\u00e1s id\u0151ben explicit m\u00f3don el kell k\u00e9rni \u0151ket a felhaszn\u00e1l\u00f3t\u00f3l, aki ak\u00e1rmikor meg is tagadhatja az alkalmaz\u00e1st\u00f3l a k\u00e9rt enged\u00e9lyt. Az enged\u00e9lyek kezel\u00e9s\u00e9r\u0151l b\u0151vebben a developer.android.com oldalon lehet t\u00e1j\u00e9koz\u00f3dni Vegy\u00fck fel az al\u00e1bbi sz\u00f6veges er\u0151forr\u00e1sokat a res/values/strings.xml -be: <resources> <string name= \"app_name\" > WeatherInfo </string> <string name= \"action_settings\" > Settings </string> <string name= \"title_activity_city\" > Cities </string> <string name= \"remove\" > Remove </string> <string name= \"new_city\" > New city </string> <string name= \"new_city_hint\" > City </string> <string name= \"ok\" > OK </string> <string name= \"cancel\" > Cancel </string> <string name= \"title_activity_details\" > DetailsActivity </string> <string name= \"weather\" > Weather </string> <string name= \"temperature\" > Temperature </string> <string name= \"min_temperature\" > Min temperature </string> <string name= \"max_temperature\" > Max temperature </string> <string name= \"pressure\" > Pressure </string> <string name= \"humidity\" > Humidity </string> <string name= \"main\" > Main </string> <string name= \"details\" > Details </string> </resources>","title":"Projekt l\u00e9trehoz\u00e1sa"},{"location":"laborok/07-android-network/#openweathermap-api-kulcs","text":"Regisztr\u00e1ljunk saj\u00e1t felhaszn\u00e1l\u00f3t az OpenWeatherMap oldalon, \u00e9s hozzunk l\u00e9tre egy API kulcsot, aminek a seg\u00edts\u00e9g\u00e9vel haszn\u00e1lhatjuk majd a szolg\u00e1ltat\u00e1st az alkalmaz\u00e1sunkban! Kattintsunk a Sign in majd a Create an account gombra. T\u00f6lts\u00fck ki a regisztr\u00e1ci\u00f3s formot A Company mez\u0151 \u00e9rt\u00e9ke legyen \"BME\", a Purpose \u00e9rt\u00e9ke legyen \"Education/Science\" Sikeres regisztr\u00e1ci\u00f3 ut\u00e1n az API keys tabon tal\u00e1lhat\u00f3 az alap\u00e9rtelmezettk\u00e9nt l\u00e9trehozott API kulcs. A kapott API kulcsra k\u00e9s\u0151bb sz\u00fcks\u00e9g\u00fcnk lesz az id\u0151j\u00e1r\u00e1s adatokat lek\u00e9r\u0151 API h\u00edv\u00e1sn\u00e1l.","title":"OpenWeatherMap API kulcs"},{"location":"laborok/07-android-network/#1-varoslista-megvalositasa-1-pont","text":"Val\u00f3s\u00edtsuk meg az egy RecyclerView -b\u00f3l \u00e1ll\u00f3, v\u00e1rosok list\u00e1j\u00e1t megjelen\u00edt\u0151 CityActivity -t! A v\u00e1ros nev\u00e9re kattintva jelenik majd meg egy r\u00e9szletez\u0151 n\u00e9zet ( DetailsAcitivity ), ahol az id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3k let\u00f6lt\u00e9se fog t\u00f6rt\u00e9nni. \u00daj v\u00e1ros felv\u00e9tel\u00e9re egy FloatingActionButton fog szolg\u00e1lni. Cser\u00e9lj\u00fck le az activity_city.xml tartalm\u00e1t egy RecyclerView -ra \u00e9s egy FloatingActionButton -re: <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".CityActivity\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/mainRecyclerView\" android:layout_width= \"0dp\" android:layout_height= \"0dp\" app:layout_behavior= \"@string/appbar_scrolling_view_behavior\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintEnd_toEndOf= \"parent\" app:layout_constraintStart_toStartOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> <com.google.android.material.floatingactionbutton.FloatingActionButton android:id= \"@+id/fab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"bottom|end\" android:layout_margin= \"24dp\" android:src= \"@drawable/ic_add_white_36dp\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintEnd_toEndOf= \"parent\" /> </androidx.constraintlayout.widget.ConstraintLayout> Az egyes funkci\u00f3khoz tartoz\u00f3 oszt\u00e1lyokat k\u00fcl\u00f6n package-ekbe fogjuk szervezni. El\u0151fordulhat, hogy a m\u00e1sol\u00e1sok miatt az Android Studio nem ismeri fel egyb\u0151l a package szerkezetet, \u00edgy ha ilyen probl\u00e9m\u00e1nk lenne, az oszt\u00e1ly n\u00e9ven \u00e1llva Alt+Enter ut\u00e1n \u00e1ll\u00edtassuk be a megfelel\u0151 package nevet. A hu.bme.aut.weatherinfo package-ben hozzunk l\u00e9tre egy feature nev\u0171 package-et. A feature package-ben hozzunk l\u00e9tre egy city nev\u0171 package-et. Drag and drop m\u00f3dszerrel helyezz\u00fck \u00e1t a CityActivity -t a city package -be, a felugr\u00f3 dial\u00f3gusban pedig kattintsunk a Refactor gombra. T\u00f6r\u00f6lj\u00fck a gener\u00e1lt k\u00e9t Fragment-et \u00e9s a hozz\u00e1juk tartoz\u00f3 layout file-okat, valamint a res/navigation mappa tartalm\u00e1t. A CityActivity k\u00f3dj\u00e1t cser\u00e9lj\u00fck le a k\u00f6vetkez\u0151re: class CityActivity : AppCompatActivity (), CityAdapter . OnCitySelectedListener , AddCityDialogFragment . AddCityDialogListener { private lateinit var binding : ActivityCityBinding private lateinit var adapter : CityAdapter override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityCityBinding . inflate ( layoutInflater ) setContentView ( binding . root ) initFab () initRecyclerView () } private fun initFab () { binding . fab . setOnClickListener { // TODO: Show new city dialog } } private fun initRecyclerView () { binding . mainRecyclerView . layoutManager = LinearLayoutManager ( this ) adapter = CityAdapter ( this ) adapter . addCity ( \"Budapest\" ) adapter . addCity ( \"Debrecen\" ) adapter . addCity ( \"Sopron\" ) adapter . addCity ( \"Szeged\" ) binding . mainRecyclerView . adapter = adapter } override fun onCitySelected ( city : String? ) { // Todo: Start DetailsActivity with the selected city } override fun onCityAdded ( city : String? ) { adapter . addCity ( city !! ) } } A city package-ben hozzuk l\u00e9tre a CityAdapter oszt\u00e1lyt: class CityAdapter ( private val listener : OnCitySelectedListener ) : RecyclerView . Adapter < CityAdapter . CityViewHolder > () { private val cities : MutableList < String > = ArrayList () interface OnCitySelectedListener { fun onCitySelected ( city : String? ) } override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ): CityViewHolder { val view = LayoutInflater . from ( parent . context ). inflate ( R . layout . item_city , parent , false ) return CityViewHolder ( view ) } override fun onBindViewHolder ( holder : CityViewHolder , position : Int ) { val item = cities [ position ] holder . bind ( item ) } override fun getItemCount (): Int = cities . size fun addCity ( newCity : String ) { cities . add ( newCity ) notifyItemInserted ( cities . size - 1 ) } fun removeCity ( position : Int ) { cities . removeAt ( position ) notifyItemRemoved ( position ) if ( position < cities . size ) { notifyItemRangeChanged ( position , cities . size - position ) } } inner class CityViewHolder ( private val itemView : View ) : RecyclerView . ViewHolder ( itemView ) { var binding = ItemCityBinding . bind ( itemView ) var item : String? = null init { binding . root . setOnClickListener { listener . onCitySelected ( item ) } } fun bind ( newCity : String? ) { item = newCity binding . CityItemNameTextView . text = item } } } Hozzuk l\u00e9tre a res/layout mapp\u00e1ban az item_city.xml layoutot: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" android:paddingBottom= \"8dp\" android:paddingLeft= \"16dp\" android:paddingRight= \"16dp\" android:paddingTop= \"8dp\" android:weightSum= \"3\" > <TextView android:id= \"@+id/CityItemNameTextView\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"2\" tools:text= \"Budapest\" /> <Button android:id= \"@+id/CityItemRemoveButton\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:text= \"@string/remove\" /> </LinearLayout> Ig\u00e9ny szerint vizsg\u00e1ljuk meg a laborvezet\u0151vel a CityAdapter oszt\u00e1lyban az al\u00e1bbiakat: - Hogyan t\u00f6rt\u00e9nik a lista tartalmi elemeinek kezel\u00e9se? - Hogyan \u00e9p\u00fcl fel egy lista elem? - Hogyan t\u00f6rt\u00e9nik a lista elemen a kiv\u00e1laszt\u00e1s esem\u00e9nyek kezel\u00e9se? Hogyan \u00e9rtes\u00edtj\u00fck a CityActivity -t egy elem kiv\u00e1laszt\u00e1s\u00e1r\u00f3l? - Hogyan ker\u00fcltek megval\u00f3s\u00edt\u00e1sra az addCity(...) \u00e9s removeCity(\u2026) met\u00f3dusok! A CityActivity -vel kapcsolatos k\u00f6vetkez\u0151 l\u00e9p\u00e9s az \u00faj v\u00e1ros nev\u00e9t bek\u00e9r\u0151 dial\u00f3gus ( DialogFragment ) megval\u00f3s\u00edt\u00e1sa \u00e9s bek\u00f6t\u00e9se. Hozzunk l\u00e9tre egy dialog_new_city.xml nev\u0171 layout f\u00e1jlt a res/layout mapp\u00e1ban a k\u00f6vetkez\u0151 tartalommal: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"24dp\" > <EditText android:id= \"@+id/NewCityDialogEditText\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:hint= \"@string/new_city_hint\" android:inputType= \"text\" /> </LinearLayout> A city package-ben hozzuk l\u00e9tre az AddCityDialogFragment oszt\u00e1lyt: class AddCityDialogFragment : AppCompatDialogFragment () { private lateinit var binding : DialogNewCityBinding private lateinit var listener : AddCityDialogListener interface AddCityDialogListener { fun onCityAdded ( city : String? ) } override fun onAttach ( context : Context ) { super . onAttach ( context ) binding = DialogNewCityBinding . inflate ( LayoutInflater . from ( context )) try { listener = if ( targetFragment != null ) { targetFragment as AddCityDialogListener } else { activity as AddCityDialogListener } } catch ( e : ClassCastException ) { throw RuntimeException ( e ) } } override fun onCreateDialog ( savedInstanceState : Bundle?) : Dialog { return AlertDialog . Builder ( requireContext ()) . setTitle ( R . string . new_city ) . setView ( binding . root ) . setPositiveButton ( R . string . ok ) { _ , _ -> listener . onCityAdded ( binding . NewCityDialogEditText . text . toString () ) } . setNegativeButton ( R . string . cancel , null ) . create () } } Ig\u00e9ny szerint vizsg\u00e1ljuk meg a laborvezet\u0151vel az AddCityDialogFragment implement\u00e1ci\u00f3j\u00e1ban az al\u00e1bbiakat: - Hogyan ellen\u0151rizz\u00fck azt, hogy az Activity , amihez a DialogFragment felcsatol\u00f3dott implement\u00e1lja-e az AddCityDialogListener interf\u00e9szt? - Hogyan ker\u00fcl be\u00e1ll\u00edt\u00e1sra az egyedi layout a DialogFragment -ben? - Hogyan t\u00e9r\u00fcnk vissza a be\u00edrt v\u00e1rosn\u00e9vvel? Szorgalmi feladat otthonra: az alkalmaz\u00e1s ne engedje a v\u00e1ros l\u00e9trehoz\u00e1s\u00e1t, ha a v\u00e1rosn\u00e9v mez\u0151 \u00fcres! Tipp: http://stackoverflow.com/questions/13746412/prevent-dialogfragment-from-dismissing-when-button-is-clicked V\u00e9g\u00fcl eg\u00e9sz\u00edts\u00fck ki a CityActivity initFab(\u2026) f\u00fcggv\u00e9ny\u00e9t \u00fagy, hogy a gombra kattintva jelenjen meg az \u00faj dial\u00f3gus: private fun initFab () { binding . fab . setOnClickListener { AddCityDialogFragment (). show ( supportFragmentManager , AddCityDialogFragment :: class . java . simpleName ) } } Ind\u00edtsuk el az alkalmaz\u00e1st, amely m\u00e1r k\u00e9pes v\u00e1rosnevek bek\u00e9r\u00e9s\u00e9re \u00e9s megjelen\u00edt\u00e9s\u00e9re.","title":"1. V\u00e1roslista megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/07-android-network/#2-reszletezo-nezet-letrehozasa-es-bekotese-a-navigacioba-1-pont","text":"A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben a hu.bme.aut.weatherinfo.feature package-en bel\u00fcl hozzunk l\u00e9tre egy details nev\u0171 packaget. A details package-ben hozzunk l\u00e9tre egy Empty Activity t\u00edpus\u00fa Activity -t DetailsActivity n\u00e9ven. A hozz\u00e1 tartoz\u00f3 activity_details.xml layout k\u00f3dja: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:paddingBottom= \"@dimen/activity_vertical_margin\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" > <com.google.android.material.tabs.TabLayout android:id= \"@+id/tabLayout\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_gravity= \"top\" /> <androidx.viewpager2.widget.ViewPager2 android:id= \"@+id/mainViewPager\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_weight= \"1\" /> </LinearLayout> Hozzunk l\u00e9tre a hi\u00e1nyz\u00f3 dimen er\u0151forr\u00e1sokat ( Alt+Enter -> Create dimen value... ), \u00e9rt\u00e9k\u00fck legyen 16dp ! A fel\u00fclet gyakorlatilag egy ViewPager -t tartalmaz, melyben k\u00e9t Fragment -et fogunk megjelen\u00edteni. A TabLayout biztos\u00edtja a Tab jelleg\u0171 fejl\u00e9cet. A DetailsActivity.kt k\u00f3dja legyen a k\u00f6vetkez\u0151: class DetailsActivity : AppCompatActivity () { private lateinit var binding : ActivityDetailsBinding private var city : String? = null companion object { private const val TAG = \"DetailsActivity\" const val EXTRA_CITY_NAME = \"extra.city_name\" } override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityDetailsBinding . inflate ( layoutInflater ) setContentView ( binding . root ) city = intent . getStringExtra ( EXTRA_CITY_NAME ) supportActionBar ?. title = getString ( R . string . weather , city ) supportActionBar ?. setDisplayHomeAsUpEnabled ( true ) } override fun onResume () { super . onResume () } override fun onOptionsItemSelected ( item : MenuItem ): Boolean { if ( item . itemId == android . R . id . home ) { finish () return true } return super . onOptionsItemSelected ( item ) } } Cser\u00e9lj\u00fck le a strings.xml -ben a weather sz\u00f6veges er\u0151forr\u00e1st: <string name= \"weather\" > Weather in %s </string> A string er\u0151forr\u00e1sba \u00edrt %s jel\u00f6l\u0151 haszn\u00e1lat\u00e1val lehet\u0151v\u00e9 v\u00e1lik egy String argumentum beilleszt\u00e9se a stringbe, ahogy a fenti k\u00f3dr\u00e9szletben l\u00e1thatjuk. Figyelj\u00fck meg, hogy a DetailsActivity hogyan \u00e1ll\u00edtja be az ActionBar c\u00edm\u00e9t a param\u00e9ter\u00fcl kapott v\u00e1ros nev\u00e9vel, illetve \u00e9s azt, hogy az ActionBar bal fels\u0151 sark\u00e1ban a vissza gomb kezel\u00e9se hogyan ker\u00fclt megval\u00f3s\u00edt\u00e1sra. Val\u00f3s\u00edtsuk meg a CityActivity onCitySelected(\u2026) f\u00fcggv\u00e9ny\u00e9ben azt, hogy egy v\u00e1rosn\u00e9v kiv\u00e1laszt\u00e1sakor a DetailsActivity megfelel\u0151en felparam\u00e9terezve induljon el: override fun onCitySelected ( city : String? ) { val showDetailsIntent = Intent () showDetailsIntent . setClass ( this @CityActivity , DetailsActivity :: class . java ) showDetailsIntent . putExtra ( DetailsActivity . EXTRA_CITY_NAME , city ) startActivity ( showDetailsIntent ) } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st, kattintsunk egy v\u00e1ros nev\u00e9re!","title":"2. R\u00e9szletez\u0151 n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba (1 pont)"},{"location":"laborok/07-android-network/#3-halozati-kommunikacio-megvalositasa-1-pont","text":"","title":"3. H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/07-android-network/#modell-osztalyok-letrehozasa","text":"A modell oszt\u00e1lyok sz\u00e1m\u00e1ra a hu.bme.aut.weatherinfo package-ben hozzunk l\u00e9tre \u00faj package-et model n\u00e9ven. A model package-ben hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt WeatherData n\u00e9ven: data class WeatherData ( var coord : Coord , var weather : List < Weather >? = null , var base : String , var main : MainWeatherData? = null , var visibility : Int , var wind : Wind? = null , var clouds : Cloud , var dt : Int , var sys : Sys , var timezone : Int , var id : Int , var name : String , var cod : Int ) Az id\u0151j\u00e1r\u00e1s szolg\u00e1ltat\u00e1st\u00f3l kapott JSON v\u00e1lasz alapj\u00e1n egy ilyen WeatherData p\u00e9ld\u00e1ny fog l\u00e9trej\u00f6nni a Retrofit \u00e9s a Gson egy\u00fcttm\u0171k\u00f6d\u00e9s\u00e9nek k\u00f6sz\u00f6nhet\u0151en. A model package-ben hozzuk l\u00e9tre a Weather oszt\u00e1lyt: data class Weather ( val id : Long = 0 , val main : String? = null , val description : String? = null , val icon : String? = null ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a MainWeatherData oszt\u00e1lyt: data class MainWeatherData ( val temp : Float = 0f , val pressure : Float = 0f , val humidity : Float = 0f , val temp_min : Float = 0f , val temp_max : Float = 0f ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Coord oszt\u00e1lyt: data class Coord ( var lon : Float = 0f , var lat : Float = 0f ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Cloud oszt\u00e1lyt: data class Cloud ( var all : Int = 0 ) Szint\u00e9n a model package-ben hozzuk l\u00e9tre a Sys oszt\u00e1lyt: data class Sys ( var type : Int = 0 , var id : Int = 0 , var country : String? = null , var sunrise : Int = 0 , var sunset : Int = 0 ) V\u00e9g\u00fcl hozzuk l\u00e9tre a Wind oszt\u00e1lyt is: class Wind ( val speed : Float = 0f , val deg : Float = 0f ) A details package -ben hozzuk l\u00e9tre a WeatherDataHolder interf\u00e9szt: interface WeatherDataHolder { fun getWeatherData (): WeatherData? } A WeatherDataHolder -en kereszt\u00fcl fogj\u00e1k lek\u00e9rni a Fragment -ek az Activity -t\u0151l az id\u0151j\u00e1r\u00e1s adatokat. Vegy\u00fcnk fel egy WeatherData t\u00edpus\u00fa tagv\u00e1ltoz\u00f3t a DetailsActiviy -be: private var weatherData : WeatherData? = null M\u00f3dos\u00edtsuk \u00fagy a DetailsActivity -t, hogy implement\u00e1lja a WeatherDataHolder interf\u00e9szt: class DetailsActivity : AppCompatActivity (), WeatherDataHolder { Implement\u00e1ljuk a sz\u00fcks\u00e9ges f\u00fcggv\u00e9nyt: override fun getWeatherData (): WeatherData? { return weatherData } A haszn\u00e1lt weatherData v\u00e1ltoz\u00f3nak fogunk k\u00e9s\u0151bb \u00e9rt\u00e9ket adni, amikor vissza\u00e9rkezett az \u00e9rt\u00e9ke a h\u00e1l\u00f3zati h\u00edv\u00e1s eredm\u00e9nyek\u00e9nt. A ViewPager k\u00e9t lapj\u00e1n lev\u0151 Fragment -ek a WeatherDataHolder interf\u00e9szen kereszt\u00fcl fogj\u00e1k lek\u00e9rni az Activity -t\u0151l a weatherData objekutmot a megjelen\u00edt\u00e9shez.","title":"Modell oszt\u00e1lyok l\u00e9trehoz\u00e1sa"},{"location":"laborok/07-android-network/#a-halozati-reteg-megvalositasa","text":"A hu.bme.aut.weatherinfo package-ben hozzuk l\u00e9tre egy network nev\u0171 package-et, amely a h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3hoz kapcsol\u00f3d\u00f3 oszt\u00e1lyokat fogja tartalmazni. A network package-en bel\u00fcl hozzuk l\u00e9tre egy WeatherApi nev\u0171 interf\u00e9szt. interface WeatherApi { @GET ( \"/data/2.5/weather\" ) fun getWeather ( @Query ( \"q\" ) cityName : String? , @Query ( \"units\" ) units : String? , @Query ( \"appid\" ) appId : String? ): Call < WeatherData?> ? } L\u00e1that\u00f3, hogy annot\u00e1ci\u00f3k alkalmaz\u00e1s\u00e1val tuduk jelezni, hogy az adott f\u00fcggv\u00e9nyh\u00edv\u00e1s milyen h\u00e1l\u00f3zati h\u00edv\u00e1snak fog megfelelni. A @GET annot\u00e1ci\u00f3 HTTP GET k\u00e9r\u00e9st jelent, a param\u00e9terk\u00e9nt adott string pedig azt jelzi, hogy hogy a szerver alap URL -\u00e9hez k\u00e9pest melyik v\u00e9gpontra szeretn\u00e9nk k\u00fcldeni a k\u00e9r\u00e9st. Hasonl\u00f3 m\u00f3don tudjuk le\u00edrni a t\u00f6bbi HTTP k\u00e9r\u00e9s t\u00edpust is: @POST, @UPDATE, @PATCH, @DELETE A f\u00fcggv\u00e9ny parem\u00e9tereit a @Query annot\u00e1ci\u00f3val l\u00e1ttuk el. Ez azt jelenti, hogy a Retrofit az adott param\u00e9ter \u00e9rt\u00e9k\u00e9t a k\u00e9r\u00e9shez f\u0171zi query param\u00e9terk\u00e9nt az annot\u00e1ci\u00f3ban megadott kulccsal. Tov\u00e1bbi eml\u00edt\u00e9sre m\u00e9lt\u00f3 annot\u00e1ci\u00f3k a teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl: @HEAD, @Multipart, @Field A h\u00e1l\u00f3zati h\u00edv\u00e1st jel\u00f6l\u0151 interf\u00e9sz f\u00fcggv\u00e9ny visszat\u00e9r\u00e9si \u00e9rt\u00e9ke egy Call<WeatherData> t\u00edpus\u00fa objektum lesz. Ez egy olyan h\u00e1l\u00f3zati h\u00edv\u00e1st \u00edr le, aminek a v\u00e1lasza WeatherData t\u00edpus\u00fa objektumm\u00e1 alak\u00edthat\u00f3. Hozzunk l\u00e9tre a network package-ben egy NetworkManager oszt\u00e1lyt: object NetworkManager { private val retrofit : Retrofit private val weatherApi : WeatherApi private const val SERVICE_URL = \"https://api.openweathermap.org\" private const val APP_ID = \"ide_jon_a_token\" init { retrofit = Retrofit . Builder () . baseUrl ( SERVICE_URL ) . client ( OkHttpClient . Builder (). build ()) . addConverterFactory ( GsonConverterFactory . create ()) . build () weatherApi = retrofit . create ( WeatherApi :: class . java ) } fun getWeather ( city : String? ): Call < WeatherData?> ? { return weatherApi . getWeather ( city , \"metric\" , APP_ID ) } } Ez az oszt\u00e1ly lesz felel\u0151s a h\u00e1l\u00f3zati k\u00e9r\u00e9sek lebonyol\u00edt\u00e1s\u00e1\u00e9rt. Egyetlen p\u00e9ld\u00e1nyra lesz sz\u00fcks\u00e9g\u00fcnk bel\u0151le, \u00edgy singleton k\u00e9nt implement\u00e1ltuk. Konstansokban t\u00e1roljuk a szerver alap c\u00edm\u00e9t, valamint a szolg\u00e1ltat\u00e1s haszn\u00e1lat\u00e1hoz sz\u00fcks\u00e9ges API kulcsot. A Retrofit.Builder() h\u00edv\u00e1ssal k\u00e9rhet\u00fcnk egy parem\u00e9terehzet\u0151 Builder p\u00e9ld\u00e1nyt. Ebben adhatjuk meg a h\u00e1l\u00f3zati h\u00edv\u00e1saink tulajdons\u00e1gait. Jelen p\u00e9ld\u00e1ban be\u00e1ll\u00edtjuk az el\u00e9rni k\u00edv\u00e1nt szolg\u00e1ltat\u00e1s c\u00edm\u00e9t, a HTTP kliens implement\u00e1ci\u00f3t ( OkHttp ), valamint a JSON \u00e9s objektum reprezent\u00e1ci\u00f3k k\u00f6z\u00f6tti konvertert (Gson). A WeatherApi interf\u00e9szb\u0151l a Builder -rel l\u00e9trehozott Retrofit p\u00e9ld\u00e1ny seg\u00edts\u00e9g\u00e9vel tudjuk elk\u00e9rni a ford\u00edt\u00e1si id\u0151ben gener\u00e1lt, param\u00e9terezett implement\u00e1ci\u00f3t. A retrofit.create(WeatherApi.class) h\u00edv\u00e1s eredm\u00e9nyek\u00e9nt kapott objektum megval\u00f3s\u00edtja a WeatherApi interf\u00e9szt. Ha ezen az objektumon megh\u00edvjuk a getWeather(...) f\u00fcggv\u00e9nyt, akkor megt\u00f6rt\u00e9nik az \u00e1ltalunk az interf\u00e9szben defini\u00e1lt h\u00e1l\u00f3zati h\u00edv\u00e1s. Az APP_ID param\u00e9tert elfedj\u00fck az id\u0151j\u00e1r\u00e1st lek\u00e9rdez\u0151 oszt\u00e1lyok el\u0151l, ez\u00e9rt a NetworkManager is tartalmaz egy getWeather(...) f\u00fcggv\u00e9nyt, ami a WeatherApi implement\u00e1ci\u00f3ba h\u00edv tov\u00e1bb. Cser\u00e9lj\u00fck le az APP_ID \u00e9rt\u00e9k\u00e9t az OpenWeatherMap oldalon kapott saj\u00e1t API kulcsunkra!","title":"A h\u00e1l\u00f3zati r\u00e9teg megval\u00f3s\u00edt\u00e1sa"},{"location":"laborok/07-android-network/#4-a-halozati-reteg-bekotese-a-reszletezo-nezetbe-1-pont","text":"A modell elemek \u00e9s a h\u00e1l\u00f3zati r\u00e9teg megval\u00f3s\u00edt\u00e1sa ut\u00e1n a r\u00e9szletez\u0151 n\u00e9zetet fogjuk a specifik\u00e1ci\u00f3nak megfelel\u0151en implement\u00e1lni, majd bek\u00f6tj\u00fck a h\u00e1l\u00f3zati r\u00e9teget is.","title":"4. A h\u00e1l\u00f3zati r\u00e9teg bek\u00f6t\u00e9se a r\u00e9szletez\u0151 n\u00e9zetbe (1 pont)"},{"location":"laborok/07-android-network/#a-reszletezo-nezetek-tovabbfejlesztese","text":"A ViewPager megfelel\u0151 m\u0171k\u00f6d\u00e9s\u00e9hez l\u00e9tre kell hoznunk egy FragmentStateAdapter -b\u0151l sz\u00e1rmaz\u00f3 oszt\u00e1lyt a details package-ben, ami az eddig l\u00e1tott adapterekhez hasonl\u00f3an azt hat\u00e1rozza meg, hogy milyen elemek jelenjenek meg a hozz\u00e1juk tartoz\u00f3 n\u00e9zeten (jelen esetben az elemek Fragment -ek lesznek): class DetailsPagerAdapter ( fragmentActivity : FragmentActivity ) : FragmentStateAdapter ( fragmentActivity ) { companion object { private const val NUM_PAGES : Int = 2 } override fun createFragment ( position : Int ): Fragment { return when ( position ) { 0 -> DetailsMainFragment () 1 -> DetailsMoreFragment () else -> DetailsMainFragment () } } override fun getItemCount (): Int = NUM_PAGES } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 Fragment -eket a hozz\u00e1juk tartoz\u00f3 n\u00e9zetekkel egy\u00fctt:","title":"A r\u00e9szletez\u0151 n\u00e9zetek tov\u00e1bbfejleszt\u00e9se"},{"location":"laborok/07-android-network/#detailsmainfragment","text":"res/layout/fragment_details_main.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" android:padding= \"16dp\" > <TextView android:id= \"@+id/tvMain\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" tools:text= \"Clear\" /> <TextView android:id= \"@+id/tvDescription\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"16dp\" tools:text= \"Clear sky\" /> <ImageView android:id= \"@+id/ivIcon\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_marginTop= \"16dp\" /> </LinearLayout> A details package-ben a DetailsMainFragment : class DetailsMainFragment : Fragment () { private lateinit var binding : FragmentDetailsMainBinding private var weatherDataHolder : WeatherDataHolder? = null override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) weatherDataHolder = if ( activity is WeatherDataHolder ) { activity as WeatherDataHolder? } else { throw RuntimeException ( \"Activity must implement WeatherDataHolder interface!\" ) } } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { binding = FragmentDetailsMainBinding . inflate ( LayoutInflater . from ( context )) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) if ( weatherDataHolder ?. getWeatherData () != null ) { displayWeatherData () } } private fun displayWeatherData () { val weather = weatherDataHolder ?. getWeatherData () ?. weather ?. first () binding . tvMain . text = weather ?. main binding . tvDescription . text = weather ?. description Glide . with ( this ) . load ( \"https://openweathermap.org/img/w/ ${ weather ?. icon } .png\" ) . transition ( DrawableTransitionOptions (). crossFade ()) . into ( binding . ivIcon ) } } Figyelj\u00fck meg, hogy hogy haszn\u00e1ljuk a k\u00f3dban a Glide libraryt! Az OpenWeatherMap API-t\u00f3l a k\u00e9pek lek\u00e9rhet\u0151k a visszakapott adatok alapj\u00e1n, pl: https://openweathermap.org/img/w/10d.png","title":"DetailsMainFragment"},{"location":"laborok/07-android-network/#detailsmorefragment","text":"res/layout/fragment_details_more.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <TableLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:padding= \"16dp\" android:stretchColumns= \"0\" > <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/temperature\" /> <TextView android:id= \"@+id/tvTemperature\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"25 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/min_temperature\" /> <TextView android:id= \"@+id/tvMinTemp\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"24 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/max_temperature\" /> <TextView android:id= \"@+id/tvMaxTemp\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"26 \u00b0C\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/pressure\" /> <TextView android:id= \"@+id/tvPressure\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"100 Pa\" /> </TableRow> <TableRow> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"@string/humidity\" /> <TextView android:id= \"@+id/tvHumidity\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" tools:text= \"50 %\" /> </TableRow> </TableLayout> A details package-ben a DetailsMoreFragment : class DetailsMoreFragment : Fragment () { private lateinit var binding : FragmentDetailsMoreBinding private var weatherDataHolder : WeatherDataHolder? = null override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) weatherDataHolder = if ( activity is WeatherDataHolder ) { activity as WeatherDataHolder? } else { throw RuntimeException ( \"Activity must implement WeatherDataHolder interface!\" ) } } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle?) : View? { binding = FragmentDetailsMoreBinding . inflate ( LayoutInflater . from ( context )) return binding . root } override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) if ( weatherDataHolder ?. getWeatherData () != null ) { showWeatherData () } } private fun showWeatherData () { val weatherData = weatherDataHolder !! . getWeatherData () binding . tvTemperature . text = weatherData ?. main ?. temp . toString () binding . tvMinTemp . text = weatherData ?. main ?. temp_min . toString () binding . tvMaxTemp . text = weatherData ?. main ?. temp_max . toString () binding . tvPressure . text = weatherData ?. main ?. pressure . toString () binding . tvHumidity . text = weatherData ?. main ?. humidity . toString () } } Figyelj\u00fck meg, hogyan ellen\u0151rzi a DetailsMainFragment \u00e9s a DetailsMoreFragment azt, hogy az Activity implement\u00e1lja-e a WeatherDataHolder interf\u00e9szt. Fontos, hogy ezt a k\u00e9t Fragment majd csak azut\u00e1n ker\u00fcl a DetailsActivity -re a ViewPager -en kereszt\u00fcl, amikor az adatokat lek\u00e9r\u0151 h\u00e1l\u00f3zati k\u00e9r\u00e9s m\u00e1r adott vissza eredm\u00e9nyt. Ideiglenesen a DetailsActivity onResume() f\u00fcggv\u00e9nye legyen az al\u00e1bbi: override fun onResume () { super . onResume () val detailsPagerAdapter = DetailsPagerAdapter ( this ) binding . mainViewPager . adapter = detailsPagerAdapter TabLayoutMediator ( binding . tabLayout , binding . mainViewPager ) { tab , position -> tab . text = when ( position ) { 0 -> getString ( R . string . main ) 1 -> getString ( R . string . details ) else -> \"\" } }. attach () } Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st, kattintsunk egy v\u00e1rosra! jelenleg m\u00e9g nem jelennek meg val\u00f3s adatok, mivel m\u00e9g nem k\u00f6t\u00f6tt\u00fck be a az adatok lek\u00e9r\u00e9s\u00e9\u00e9rt felel\u0151s h\u00edv\u00e1st.","title":"DetailsMoreFragment"},{"location":"laborok/07-android-network/#halozati-hivas-bekotese","text":"Az id\u0151j\u00e1r\u00e1s adatok lek\u00e9rdez\u00e9s\u00e9nek bek\u00f6t\u00e9s\u00e9hez implement\u00e1ljunk egy loadWeatherData() nev\u0171 f\u00fcggv\u00e9nyt a DetailsActivity -ben: private fun loadWeatherData () { NetworkManager . getWeather ( city ) ?. enqueue ( object : Callback < WeatherData?> { override fun onResponse ( call : Call < WeatherData?> , response : Response < WeatherData?> ) { Log . d ( TAG , \"onResponse: \" + response . code ()) if ( response . isSuccessful ) { displayWeatherData ( response . body ()) } else { Toast . makeText ( this @DetailsActivity , \"Error: \" + response . message (), Toast . LENGTH_LONG ). show () } } override fun onFailure ( call : Call < WeatherData?> , throwable : Throwable ) { throwable . printStackTrace () Toast . makeText ( this @DetailsActivity , \"Network request error occured, check LOG\" , Toast . LENGTH_LONG ). show () } }) } Implement\u00e1ljuk a hi\u00e1nyz\u00f3 displayWeatherData(...) f\u00fcggv\u00e9nyt, ami sikeres API h\u00edv\u00e1s eset\u00e9n megjelen\u00edti az eredm\u00e9nyt: private fun displayWeatherData ( receivedWeatherData : WeatherData?) { weatherData = receivedWeatherData val detailsPagerAdapter = DetailsPagerAdapter ( this ) binding . mainViewPager . adapter = detailsPagerAdapter } A DetailsActivity onResume() f\u00fcggv\u00e9ny\u00e9ben h\u00edvjuk meg a loadWeatherData() f\u00fcggv\u00e9nyt: override fun onResume () { super . onResume () ... loadWeatherData () } Futtassuk az alkalmaz\u00e1st \u00e9s figyelj\u00fck meg a m\u0171k\u00f6d\u00e9s\u00e9t! Pr\u00f3b\u00e1ljuk ki azt is, hogy mi t\u00f6rt\u00e9nik akkor, ha megszak\u00edtjuk a futtat\u00f3 eszk\u00f6z internet kapcsolat\u00e1t \u00e9s megpr\u00f3b\u00e1ljuk megnyitni a r\u00e9szletez\u0151 n\u00e9zetet!","title":"H\u00e1l\u00f3zati h\u00edv\u00e1s bek\u00f6t\u00e9se"},{"location":"laborok/07-android-network/#5-onallo-feladat-varos-listabol-torles-megvalositasa-1-pont","text":"Val\u00f3s\u00edtsuk meg a v\u00e1rosok t\u00f6rl\u00e9s\u00e9t a Remove gomb megnyom\u00e1s\u00e1nak hat\u00e1s\u00e1ra.","title":"5. \u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont)"},{"location":"laborok/08-http/","text":"Labor 08 - HTTP, HTML \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A f\u00e9l\u00e9v sor\u00e1n felhaszn\u00e1lt eszk\u00f6z\u00f6k: Telerik Fiddler , haszn\u00e1lhat\u00f3 az OS X / Linux verzi\u00f3n is futtathat\u00f3 Fiddler Everywhere verzi\u00f3 is, ekkor viszont a k\u00fcl\u00f6nbs\u00e9gekb\u0151l fakad\u00f3 esetleges kellemetlens\u00e9gek\u00e9rt nem v\u00e1llalunk felel\u0151ss\u00e9get, k\u00f6zvetlen link: FiddlerSetup.exe , webb\u00f6ng\u00e9sz\u0151k be\u00e9p\u00edtett hibakeres\u0151 eszk\u00f6zei, Visual Studio Code k\u00f3dszerkeszt\u0151 alkalmaz\u00e1s, otthoni vagy egy\u00e9ni munkav\u00e9gz\u00e9shez haszn\u00e1lhat\u00f3 b\u00e1rmilyen m\u00e1s k\u00f3dszerkeszt\u0151 vagy fejleszt\u0151k\u00f6rnyezet, npm, a NodeJS csomagkezel\u0151je, a http-server npm csomag, ami egy nagyon egyszer\u0171, fejleszt\u00e9si c\u00e9lra sz\u00e1nt HTTP kiszolg\u00e1l\u00f3 ha a g\u00e9pen nincsen telep\u00edtve a http-server, azt az npm install -g http-server paranccsal lehet telep\u00edteni a NodeJS telep\u00edt\u00e9s\u00e9t k\u00f6vet\u0151en, majd parancssorban a http-server parancs kiad\u00e1s\u00e1val egy \u00faj HTTP szerver indul, ami az aktu\u00e1lis munkamappa tartalm\u00e1t szolg\u00e1lja ki. Az npm parancs futtat\u00e1s\u00e1hoz telep\u00edtett NodeJS-re is sz\u00fcks\u00e9g van. Amelyik laboron ezeken fel\u00fcl tov\u00e1bbi eszk\u00f6z\u00f6kre lesz sz\u00fcks\u00e9g, ott a labor bevezet\u0151j\u00e9ben ezt jelezz\u00fck. El\u0151k\u00e9sz\u00fclet \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Feladat 1 - HTTP hibakeres\u00e9s \u00b6 A Fiddler a Telerik c\u00e9g ingyenes term\u00e9ke, az egyik leggyakrabban haszn\u00e1lt webes hibakeres\u0151 (debugger) eszk\u00f6z. A Fiddler egy k\u00f6zbe\u00e9kel\u0151d\u00e9ses \u201et\u00e1mad\u00e1st\u201d (man in the middle attack) j\u00e1tszik el a gazda sz\u00e1m\u00edt\u00f3g\u00e9pen az\u00e1ltal, hogy proxy-k\u00e9nt viselkedik. A sz\u00e1m\u00edt\u00f3g\u00e9pr\u0151l kifel\u00e9 indul\u00f3 HTTP k\u00e9r\u00e9seinket elkapja, napl\u00f3zza azokat feldolgoz\u00e1s \u00e9s a fel\u00fcleten t\u00f6rt\u00e9n\u0151 megjelen\u00edt\u00e9s c\u00e9lj\u00e1b\u00f3l, majd elk\u00fcldi az eredeti c\u00edmzett fel\u00e9. Ugyanezt a sorozatot j\u00e1tssza el a visszair\u00e1nyban is, amikor a g\u00e9p\u00fcnk a h\u00e1l\u00f3zatr\u00f3l kap adatot. Ind\u00edtsuk el a Fiddler alkalmaz\u00e1st! Ne z\u00e1rjuk be a Fiddler alkalmaz\u00e1st! Ind\u00edtsuk el a Windows be\u00e9p\u00edtett proxy be\u00e1ll\u00edt\u00f3 fel\u00fclet\u00e9t! Ind\u00edtsuk el a Windows be\u00e9p\u00edtett proxy be\u00e1ll\u00edt\u00f3 fel\u00fclet\u00e9t! A Windows billenty\u0171t nyomjuk le, a Start men\u00fc megny\u00edl\u00e1sa ut\u00e1n g\u00e9pelj\u00fck be: \"proxy\", \u00e9s nyissuk meg a proxybe\u00e1ll\u00edt\u00e1sokat! BEADAND\u00d3 (0.5 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet arr\u00f3l f1a.png n\u00e9ven, hogyan m\u00f3dos\u00edtja a Fiddler a proxy be\u00e1ll\u00edt\u00e1sokat a Windows proxy be\u00e1ll\u00edt\u00e1sai k\u00f6z\u00f6tt \u00e9s a Telerik Fiddler Options > Connections f\u00fcl\u00f6n! Ha bez\u00e1rjuk a Fiddlert, l\u00e1thatjuk, hogy vissza\u00e1ll\u00edtja a proxybe\u00e1ll\u00edt\u00e1sokat a kiindul\u00f3 \u00e1llapotra. Ind\u00edtsuk el ism\u00e9t, hogy meg tudjuk vizsg\u00e1lni a h\u00e1l\u00f3zati forgalmat! Miel\u0151tt haszn\u00e1ljuk az eszk\u00f6zt, sz\u00fcks\u00e9ges lehet a HTTPS forgalom felold\u00e1sa, amihez egy egyedi tan\u00fas\u00edtv\u00e1nyt kell telep\u00edten\u00fcnk a g\u00e9p\u00fcnkre. Ezt a Tools -> Options -> HTTPS lehet\u0151s\u00e9gn\u00e9l kezdem\u00e9nyezhetj\u00fck. A Fiddler fut\u00e1sa k\u00f6zben ind\u00edtsunk el egy b\u00f6ng\u00e9sz\u0151t, \u00e9s navig\u00e1ljunk a https://www.aut.bme.hu c\u00edmre ( figyelem, pontosan \u00edrjuk/m\u00e1soljuk be! )! Tekints\u00fck \u00e1t a program fel\u00fclet\u00e9t az \u00edgy keletkez\u0151 HTTP k\u00e9r\u00e9sek alapj\u00e1n! A Fiddler alapvet\u0151 fel\u00e9p\u00edt\u00e9se az al\u00e1bbi: HTTP k\u00e9r\u00e9sek id\u0151rendi list\u00e1ja: itt l\u00e1tjuk, hogy milyen k\u00e9r\u00e9seink mentek ki a h\u00e1l\u00f3zatra. A protokoll HTTP vagy HTTPS lehet, a Result a v\u00e1lasz\u00fczenetben \u00e9rkez\u0151 HTTP st\u00e1tuszk\u00f3dot jelzi. A Body mez\u0151ben l\u00e1thatjuk, hogy a v\u00e1lasz h\u00e1ny b\u00e1jt m\u00e9ret\u0171 volt. A bal oldali list\u00e1ban b\u00e1rmely k\u00e9r\u00e9st kiv\u00e1lasztva annak r\u00e9szleteit jobb oldalon l\u00e1thatjuk . Jobb eg\u00e9rgombbal a lista elemein lehet\u0151s\u00e9g\u00fcnk van azok \u00fajraj\u00e1tsz\u00e1s\u00e1ra . Lehet\u0151s\u00e9g\u00fcnk van a list\u00e1ban akt\u00edv sz\u0171r\u0151 be\u00e1ll\u00edt\u00e1s\u00e1ra pl. alkalmaz\u00e1s (process ID) vagy host alapj\u00e1n. A jobb oldali f\u00fcl\u00f6n alap\u00e9rtelmez\u00e9s szerint az Inspectors f\u00fcl van kiv\u00e1lasztva, ami az aktu\u00e1lisan kiv\u00e1lasztott HTTP k\u00e9r\u00e9s-v\u00e1lasz p\u00e1rost r\u00e9szletezi. A fels\u0151 panel a kimen\u0151 k\u00e9r\u00e9s panelje. A tabok sor\u00e1n v\u00e1ltogatva az \u00fczenetet k\u00fcl\u00f6nb\u00f6z\u0151 form\u00e1z\u00e1sokkal is megvizsg\u00e1lhatjuk, a fontosabbak: Headers : itt l\u00e1thatjuk a HTTP fejl\u00e9c legfontosabb elemeit, \u00fagy mint a HTTP ig\u00e9t \u00e9s protokollt, csoportokba szervezve a HTTP \u00fczenet tartalm\u00e1t. TextView : sz\u00f6veges n\u00e9zet. WebForms : \u0171rlapok k\u00fcld\u00e9se eset\u00e9n a param\u00e9terek nev\u00e9t \u00e9s \u00e9rt\u00e9k\u00e9t tartalmazza. Cookies : a felk\u00fcld\u00f6tt/fogadott s\u00fctik megjelen\u00edt\u00e9se. Raw : a nyers HTTP \u00fczenet megjelen\u00edt\u00e9se. JSON/XML : az \u00fczenet megjelen\u00edt\u00e9se JSON/XML objektumokk\u00e9nt (csak megfelel\u0151 form\u00e1tum eset\u00e9n). A jobb oldali panelen az **Inspector**t v\u00e1lasztva az als\u00f3 r\u00e9szen a v\u00e1laszb\u00f3l kinyerhet\u0151 adatok tal\u00e1lhat\u00f3k meg, ezek jelent\u0151s r\u00e9sze anal\u00f3g a k\u00e9r\u00e9s form\u00e1tum\u00e1val \u00e9s a Request panelen tal\u00e1lhat\u00f3 adatokkal. Egy fontos eszk\u00f6z lehet m\u00e9g sz\u00e1munkra a Composer , amellyel teljes HTTP k\u00e9r\u00e9st tudunk \u00f6ssze\u00e1ll\u00edtani \u00e9s elk\u00fcldeni. K\u00e9r\u00e9sek vizsg\u00e1lata \u00b6 Elemezz\u00fck a b\u00f6ng\u00e9sz\u0151 \u00e1ltal gener\u00e1lt k\u00e9r\u00e9seket! A b\u00f6ng\u00e9sz\u0151be a weboldal c\u00edm\u00e9nek be\u00edr\u00e1sa ut\u00e1n egy HTTP k\u00e9r\u00e9s indult meg a www.aut.bme.hu szerver ir\u00e1ny\u00e1ba (esetleg HTTP \u00e1tir\u00e1ny\u00edt\u00e1st k\u00f6vet\u0151en, ami a www n\u00e9lk\u00fcli vari\u00e1ns vagy a nem HTTPS vari\u00e1ns eset\u00e9n a megfelel\u0151 oldalra ir\u00e1ny\u00edt \u00e1t). A Fiddlerben megvizsg\u00e1lva k\u00f6vetkeztet\u00e9seket vonhatunk le a k\u00e9r\u00e9s-v\u00e1lasz adatai alapj\u00e1n. Laborg\u00e9peken elk\u00e9pzelhet\u0151, hogy a tan\u00fas\u00edtv\u00e1ny nincsen telep\u00edtve \u00e9s nincsen jogunk a telep\u00edt\u00e9shez. Ebben az esetben haladjunk a laborral a le\u00edrtaknak megfelel\u0151en, de minden esetben a HTTPS URL-ek helyett HTTP-t haszn\u00e1ljunk! A v\u00e1lasz ezekben az esetekben egy \u00e1tir\u00e1ny\u00edt\u00e1s lesz a szok\u00e1sos 200 OK v\u00e1lasz helyett. Az els\u0151 k\u00e9r\u00e9s az \u00e1ltalunk be\u00edrt webc\u00edmre ker\u00fclt kik\u00fcld\u00e9sre az al\u00e1bbi form\u00e1ban: GET https://www.aut.bme.hu/ HTTP / 1.1 Accept : text/html, application/xhtml+xml, image/jxr, */* Accept-Language : en-US,en;q=0.7,hu;q=0.3 User-Agent : Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063 Accept-Encoding : gzip, deflate Host : www.aut.bme.hu Connection : Keep-Alive A k\u00e9r\u00e9s GET ig\u00e9t haszn\u00e1lt, ez\u00e9rt nem tartozik hozz\u00e1 t\u00f6rzs (body) a k\u00fcld\u00f6tt HTTP \u00fczenetben. A HTTP \u00fczenet egyszer\u0171 sz\u00f6veges form\u00e1tum\u00fa , ember \u00e1ltal is olvashat\u00f3. A b\u00f6ng\u00e9sz\u0151 kulcs-\u00e9rt\u00e9k p\u00e1rok form\u00e1j\u00e1ban tov\u00e1bbi adatokat k\u00fcld\u00f6tt a szerver fel\u00e9, mint pl. a b\u00f6ng\u00e9sz\u0151t azonos\u00edt\u00f3 karakterl\u00e1ncot ( User-Agent ), a v\u00e1rt adat form\u00e1tum\u00e1t ( Accept , Accept-Encoding ), elt\u00e1rolt s\u00fctiket ( Cookie ) stb. \u00c9rdekess\u00e9g, hogy bizonyos kulcsok t\u00f6bbsz\u00f6r el\u0151fordulhatnak egy HTTP \u00fczenetben, ekkor az \u00f6sszes ugyanolyan kulcshoz tartoz\u00f3 \u00e9rt\u00e9kek egy kollekci\u00f3k\u00e9nt/t\u00f6mbk\u00e9nt \u00e9rtelmezhet\u0151k. Az els\u0151 elk\u00fcld\u00f6tt \u00fczenet ut\u00e1n tov\u00e1bbi HTTP k\u00e9r\u00e9sek indultak el a st\u00edluslapok (CSS), k\u00e9pek \u00e9s szkriptek (JavaScript) let\u00f6lt\u00e9s\u00e9\u00e9rt. Ennek az az oka, hogy a b\u00f6ng\u00e9sz\u0151 fel\u00e9p\u00edti a HTML oldalt, amiben a tov\u00e1bbi linkek tov\u00e1bbi HTTP k\u00e9r\u00e9seket induk\u00e1lnak. A k\u00e9r\u00e9s\u00fcnkre az al\u00e1bbi v\u00e1lasz \u00e9rkezett: HTTP / 1.1 200 OK Cache-Control : no-cache Pragma : no-cache Content-Type : text/html; charset=utf-8 Expires : -1 Vary : Accept-Encoding Server : Microsoft-IIS/8.0 X-AspNet-Version : 4.0.30319 Set-Cookie : AaitC=3495d86d-2b52-4b73-b020-80eb90069465; path=/; HttpOnly X-Powered-By : ASP.NET X-Frame-Options : deny Date : Wed, 18 Oct 2017 10:40:05 GMT Content-Length : 26940 <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html > < head > ... </ head > < body > ... </ body > </ html > A k\u00e9r\u00e9s sikeres volt, ezt a fejl\u00e9c elej\u00e9n tal\u00e1lhat\u00f3 st\u00e1tuszk\u00f3db\u00f3l \u00e9s st\u00e1tusz \u00fczenet\u00e9b\u0151l l\u00e1tjuk. A v\u00e1lasz form\u00e1tuma megegyezik a k\u00e9r\u00e9s form\u00e1tum\u00e1val: \u00fczenet c\u00edme, fejl\u00e9cek kulcs-\u00e9rt\u00e9k p\u00e1rokk\u00e9nt, \u00fcres sor, \u00e9s egy opcion\u00e1lis t\u00f6rzs. A fejl\u00e9cekben tal\u00e1lhat\u00f3 fontosabb elemek a szerver t\u00edpusa (Server), szerverid\u0151 (Date), a k\u00fcld\u00f6tt adat t\u00edpusa (Content-Type) \u00e9s m\u00e9rete b\u00e1jtban (Content-Length). Ezen k\u00edv\u00fcl a szerver a Set-Cookie headerrel k\u00e9t s\u00fctit \u00e1ll\u00edt be a kliensen, ill. k\u00fcl\u00f6nb\u00f6z\u0151 fejl\u00e9cekben defini\u00e1lja a gyors\u00edt\u00f3t\u00e1raz\u00e1shoz (cache) sz\u00fcks\u00e9ges szab\u00e1lyokat. A fejl\u00e9ceket egy \u00fcres sor k\u00f6veti, majd a HTTP \u00fczenet t\u00f6rzse k\u00f6vetkezik, ami egy HTML5 dokumentum. BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet f1b.png n\u00e9ven a k\u00e9r\u00e9sr\u0151l, amelyet a b\u00f6ng\u00e9sz\u0151 a www.aut.bme.hu c\u00edmre k\u00fcld\u00f6tt \u00e9s az ehhez tartoz\u00f3 v\u00e1laszr\u00f3l! A v\u00e1lasz \u00e9s a k\u00e9r\u00e9s is nyers (Raw) form\u00e1tumban legyen l\u00e1that\u00f3! Vegy\u00fck \u00e9szre, hogy a HTTP k\u00e9r\u00e9s\u00fcnkh\u00f6z tartoz\u00f3 v\u00e1lasz kiz\u00e1r\u00f3lag a kor\u00e1bban elk\u00fcld\u00f6tt k\u00e9r\u00e9s\u00fcnkben megtal\u00e1lhat\u00f3 inform\u00e1ci\u00f3k alapj\u00e1n k\u00e9sz\u00fclt el! Ez jelenti azt, hogy a HTTP \u00e1llapotmentes : az \u00e1ltalunk elk\u00fcld\u00f6tt k\u00e9r\u00e9s alapj\u00e1n kapjuk meg a v\u00e1laszt, tov\u00e1bbi \u00e1llapoinform\u00e1ci\u00f3kat nem felt\u00e9telezhet\u00fcnk a szerver r\u00e9sz\u00e9r\u0151l. Ez nem \u00f6sszekeverend\u0151 azzal, hogy a szerver vagy kliens t\u00e1rol-e \u00e1llapotot vagy sem : napjainkban mindk\u00e9t oldalon t\u00e1rolunk inform\u00e1ci\u00f3t az \u00e1llapotunkkal kapcsolatban, viszont a k\u00e9r\u00e9sben tal\u00e1lhat\u00f3 meg minden olyan inform\u00e1ci\u00f3, ami alapj\u00e1n a szerver azonos\u00edtani tudja a k\u00e9r\u0151t \u00e9s a k\u00e9r\u00e9si ig\u00e9nyt, ami alapj\u00e1n \u00f6ssze\u00e1ll\u00edtja a v\u00e1laszt. K\u00e9r\u00e9sek ind\u00edt\u00e1sa \u00b6 \u00c1ll\u00edtsunk \u00f6ssze egy egyszer\u0171 HTTP k\u00e9r\u00e9st a Fiddlerb\u0151l! Navig\u00e1ljunk a jobb oldali panelen a Composer f\u00fclre! Itt lehet\u0151s\u00e9g\u00fcnk van \u00f6ssze\u00e1ll\u00edtani egy HTTP \u00fczenetet. A Parsed lehet\u0151s\u00e9g kicsit szofisztik\u00e1ltabb, nek\u00fcnk most megfelel\u0151 lesz a Raw (nyers) \u00f6ssze\u00e1ll\u00edt\u00e1s is. K\u00fcldj\u00fck el az al\u00e1bbi HTTP \u00fczenetet \u00e9s vizsg\u00e1ljuk meg az erre \u00e9rkez\u0151 v\u00e1laszt: GET http://www.aut.bme.hu/ HTTP / 1.1 Fontos , hogy a fenti k\u00e9r\u00e9sben egy \u00fcres sor legyen a fejl\u00e9c ut\u00e1n, teh\u00e1t k\u00e9t Entert is kell \u00fctn\u00fcnk. BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a nyers HTTP v\u00e1laszr\u00f3l f1c.png n\u00e9ven! A fenti k\u00e9r\u00e9s\u00fcnk formailag helyes HTTP \u00fczenet: csak a HTTP ige, c\u00edm, \u00e9s protokoll megad\u00e1sa k\u00f6telez\u0151, az \u00f6sszes fejl\u00e9c opcion\u00e1lis, a t\u00f6rzs GET k\u00e9r\u00e9sn\u00e9l pedig nem szabv\u00e1nyos. Ha megvizsg\u00e1ljuk a k\u00e9r\u00e9s\u00fcnkre \u00e9rkez\u0151 v\u00e1laszokat, \u00e9s \u00f6sszehasonl\u00edtjuk a kor\u00e1bban a b\u00f6ng\u00e9sz\u0151nek k\u00fcld\u00f6tt v\u00e1lasszal (erre lehet\u0151s\u00e9g\u00fcnk van a k\u00e9t relev\u00e1ns \u00fczenetv\u00e1lt\u00e1st kijel\u00f6lve, majd a Compare lehet\u0151s\u00e9get haszn\u00e1lva), akkor l\u00e1thatjuk, hogy a k\u00e9r\u00e9s\u00fcnkre nem r\u00f6gt\u00f6n egy 200 OK v\u00e1lasz \u00e9rkezik, hanem el\u0151tte egy \u00e1tir\u00e1ny\u00edt\u00e1st kapunk a HTTPS v\u00e9gpontra. Feladat 2 - Hibakeres\u0151 eszk\u00f6z\u00f6k \u00b6 Weboldalak k\u00e9sz\u00edt\u00e9sekor sz\u00fcks\u00e9g lehet a HTTP forgalom megvizsg\u00e1l\u00e1s\u00e1ra, viszont az esetek jelent\u0151s r\u00e9sz\u00e9ben elegend\u0151 lehet, ha a b\u00f6ng\u00e9sz\u0151 forgalm\u00e1t meg tudjuk vizsg\u00e1lni. A mai b\u00f6ng\u00e9sz\u0151k mindegyike tartalmaz eszk\u00f6z\u00f6ket, amellyel a weboldalak hibakeres\u00e9se nagyon egyszer\u0171en kezelhet\u0151v\u00e9 v\u00e1lik. A b\u00f6ng\u00e9sz\u0151k Inspector n\u00e9zet\u00e9t a b\u00f6ng\u00e9sz\u0151ben \u00e1ltal\u00e1ban az F12 billenty\u0171vel nyithatjuk meg. Vizsg\u00e1ljuk meg, mit k\u00edn\u00e1lnak a b\u00f6ng\u00e9sz\u0151kbe \u00e9p\u00edtett hibakeres\u0151 eszk\u00f6z\u00f6k! A laborvezet\u0151 \u00e1ltal kijel\u00f6lt b\u00f6ng\u00e9sz\u0151n navig\u00e1ljunk a www.aut.bme.hu oldalra \u00e9s vizsg\u00e1ljuk meg az oldal fel\u00e9p\u00edt\u00e9s\u00e9t! Nyissuk meg a hibakeres\u00e9si eszk\u00f6zt\u00e1rat az F12-vel, n\u00e9zz\u00fck meg, milyen lehet\u0151s\u00e9geink vannak! A Chrome, Internet Explorer, Edge \u00e9s Firefox b\u00f6ng\u00e9sz\u0151k eszk\u00f6zk\u00e9szlete kisebb elt\u00e9r\u00e9sekt\u0151l eltekintve megegyezik, a leggyakoribb funkci\u00f3k az al\u00e1bbiak: A dokkol\u00e1s m\u00f3dja megadhat\u00f3: az ablak als\u00f3 r\u00e9sz\u00e9re vagy oldal\u00e1ra is (Chrome, Firefox) dokkolhat\u00f3 az eszk\u00f6zt\u00e1r, ill. kivehet\u0151 a saj\u00e1t ablak\u00e1ba. DOM vizsg\u00e1lata (DOM Explorer, Elements, Inspector) : a dokumentumfa fel\u00e9p\u00edt\u00e9s\u00e9t tudjuk megvizsg\u00e1lni, l\u00e1that\u00f3 a kirajzolt HTML tartalom. Lehet\u0151s\u00e9g\u00fcnk van szerkeszteni az elemeket, besz\u00farni attrib\u00fatumokat, elemeket, t\u00f6r\u00f6lni \u0151ket. Kiv\u00e1laszthat\u00f3 egy DOM elem eg\u00e9rrel a kirajzolt oldalon vagy a sz\u00f6veges megjelen\u00edt\u0151ben is. Egy elemet kiv\u00e1lasztva jobb oldalon az elemre illeszked\u0151 st\u00edluslap-szab\u00e1lyok (CSS) l\u00e1that\u00f3k, ezek is szerkeszthet\u0151k. JavaScript konzol (Console) : a JavaScript standard outputja a konzol, az alkalmaz\u00e1sok \u00e1ltal \u00edrt tartalmak itt l\u00e1that\u00f3k. Lehet\u0151s\u00e9g\u00fcnk van k\u00f3d futtat\u00e1s\u00e1ra is a konzol ablakban, ami azonnal ki\u00e9rt\u00e9kel\u0151dik. H\u00e1l\u00f3zat (Network) : a Fiddlerhez hasonl\u00f3an l\u00e1thatjuk a kimen\u0151 k\u00e9r\u00e9seket \u00e9s a r\u00e1juk \u00e9rkez\u0151 v\u00e1laszokat. El\u0151nye, hogy csak a konkr\u00e9t oldalhoz tartozik, nem a teljes b\u00f6ng\u00e9sz\u0151h\u00f6z, \u00edgy k\u00f6nnyebb lesz\u0171rn\u00fcnk, melyik k\u00e9r\u00e9sek tartoznak melyik alkalmaz\u00e1shoz/oldalhoz. L\u00e1that\u00f3k a pontos id\u0151z\u00edt\u00e9sek is, HTTP k\u00e9r\u00e9sek ind\u00edt\u00e1s\u00e1t viszont nem lehets\u00e9ges k\u00e9zzel megejten\u00fcnk a be\u00e9p\u00edtett lehet\u0151s\u00e9gekkel. Hibakeres\u0151 (Debugger) : az oldalhoz bet\u00f6lt\u00f6tt JavaScript forr\u00e1sk\u00f3d hibakeres\u00e9s\u00e9t teszi lehet\u0151v\u00e9. Teljes\u00edtm\u00e9nym\u00e9r\u0151k : k\u00fcl\u00f6nb\u00f6z\u0151 teljes\u00edtm\u00e9nym\u00e9r\u0151 eszk\u00f6z\u00f6k \u00e1llnak rendelkez\u00e9s\u00fcnkre a weboldalak elemz\u00e9s\u00e9hez, amik jellemz\u0151en a mem\u00f3ria- \u00e9s processzorhaszn\u00e1latot m\u00e9rik. Emul\u00e1ci\u00f3 : a b\u00f6ng\u00e9sz\u0151kbe \u00e9p\u00edtett emul\u00e1ci\u00f3s lehet\u0151s\u00e9gek korl\u00e1tozottak, \u00e1ltal\u00e1ban csak a user agent string cser\u00e9j\u00e9t \u00e9s a kirajzol\u00f3 ter\u00fclet felbont\u00e1s\u00e1t \u00e1ll\u00edtj\u00e1k \u00e1t (mag\u00e1t a b\u00f6ng\u00e9sz\u0151motort term\u00e9szetesen nem cser\u00e9lik le fut\u00e1si id\u0151ben, ami a val\u00f3di hib\u00e1k jelent\u0151s r\u00e9sz\u00e9\u00e9rt felel\u0151s). Az eszk\u00f6z\u00f6k legal\u00e1bb alapszint\u0171 ismerete (els\u0151sorban a DOM Explorer, Console \u00e9s Network haszn\u00e1lata) a laborokon elengedhetetlen. Feladat 3 - Szemantikus HTML \u00b6 A HTML (HyperText Markup Language) a web nyelve. A b\u00f6ng\u00e9sz\u0151k els\u0151sorban HTTP-n kereszt\u00fcl eljuttatott HTML tartalom kirajzol\u00e1s\u00e1\u00e9rt \u00e9s feldolgoz\u00e1s\u00e1\u00e9rt felel\u0151sek. A HTML egy XML-szer\u0171 nyelv, amelyben elemek (tag) \u00edrj\u00e1k le a dokumentumunkat. Az egyes elemeknek lehetnek tulajdons\u00e1gai, amiket attrib\u00fatumoknak (attribute) nevez\u00fcnk. Az attrib\u00fatum \u00e9rt\u00e9ke leggyakrabban sz\u00e1m, sz\u00f6veg, korl\u00e1tozott \u00e9rt\u00e9kk\u00e9szlet\u0171 sz\u00f6veg (enumer\u00e1ci\u00f3), ritk\u00e1bban felsorol\u00e1s vagy objektum lehet. A HTML-ben bizonyos szab\u00e1lyrendszernek kell eleget tenn\u00fcnk: megk\u00f6t\u00e9sek vonatkoznak arra, hogy milyen jelleg\u0171 elemeket milyen m\u00e1s elemekben helyezhet\u00fcnk el. A szemantikus web alapelve, hogy a HTML elemeink ne csak klasszikus \"t\u00e1rol\u00f3\" funkcionalit\u00e1st l\u00e1ssanak el, hanem jelent\u00e9st is hordozzanak. El\u0151nye kett\u0151s: g\u00e9pi \u00e9s emberi feldolgoz\u00e1sa egyar\u00e1nt egyszer\u0171bb. Fontos , hogy a HTML-ben v\u00e9tett esetleges hib\u00e1k csendes hib\u00e1k, az esetleges hib\u00e1s elhelyez\u00e9sek vagy helytelen form\u00e1z\u00e1s/szintaxis k\u00f6vetkezt\u00e9ben a b\u00f6ng\u00e9sz\u0151 meg fogja jelen\u00edteni az oldalt, amennyire a HTML alapj\u00e1n azt meg tudja tenni. Egy lemaradt </lez\u00e1r\u00f3 tag> pl. nem minden esetben rontja el a HTML oldal kin\u00e9zet\u00e9t, de okozhat nemk\u00edv\u00e1natos mell\u00e9khat\u00e1sokat. Forr\u00e1s: https://internetingishard.com/html-and-css/semantic-html/ N\u00e9zz\u00fck meg, mik\u00e9nt jav\u00edtja a HTML szemantikus fel\u00e9p\u00edt\u00e9se az alkalmaz\u00e1sunkat! Nyissuk meg a GitHub Classroom lekl\u00f3nozott beadand\u00f3j\u00e1nak repositoryj\u00e1t, aminek gy\u00f6k\u00e9r k\u00f6nyvt\u00e1r\u00e1t nyissuk meg a VS Code szerkeszt\u0151ben! A feladat3/index.html f\u00e1jlban dolgozzunk \u00e9s a megoldas \u00e1gra pusholjunk. A k\u00f3d k\u00f6nnyen \u00e9rtelmezhet\u0151, az egyes elemek nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag-je k\u00f6z\u00f6tt tal\u00e1lhat\u00f3k a hozz\u00e1rendelt gyerekelemek. A whitespace-ek, beh\u00faz\u00e1sok csak az olvashat\u00f3s\u00e1got seg\u00edtik. Nyissuk meg VS Code-ban a Terminalt (Ctrl+\u00f6, vagy View > Terminal), ami egy be\u00e9p\u00edtett Powershell futtat\u00f3k\u00f6rnyezetet ad. Itt adjuk ki az al\u00e1bbi parancsot: http-server Navig\u00e1ljunk a b\u00f6ng\u00e9sz\u0151ben a http://localhost:8080/ URL-re, \u00e9s tesztelj\u00fck le, mit l\u00e1tunk! L\u00e1thatjuk, hogy a sz\u00f6vegek form\u00e1z\u00e1s\u00e1t nem a whitespace-ek, hanem az elemek t\u00edpusa adja. Ha szeretn\u00e9nk l\u00e1tni, melyik elem hol helyezkedik el a fel\u00fcleten ill. a DOM-ban, az F12 eszk\u00f6zt\u00e1ron, a DOM Explorer fels\u0151 sor\u00e1n lev\u0151 ikonokkal v\u00e1ltoztathatjuk, hogy a fel\u00fcleten navig\u00e1lva a DOM elem kijel\u00f6l\u0151dj\u00f6n-e, ill. a DOM-ban navig\u00e1lva a fel\u00fcleten jelezve legyen-e a kiv\u00e1lasztott elem. Az alap\u00e9rtelmezett form\u00e1z\u00e1st a b\u00f6ng\u00e9sz\u0151k be\u00e9p\u00edtetten adj\u00e1k, ez\u00e9rt nagyobbak az egyes c\u00edmsor ( <h1> , <h2> ) mez\u0151k, ill. ez\u00e9rt t\u00f6rik a <div> (ami blockszint\u0171 elem), \u00e9s marad foly\u00f3sz\u00f6veg a <span> (ami inline). A be\u00e9p\u00edtett st\u00edlusokat megvizsg\u00e1lhatjuk egy elemet kijel\u00f6lve a jobb oldali panel Computed f\u00fcl\u00e9n az \u00e1br\u00e1n jel\u00f6lt ikonra kattintva (ne legyen enged\u00e9lyezve a 'Display user styles only' lehet\u0151s\u00e9g). Forr\u00e1s: https://internetingishard.com/html-and-css/semantic-html/ M\u00f3dos\u00edtsa a HTML dokumentum tartalm\u00e1t \u00fagy, hogy szemantikus elemeket haszn\u00e1l a nemszemantikus (pl. div) elemek helyett! A sz\u00fcks\u00e9ges elemek: article , aside , figure , figcaption , footer , header , main , nav , section Szeml\u00e9ltesse az \u00edgy elk\u00e9sz\u00fclt dokumentum r\u00e9szletes szemantikus k\u00f6rvonal\u00e1t! https://hoyois.github.io/html5outliner/ BEADAND\u00d3 (1.5 pont) Az \u00edgy k\u00e9sz\u00fclt outline-r\u00f3l k\u00e9sz\u00edtett k\u00e9perny\u0151k\u00e9pet adja be f3.png n\u00e9ven a repository gy\u00f6ker\u00e9ben! Az index.html m\u00f3dos\u00edt\u00e1sait is commitolja! Feladat 4 - HTML \u0171rlapok \u00b6 A HTML \u0171rlapok egys\u00e9ges, megszokott adatbeviteli eszk\u00f6zk\u00e9nt szolg\u00e1lnak sz\u00e1munkra a felhaszn\u00e1l\u00f3val val\u00f3 kommunik\u00e1ci\u00f3ra. Az el\u0151ad\u00e1son elhangzottak gyakorl\u00e1sak\u00e9nt \u00e1ll\u00edtson \u00f6ssze egy \u0171rlapot a feladat5/form.html f\u00e1jlba, mely megfelel az al\u00e1bbi felt\u00e9teleknek: Az \u0171rlap az al\u00e1bbi adatokat k\u00e9ri be a fel\u00fcleten a felhaszn\u00e1l\u00f3t\u00f3l (a *-gal jel\u00f6lt mez\u0151k k\u00f6telez\u0151en kit\u00f6ltend\u0151k): N\u00e9v*: sz\u00f6veges mez\u0151 Jelsz\u00f3*: jelsz\u00f3 mez\u0151 (nem l\u00e1that\u00f3 karakterek \u2013 haszn\u00e1lja a \"mobweb\" jelsz\u00f3t szeml\u00e9ltet\u00e9sre) Le\u00edr\u00e1s: sz\u00f6veges mez\u0151, t\u00f6bbsoros Sz\u00fclet\u00e9si d\u00e1tum*: d\u00e1tum Nem: fi\u00fa/l\u00e1ny/egy\u00e9b, leg\u00f6rd\u00fcl\u0151 men\u00fcb\u0151l L\u00e1bm\u00e9ret: sz\u00e1m, 0.5-\u00f6s l\u00e9pt\u00e9kkel Kutya: igen/nem, jel\u00f6l\u0151n\u00e9gyzettel megadhat\u00f3 Minden mez\u0151h\u00f6z tartozzon egy c\u00edmke is, amely t\u0151le balra helyezkedjen el! A c\u00edmk\u00e9re kattintva a f\u00f3kusz ker\u00fclj\u00f6n a relev\u00e1ns mez\u0151be (haszn\u00e1lja az id \u00e9s for attrib\u00fatumokat)! Az egyes mez\u0151k egym\u00e1s alatt helyezkedjenek el! Legyen egy K\u00fcld\u00e9s felirat\u00fa gomb, amely az adatokat a saj\u00e1t szerver\u00fcnknek k\u00fcldi a /postform.html URL-re, ahol egy egyszer\u0171 oldal jelenjen meg GET k\u00e9r\u00e9s hat\u00e1s\u00e1ra (POST k\u00e9r\u00e9s eset\u00e9n nem sz\u00fcks\u00e9ges bet\u00f6lt\u0151dnie az oldalnak, de az URL legyen ugyanez)! Tipp: Sz\u00fcks\u00e9ges elemek: form , input , label , option , select , textarea . Sz\u00fcks\u00e9ges attrib\u00fatumok: action , for , id , method , name , required , step , type , value . BEADAND\u00d3 (1.5 pont) Commitolja a form.html m\u00f3dos\u00edtott tartalm\u00e1t! K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet f5a.png n\u00e9ven tetsz\u0151leges b\u00f6ng\u00e9sz\u0151ben a teljesen kit\u00f6lt\u00f6tt \u0171rlapr\u00f3l, amin pontosan egy valid\u00e1ci\u00f3s hiba tal\u00e1lhat\u00f3! Demonstr\u00e1lja Fiddlerrel \u00e9s a b\u00f6ng\u00e9sz\u0151 Network f\u00fcl\u00e9nek seg\u00edts\u00e9g\u00e9vel az \u0171rlapadatok elk\u00fcld\u00e9s\u00e9nek t\u00e9ny\u00e9t GET f5b.png \u00e9s POST f5c.png ig\u00e9k haszn\u00e1lat\u00e1val is!","title":"Labor 08 - HTTP, HTML"},{"location":"laborok/08-http/#labor-08-http-html","text":"","title":"Labor 08 - HTTP, HTML"},{"location":"laborok/08-http/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A f\u00e9l\u00e9v sor\u00e1n felhaszn\u00e1lt eszk\u00f6z\u00f6k: Telerik Fiddler , haszn\u00e1lhat\u00f3 az OS X / Linux verzi\u00f3n is futtathat\u00f3 Fiddler Everywhere verzi\u00f3 is, ekkor viszont a k\u00fcl\u00f6nbs\u00e9gekb\u0151l fakad\u00f3 esetleges kellemetlens\u00e9gek\u00e9rt nem v\u00e1llalunk felel\u0151ss\u00e9get, k\u00f6zvetlen link: FiddlerSetup.exe , webb\u00f6ng\u00e9sz\u0151k be\u00e9p\u00edtett hibakeres\u0151 eszk\u00f6zei, Visual Studio Code k\u00f3dszerkeszt\u0151 alkalmaz\u00e1s, otthoni vagy egy\u00e9ni munkav\u00e9gz\u00e9shez haszn\u00e1lhat\u00f3 b\u00e1rmilyen m\u00e1s k\u00f3dszerkeszt\u0151 vagy fejleszt\u0151k\u00f6rnyezet, npm, a NodeJS csomagkezel\u0151je, a http-server npm csomag, ami egy nagyon egyszer\u0171, fejleszt\u00e9si c\u00e9lra sz\u00e1nt HTTP kiszolg\u00e1l\u00f3 ha a g\u00e9pen nincsen telep\u00edtve a http-server, azt az npm install -g http-server paranccsal lehet telep\u00edteni a NodeJS telep\u00edt\u00e9s\u00e9t k\u00f6vet\u0151en, majd parancssorban a http-server parancs kiad\u00e1s\u00e1val egy \u00faj HTTP szerver indul, ami az aktu\u00e1lis munkamappa tartalm\u00e1t szolg\u00e1lja ki. Az npm parancs futtat\u00e1s\u00e1hoz telep\u00edtett NodeJS-re is sz\u00fcks\u00e9g van. Amelyik laboron ezeken fel\u00fcl tov\u00e1bbi eszk\u00f6z\u00f6kre lesz sz\u00fcks\u00e9g, ott a labor bevezet\u0151j\u00e9ben ezt jelezz\u00fck.","title":"Bevezet\u00e9s"},{"location":"laborok/08-http/#elokeszulet","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github .","title":"El\u0151k\u00e9sz\u00fclet"},{"location":"laborok/08-http/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/08-http/#feladat-1-http-hibakereses","text":"A Fiddler a Telerik c\u00e9g ingyenes term\u00e9ke, az egyik leggyakrabban haszn\u00e1lt webes hibakeres\u0151 (debugger) eszk\u00f6z. A Fiddler egy k\u00f6zbe\u00e9kel\u0151d\u00e9ses \u201et\u00e1mad\u00e1st\u201d (man in the middle attack) j\u00e1tszik el a gazda sz\u00e1m\u00edt\u00f3g\u00e9pen az\u00e1ltal, hogy proxy-k\u00e9nt viselkedik. A sz\u00e1m\u00edt\u00f3g\u00e9pr\u0151l kifel\u00e9 indul\u00f3 HTTP k\u00e9r\u00e9seinket elkapja, napl\u00f3zza azokat feldolgoz\u00e1s \u00e9s a fel\u00fcleten t\u00f6rt\u00e9n\u0151 megjelen\u00edt\u00e9s c\u00e9lj\u00e1b\u00f3l, majd elk\u00fcldi az eredeti c\u00edmzett fel\u00e9. Ugyanezt a sorozatot j\u00e1tssza el a visszair\u00e1nyban is, amikor a g\u00e9p\u00fcnk a h\u00e1l\u00f3zatr\u00f3l kap adatot. Ind\u00edtsuk el a Fiddler alkalmaz\u00e1st! Ne z\u00e1rjuk be a Fiddler alkalmaz\u00e1st! Ind\u00edtsuk el a Windows be\u00e9p\u00edtett proxy be\u00e1ll\u00edt\u00f3 fel\u00fclet\u00e9t! Ind\u00edtsuk el a Windows be\u00e9p\u00edtett proxy be\u00e1ll\u00edt\u00f3 fel\u00fclet\u00e9t! A Windows billenty\u0171t nyomjuk le, a Start men\u00fc megny\u00edl\u00e1sa ut\u00e1n g\u00e9pelj\u00fck be: \"proxy\", \u00e9s nyissuk meg a proxybe\u00e1ll\u00edt\u00e1sokat! BEADAND\u00d3 (0.5 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet arr\u00f3l f1a.png n\u00e9ven, hogyan m\u00f3dos\u00edtja a Fiddler a proxy be\u00e1ll\u00edt\u00e1sokat a Windows proxy be\u00e1ll\u00edt\u00e1sai k\u00f6z\u00f6tt \u00e9s a Telerik Fiddler Options > Connections f\u00fcl\u00f6n! Ha bez\u00e1rjuk a Fiddlert, l\u00e1thatjuk, hogy vissza\u00e1ll\u00edtja a proxybe\u00e1ll\u00edt\u00e1sokat a kiindul\u00f3 \u00e1llapotra. Ind\u00edtsuk el ism\u00e9t, hogy meg tudjuk vizsg\u00e1lni a h\u00e1l\u00f3zati forgalmat! Miel\u0151tt haszn\u00e1ljuk az eszk\u00f6zt, sz\u00fcks\u00e9ges lehet a HTTPS forgalom felold\u00e1sa, amihez egy egyedi tan\u00fas\u00edtv\u00e1nyt kell telep\u00edten\u00fcnk a g\u00e9p\u00fcnkre. Ezt a Tools -> Options -> HTTPS lehet\u0151s\u00e9gn\u00e9l kezdem\u00e9nyezhetj\u00fck. A Fiddler fut\u00e1sa k\u00f6zben ind\u00edtsunk el egy b\u00f6ng\u00e9sz\u0151t, \u00e9s navig\u00e1ljunk a https://www.aut.bme.hu c\u00edmre ( figyelem, pontosan \u00edrjuk/m\u00e1soljuk be! )! Tekints\u00fck \u00e1t a program fel\u00fclet\u00e9t az \u00edgy keletkez\u0151 HTTP k\u00e9r\u00e9sek alapj\u00e1n! A Fiddler alapvet\u0151 fel\u00e9p\u00edt\u00e9se az al\u00e1bbi: HTTP k\u00e9r\u00e9sek id\u0151rendi list\u00e1ja: itt l\u00e1tjuk, hogy milyen k\u00e9r\u00e9seink mentek ki a h\u00e1l\u00f3zatra. A protokoll HTTP vagy HTTPS lehet, a Result a v\u00e1lasz\u00fczenetben \u00e9rkez\u0151 HTTP st\u00e1tuszk\u00f3dot jelzi. A Body mez\u0151ben l\u00e1thatjuk, hogy a v\u00e1lasz h\u00e1ny b\u00e1jt m\u00e9ret\u0171 volt. A bal oldali list\u00e1ban b\u00e1rmely k\u00e9r\u00e9st kiv\u00e1lasztva annak r\u00e9szleteit jobb oldalon l\u00e1thatjuk . Jobb eg\u00e9rgombbal a lista elemein lehet\u0151s\u00e9g\u00fcnk van azok \u00fajraj\u00e1tsz\u00e1s\u00e1ra . Lehet\u0151s\u00e9g\u00fcnk van a list\u00e1ban akt\u00edv sz\u0171r\u0151 be\u00e1ll\u00edt\u00e1s\u00e1ra pl. alkalmaz\u00e1s (process ID) vagy host alapj\u00e1n. A jobb oldali f\u00fcl\u00f6n alap\u00e9rtelmez\u00e9s szerint az Inspectors f\u00fcl van kiv\u00e1lasztva, ami az aktu\u00e1lisan kiv\u00e1lasztott HTTP k\u00e9r\u00e9s-v\u00e1lasz p\u00e1rost r\u00e9szletezi. A fels\u0151 panel a kimen\u0151 k\u00e9r\u00e9s panelje. A tabok sor\u00e1n v\u00e1ltogatva az \u00fczenetet k\u00fcl\u00f6nb\u00f6z\u0151 form\u00e1z\u00e1sokkal is megvizsg\u00e1lhatjuk, a fontosabbak: Headers : itt l\u00e1thatjuk a HTTP fejl\u00e9c legfontosabb elemeit, \u00fagy mint a HTTP ig\u00e9t \u00e9s protokollt, csoportokba szervezve a HTTP \u00fczenet tartalm\u00e1t. TextView : sz\u00f6veges n\u00e9zet. WebForms : \u0171rlapok k\u00fcld\u00e9se eset\u00e9n a param\u00e9terek nev\u00e9t \u00e9s \u00e9rt\u00e9k\u00e9t tartalmazza. Cookies : a felk\u00fcld\u00f6tt/fogadott s\u00fctik megjelen\u00edt\u00e9se. Raw : a nyers HTTP \u00fczenet megjelen\u00edt\u00e9se. JSON/XML : az \u00fczenet megjelen\u00edt\u00e9se JSON/XML objektumokk\u00e9nt (csak megfelel\u0151 form\u00e1tum eset\u00e9n). A jobb oldali panelen az **Inspector**t v\u00e1lasztva az als\u00f3 r\u00e9szen a v\u00e1laszb\u00f3l kinyerhet\u0151 adatok tal\u00e1lhat\u00f3k meg, ezek jelent\u0151s r\u00e9sze anal\u00f3g a k\u00e9r\u00e9s form\u00e1tum\u00e1val \u00e9s a Request panelen tal\u00e1lhat\u00f3 adatokkal. Egy fontos eszk\u00f6z lehet m\u00e9g sz\u00e1munkra a Composer , amellyel teljes HTTP k\u00e9r\u00e9st tudunk \u00f6ssze\u00e1ll\u00edtani \u00e9s elk\u00fcldeni.","title":"Feladat 1 - HTTP hibakeres\u00e9s"},{"location":"laborok/08-http/#keresek-vizsgalata","text":"Elemezz\u00fck a b\u00f6ng\u00e9sz\u0151 \u00e1ltal gener\u00e1lt k\u00e9r\u00e9seket! A b\u00f6ng\u00e9sz\u0151be a weboldal c\u00edm\u00e9nek be\u00edr\u00e1sa ut\u00e1n egy HTTP k\u00e9r\u00e9s indult meg a www.aut.bme.hu szerver ir\u00e1ny\u00e1ba (esetleg HTTP \u00e1tir\u00e1ny\u00edt\u00e1st k\u00f6vet\u0151en, ami a www n\u00e9lk\u00fcli vari\u00e1ns vagy a nem HTTPS vari\u00e1ns eset\u00e9n a megfelel\u0151 oldalra ir\u00e1ny\u00edt \u00e1t). A Fiddlerben megvizsg\u00e1lva k\u00f6vetkeztet\u00e9seket vonhatunk le a k\u00e9r\u00e9s-v\u00e1lasz adatai alapj\u00e1n. Laborg\u00e9peken elk\u00e9pzelhet\u0151, hogy a tan\u00fas\u00edtv\u00e1ny nincsen telep\u00edtve \u00e9s nincsen jogunk a telep\u00edt\u00e9shez. Ebben az esetben haladjunk a laborral a le\u00edrtaknak megfelel\u0151en, de minden esetben a HTTPS URL-ek helyett HTTP-t haszn\u00e1ljunk! A v\u00e1lasz ezekben az esetekben egy \u00e1tir\u00e1ny\u00edt\u00e1s lesz a szok\u00e1sos 200 OK v\u00e1lasz helyett. Az els\u0151 k\u00e9r\u00e9s az \u00e1ltalunk be\u00edrt webc\u00edmre ker\u00fclt kik\u00fcld\u00e9sre az al\u00e1bbi form\u00e1ban: GET https://www.aut.bme.hu/ HTTP / 1.1 Accept : text/html, application/xhtml+xml, image/jxr, */* Accept-Language : en-US,en;q=0.7,hu;q=0.3 User-Agent : Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063 Accept-Encoding : gzip, deflate Host : www.aut.bme.hu Connection : Keep-Alive A k\u00e9r\u00e9s GET ig\u00e9t haszn\u00e1lt, ez\u00e9rt nem tartozik hozz\u00e1 t\u00f6rzs (body) a k\u00fcld\u00f6tt HTTP \u00fczenetben. A HTTP \u00fczenet egyszer\u0171 sz\u00f6veges form\u00e1tum\u00fa , ember \u00e1ltal is olvashat\u00f3. A b\u00f6ng\u00e9sz\u0151 kulcs-\u00e9rt\u00e9k p\u00e1rok form\u00e1j\u00e1ban tov\u00e1bbi adatokat k\u00fcld\u00f6tt a szerver fel\u00e9, mint pl. a b\u00f6ng\u00e9sz\u0151t azonos\u00edt\u00f3 karakterl\u00e1ncot ( User-Agent ), a v\u00e1rt adat form\u00e1tum\u00e1t ( Accept , Accept-Encoding ), elt\u00e1rolt s\u00fctiket ( Cookie ) stb. \u00c9rdekess\u00e9g, hogy bizonyos kulcsok t\u00f6bbsz\u00f6r el\u0151fordulhatnak egy HTTP \u00fczenetben, ekkor az \u00f6sszes ugyanolyan kulcshoz tartoz\u00f3 \u00e9rt\u00e9kek egy kollekci\u00f3k\u00e9nt/t\u00f6mbk\u00e9nt \u00e9rtelmezhet\u0151k. Az els\u0151 elk\u00fcld\u00f6tt \u00fczenet ut\u00e1n tov\u00e1bbi HTTP k\u00e9r\u00e9sek indultak el a st\u00edluslapok (CSS), k\u00e9pek \u00e9s szkriptek (JavaScript) let\u00f6lt\u00e9s\u00e9\u00e9rt. Ennek az az oka, hogy a b\u00f6ng\u00e9sz\u0151 fel\u00e9p\u00edti a HTML oldalt, amiben a tov\u00e1bbi linkek tov\u00e1bbi HTTP k\u00e9r\u00e9seket induk\u00e1lnak. A k\u00e9r\u00e9s\u00fcnkre az al\u00e1bbi v\u00e1lasz \u00e9rkezett: HTTP / 1.1 200 OK Cache-Control : no-cache Pragma : no-cache Content-Type : text/html; charset=utf-8 Expires : -1 Vary : Accept-Encoding Server : Microsoft-IIS/8.0 X-AspNet-Version : 4.0.30319 Set-Cookie : AaitC=3495d86d-2b52-4b73-b020-80eb90069465; path=/; HttpOnly X-Powered-By : ASP.NET X-Frame-Options : deny Date : Wed, 18 Oct 2017 10:40:05 GMT Content-Length : 26940 <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html > < head > ... </ head > < body > ... </ body > </ html > A k\u00e9r\u00e9s sikeres volt, ezt a fejl\u00e9c elej\u00e9n tal\u00e1lhat\u00f3 st\u00e1tuszk\u00f3db\u00f3l \u00e9s st\u00e1tusz \u00fczenet\u00e9b\u0151l l\u00e1tjuk. A v\u00e1lasz form\u00e1tuma megegyezik a k\u00e9r\u00e9s form\u00e1tum\u00e1val: \u00fczenet c\u00edme, fejl\u00e9cek kulcs-\u00e9rt\u00e9k p\u00e1rokk\u00e9nt, \u00fcres sor, \u00e9s egy opcion\u00e1lis t\u00f6rzs. A fejl\u00e9cekben tal\u00e1lhat\u00f3 fontosabb elemek a szerver t\u00edpusa (Server), szerverid\u0151 (Date), a k\u00fcld\u00f6tt adat t\u00edpusa (Content-Type) \u00e9s m\u00e9rete b\u00e1jtban (Content-Length). Ezen k\u00edv\u00fcl a szerver a Set-Cookie headerrel k\u00e9t s\u00fctit \u00e1ll\u00edt be a kliensen, ill. k\u00fcl\u00f6nb\u00f6z\u0151 fejl\u00e9cekben defini\u00e1lja a gyors\u00edt\u00f3t\u00e1raz\u00e1shoz (cache) sz\u00fcks\u00e9ges szab\u00e1lyokat. A fejl\u00e9ceket egy \u00fcres sor k\u00f6veti, majd a HTTP \u00fczenet t\u00f6rzse k\u00f6vetkezik, ami egy HTML5 dokumentum. BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet f1b.png n\u00e9ven a k\u00e9r\u00e9sr\u0151l, amelyet a b\u00f6ng\u00e9sz\u0151 a www.aut.bme.hu c\u00edmre k\u00fcld\u00f6tt \u00e9s az ehhez tartoz\u00f3 v\u00e1laszr\u00f3l! A v\u00e1lasz \u00e9s a k\u00e9r\u00e9s is nyers (Raw) form\u00e1tumban legyen l\u00e1that\u00f3! Vegy\u00fck \u00e9szre, hogy a HTTP k\u00e9r\u00e9s\u00fcnkh\u00f6z tartoz\u00f3 v\u00e1lasz kiz\u00e1r\u00f3lag a kor\u00e1bban elk\u00fcld\u00f6tt k\u00e9r\u00e9s\u00fcnkben megtal\u00e1lhat\u00f3 inform\u00e1ci\u00f3k alapj\u00e1n k\u00e9sz\u00fclt el! Ez jelenti azt, hogy a HTTP \u00e1llapotmentes : az \u00e1ltalunk elk\u00fcld\u00f6tt k\u00e9r\u00e9s alapj\u00e1n kapjuk meg a v\u00e1laszt, tov\u00e1bbi \u00e1llapoinform\u00e1ci\u00f3kat nem felt\u00e9telezhet\u00fcnk a szerver r\u00e9sz\u00e9r\u0151l. Ez nem \u00f6sszekeverend\u0151 azzal, hogy a szerver vagy kliens t\u00e1rol-e \u00e1llapotot vagy sem : napjainkban mindk\u00e9t oldalon t\u00e1rolunk inform\u00e1ci\u00f3t az \u00e1llapotunkkal kapcsolatban, viszont a k\u00e9r\u00e9sben tal\u00e1lhat\u00f3 meg minden olyan inform\u00e1ci\u00f3, ami alapj\u00e1n a szerver azonos\u00edtani tudja a k\u00e9r\u0151t \u00e9s a k\u00e9r\u00e9si ig\u00e9nyt, ami alapj\u00e1n \u00f6ssze\u00e1ll\u00edtja a v\u00e1laszt.","title":"K\u00e9r\u00e9sek vizsg\u00e1lata"},{"location":"laborok/08-http/#keresek-inditasa","text":"\u00c1ll\u00edtsunk \u00f6ssze egy egyszer\u0171 HTTP k\u00e9r\u00e9st a Fiddlerb\u0151l! Navig\u00e1ljunk a jobb oldali panelen a Composer f\u00fclre! Itt lehet\u0151s\u00e9g\u00fcnk van \u00f6ssze\u00e1ll\u00edtani egy HTTP \u00fczenetet. A Parsed lehet\u0151s\u00e9g kicsit szofisztik\u00e1ltabb, nek\u00fcnk most megfelel\u0151 lesz a Raw (nyers) \u00f6ssze\u00e1ll\u00edt\u00e1s is. K\u00fcldj\u00fck el az al\u00e1bbi HTTP \u00fczenetet \u00e9s vizsg\u00e1ljuk meg az erre \u00e9rkez\u0151 v\u00e1laszt: GET http://www.aut.bme.hu/ HTTP / 1.1 Fontos , hogy a fenti k\u00e9r\u00e9sben egy \u00fcres sor legyen a fejl\u00e9c ut\u00e1n, teh\u00e1t k\u00e9t Entert is kell \u00fctn\u00fcnk. BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a nyers HTTP v\u00e1laszr\u00f3l f1c.png n\u00e9ven! A fenti k\u00e9r\u00e9s\u00fcnk formailag helyes HTTP \u00fczenet: csak a HTTP ige, c\u00edm, \u00e9s protokoll megad\u00e1sa k\u00f6telez\u0151, az \u00f6sszes fejl\u00e9c opcion\u00e1lis, a t\u00f6rzs GET k\u00e9r\u00e9sn\u00e9l pedig nem szabv\u00e1nyos. Ha megvizsg\u00e1ljuk a k\u00e9r\u00e9s\u00fcnkre \u00e9rkez\u0151 v\u00e1laszokat, \u00e9s \u00f6sszehasonl\u00edtjuk a kor\u00e1bban a b\u00f6ng\u00e9sz\u0151nek k\u00fcld\u00f6tt v\u00e1lasszal (erre lehet\u0151s\u00e9g\u00fcnk van a k\u00e9t relev\u00e1ns \u00fczenetv\u00e1lt\u00e1st kijel\u00f6lve, majd a Compare lehet\u0151s\u00e9get haszn\u00e1lva), akkor l\u00e1thatjuk, hogy a k\u00e9r\u00e9s\u00fcnkre nem r\u00f6gt\u00f6n egy 200 OK v\u00e1lasz \u00e9rkezik, hanem el\u0151tte egy \u00e1tir\u00e1ny\u00edt\u00e1st kapunk a HTTPS v\u00e9gpontra.","title":"K\u00e9r\u00e9sek ind\u00edt\u00e1sa"},{"location":"laborok/08-http/#feladat-2-hibakereso-eszkozok","text":"Weboldalak k\u00e9sz\u00edt\u00e9sekor sz\u00fcks\u00e9g lehet a HTTP forgalom megvizsg\u00e1l\u00e1s\u00e1ra, viszont az esetek jelent\u0151s r\u00e9sz\u00e9ben elegend\u0151 lehet, ha a b\u00f6ng\u00e9sz\u0151 forgalm\u00e1t meg tudjuk vizsg\u00e1lni. A mai b\u00f6ng\u00e9sz\u0151k mindegyike tartalmaz eszk\u00f6z\u00f6ket, amellyel a weboldalak hibakeres\u00e9se nagyon egyszer\u0171en kezelhet\u0151v\u00e9 v\u00e1lik. A b\u00f6ng\u00e9sz\u0151k Inspector n\u00e9zet\u00e9t a b\u00f6ng\u00e9sz\u0151ben \u00e1ltal\u00e1ban az F12 billenty\u0171vel nyithatjuk meg. Vizsg\u00e1ljuk meg, mit k\u00edn\u00e1lnak a b\u00f6ng\u00e9sz\u0151kbe \u00e9p\u00edtett hibakeres\u0151 eszk\u00f6z\u00f6k! A laborvezet\u0151 \u00e1ltal kijel\u00f6lt b\u00f6ng\u00e9sz\u0151n navig\u00e1ljunk a www.aut.bme.hu oldalra \u00e9s vizsg\u00e1ljuk meg az oldal fel\u00e9p\u00edt\u00e9s\u00e9t! Nyissuk meg a hibakeres\u00e9si eszk\u00f6zt\u00e1rat az F12-vel, n\u00e9zz\u00fck meg, milyen lehet\u0151s\u00e9geink vannak! A Chrome, Internet Explorer, Edge \u00e9s Firefox b\u00f6ng\u00e9sz\u0151k eszk\u00f6zk\u00e9szlete kisebb elt\u00e9r\u00e9sekt\u0151l eltekintve megegyezik, a leggyakoribb funkci\u00f3k az al\u00e1bbiak: A dokkol\u00e1s m\u00f3dja megadhat\u00f3: az ablak als\u00f3 r\u00e9sz\u00e9re vagy oldal\u00e1ra is (Chrome, Firefox) dokkolhat\u00f3 az eszk\u00f6zt\u00e1r, ill. kivehet\u0151 a saj\u00e1t ablak\u00e1ba. DOM vizsg\u00e1lata (DOM Explorer, Elements, Inspector) : a dokumentumfa fel\u00e9p\u00edt\u00e9s\u00e9t tudjuk megvizsg\u00e1lni, l\u00e1that\u00f3 a kirajzolt HTML tartalom. Lehet\u0151s\u00e9g\u00fcnk van szerkeszteni az elemeket, besz\u00farni attrib\u00fatumokat, elemeket, t\u00f6r\u00f6lni \u0151ket. Kiv\u00e1laszthat\u00f3 egy DOM elem eg\u00e9rrel a kirajzolt oldalon vagy a sz\u00f6veges megjelen\u00edt\u0151ben is. Egy elemet kiv\u00e1lasztva jobb oldalon az elemre illeszked\u0151 st\u00edluslap-szab\u00e1lyok (CSS) l\u00e1that\u00f3k, ezek is szerkeszthet\u0151k. JavaScript konzol (Console) : a JavaScript standard outputja a konzol, az alkalmaz\u00e1sok \u00e1ltal \u00edrt tartalmak itt l\u00e1that\u00f3k. Lehet\u0151s\u00e9g\u00fcnk van k\u00f3d futtat\u00e1s\u00e1ra is a konzol ablakban, ami azonnal ki\u00e9rt\u00e9kel\u0151dik. H\u00e1l\u00f3zat (Network) : a Fiddlerhez hasonl\u00f3an l\u00e1thatjuk a kimen\u0151 k\u00e9r\u00e9seket \u00e9s a r\u00e1juk \u00e9rkez\u0151 v\u00e1laszokat. El\u0151nye, hogy csak a konkr\u00e9t oldalhoz tartozik, nem a teljes b\u00f6ng\u00e9sz\u0151h\u00f6z, \u00edgy k\u00f6nnyebb lesz\u0171rn\u00fcnk, melyik k\u00e9r\u00e9sek tartoznak melyik alkalmaz\u00e1shoz/oldalhoz. L\u00e1that\u00f3k a pontos id\u0151z\u00edt\u00e9sek is, HTTP k\u00e9r\u00e9sek ind\u00edt\u00e1s\u00e1t viszont nem lehets\u00e9ges k\u00e9zzel megejten\u00fcnk a be\u00e9p\u00edtett lehet\u0151s\u00e9gekkel. Hibakeres\u0151 (Debugger) : az oldalhoz bet\u00f6lt\u00f6tt JavaScript forr\u00e1sk\u00f3d hibakeres\u00e9s\u00e9t teszi lehet\u0151v\u00e9. Teljes\u00edtm\u00e9nym\u00e9r\u0151k : k\u00fcl\u00f6nb\u00f6z\u0151 teljes\u00edtm\u00e9nym\u00e9r\u0151 eszk\u00f6z\u00f6k \u00e1llnak rendelkez\u00e9s\u00fcnkre a weboldalak elemz\u00e9s\u00e9hez, amik jellemz\u0151en a mem\u00f3ria- \u00e9s processzorhaszn\u00e1latot m\u00e9rik. Emul\u00e1ci\u00f3 : a b\u00f6ng\u00e9sz\u0151kbe \u00e9p\u00edtett emul\u00e1ci\u00f3s lehet\u0151s\u00e9gek korl\u00e1tozottak, \u00e1ltal\u00e1ban csak a user agent string cser\u00e9j\u00e9t \u00e9s a kirajzol\u00f3 ter\u00fclet felbont\u00e1s\u00e1t \u00e1ll\u00edtj\u00e1k \u00e1t (mag\u00e1t a b\u00f6ng\u00e9sz\u0151motort term\u00e9szetesen nem cser\u00e9lik le fut\u00e1si id\u0151ben, ami a val\u00f3di hib\u00e1k jelent\u0151s r\u00e9sz\u00e9\u00e9rt felel\u0151s). Az eszk\u00f6z\u00f6k legal\u00e1bb alapszint\u0171 ismerete (els\u0151sorban a DOM Explorer, Console \u00e9s Network haszn\u00e1lata) a laborokon elengedhetetlen.","title":"Feladat 2 - Hibakeres\u0151 eszk\u00f6z\u00f6k"},{"location":"laborok/08-http/#feladat-3-szemantikus-html","text":"A HTML (HyperText Markup Language) a web nyelve. A b\u00f6ng\u00e9sz\u0151k els\u0151sorban HTTP-n kereszt\u00fcl eljuttatott HTML tartalom kirajzol\u00e1s\u00e1\u00e9rt \u00e9s feldolgoz\u00e1s\u00e1\u00e9rt felel\u0151sek. A HTML egy XML-szer\u0171 nyelv, amelyben elemek (tag) \u00edrj\u00e1k le a dokumentumunkat. Az egyes elemeknek lehetnek tulajdons\u00e1gai, amiket attrib\u00fatumoknak (attribute) nevez\u00fcnk. Az attrib\u00fatum \u00e9rt\u00e9ke leggyakrabban sz\u00e1m, sz\u00f6veg, korl\u00e1tozott \u00e9rt\u00e9kk\u00e9szlet\u0171 sz\u00f6veg (enumer\u00e1ci\u00f3), ritk\u00e1bban felsorol\u00e1s vagy objektum lehet. A HTML-ben bizonyos szab\u00e1lyrendszernek kell eleget tenn\u00fcnk: megk\u00f6t\u00e9sek vonatkoznak arra, hogy milyen jelleg\u0171 elemeket milyen m\u00e1s elemekben helyezhet\u00fcnk el. A szemantikus web alapelve, hogy a HTML elemeink ne csak klasszikus \"t\u00e1rol\u00f3\" funkcionalit\u00e1st l\u00e1ssanak el, hanem jelent\u00e9st is hordozzanak. El\u0151nye kett\u0151s: g\u00e9pi \u00e9s emberi feldolgoz\u00e1sa egyar\u00e1nt egyszer\u0171bb. Fontos , hogy a HTML-ben v\u00e9tett esetleges hib\u00e1k csendes hib\u00e1k, az esetleges hib\u00e1s elhelyez\u00e9sek vagy helytelen form\u00e1z\u00e1s/szintaxis k\u00f6vetkezt\u00e9ben a b\u00f6ng\u00e9sz\u0151 meg fogja jelen\u00edteni az oldalt, amennyire a HTML alapj\u00e1n azt meg tudja tenni. Egy lemaradt </lez\u00e1r\u00f3 tag> pl. nem minden esetben rontja el a HTML oldal kin\u00e9zet\u00e9t, de okozhat nemk\u00edv\u00e1natos mell\u00e9khat\u00e1sokat. Forr\u00e1s: https://internetingishard.com/html-and-css/semantic-html/ N\u00e9zz\u00fck meg, mik\u00e9nt jav\u00edtja a HTML szemantikus fel\u00e9p\u00edt\u00e9se az alkalmaz\u00e1sunkat! Nyissuk meg a GitHub Classroom lekl\u00f3nozott beadand\u00f3j\u00e1nak repositoryj\u00e1t, aminek gy\u00f6k\u00e9r k\u00f6nyvt\u00e1r\u00e1t nyissuk meg a VS Code szerkeszt\u0151ben! A feladat3/index.html f\u00e1jlban dolgozzunk \u00e9s a megoldas \u00e1gra pusholjunk. A k\u00f3d k\u00f6nnyen \u00e9rtelmezhet\u0151, az egyes elemek nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag-je k\u00f6z\u00f6tt tal\u00e1lhat\u00f3k a hozz\u00e1rendelt gyerekelemek. A whitespace-ek, beh\u00faz\u00e1sok csak az olvashat\u00f3s\u00e1got seg\u00edtik. Nyissuk meg VS Code-ban a Terminalt (Ctrl+\u00f6, vagy View > Terminal), ami egy be\u00e9p\u00edtett Powershell futtat\u00f3k\u00f6rnyezetet ad. Itt adjuk ki az al\u00e1bbi parancsot: http-server Navig\u00e1ljunk a b\u00f6ng\u00e9sz\u0151ben a http://localhost:8080/ URL-re, \u00e9s tesztelj\u00fck le, mit l\u00e1tunk! L\u00e1thatjuk, hogy a sz\u00f6vegek form\u00e1z\u00e1s\u00e1t nem a whitespace-ek, hanem az elemek t\u00edpusa adja. Ha szeretn\u00e9nk l\u00e1tni, melyik elem hol helyezkedik el a fel\u00fcleten ill. a DOM-ban, az F12 eszk\u00f6zt\u00e1ron, a DOM Explorer fels\u0151 sor\u00e1n lev\u0151 ikonokkal v\u00e1ltoztathatjuk, hogy a fel\u00fcleten navig\u00e1lva a DOM elem kijel\u00f6l\u0151dj\u00f6n-e, ill. a DOM-ban navig\u00e1lva a fel\u00fcleten jelezve legyen-e a kiv\u00e1lasztott elem. Az alap\u00e9rtelmezett form\u00e1z\u00e1st a b\u00f6ng\u00e9sz\u0151k be\u00e9p\u00edtetten adj\u00e1k, ez\u00e9rt nagyobbak az egyes c\u00edmsor ( <h1> , <h2> ) mez\u0151k, ill. ez\u00e9rt t\u00f6rik a <div> (ami blockszint\u0171 elem), \u00e9s marad foly\u00f3sz\u00f6veg a <span> (ami inline). A be\u00e9p\u00edtett st\u00edlusokat megvizsg\u00e1lhatjuk egy elemet kijel\u00f6lve a jobb oldali panel Computed f\u00fcl\u00e9n az \u00e1br\u00e1n jel\u00f6lt ikonra kattintva (ne legyen enged\u00e9lyezve a 'Display user styles only' lehet\u0151s\u00e9g). Forr\u00e1s: https://internetingishard.com/html-and-css/semantic-html/ M\u00f3dos\u00edtsa a HTML dokumentum tartalm\u00e1t \u00fagy, hogy szemantikus elemeket haszn\u00e1l a nemszemantikus (pl. div) elemek helyett! A sz\u00fcks\u00e9ges elemek: article , aside , figure , figcaption , footer , header , main , nav , section Szeml\u00e9ltesse az \u00edgy elk\u00e9sz\u00fclt dokumentum r\u00e9szletes szemantikus k\u00f6rvonal\u00e1t! https://hoyois.github.io/html5outliner/ BEADAND\u00d3 (1.5 pont) Az \u00edgy k\u00e9sz\u00fclt outline-r\u00f3l k\u00e9sz\u00edtett k\u00e9perny\u0151k\u00e9pet adja be f3.png n\u00e9ven a repository gy\u00f6ker\u00e9ben! Az index.html m\u00f3dos\u00edt\u00e1sait is commitolja!","title":"Feladat 3 - Szemantikus HTML"},{"location":"laborok/08-http/#feladat-4-html-urlapok","text":"A HTML \u0171rlapok egys\u00e9ges, megszokott adatbeviteli eszk\u00f6zk\u00e9nt szolg\u00e1lnak sz\u00e1munkra a felhaszn\u00e1l\u00f3val val\u00f3 kommunik\u00e1ci\u00f3ra. Az el\u0151ad\u00e1son elhangzottak gyakorl\u00e1sak\u00e9nt \u00e1ll\u00edtson \u00f6ssze egy \u0171rlapot a feladat5/form.html f\u00e1jlba, mely megfelel az al\u00e1bbi felt\u00e9teleknek: Az \u0171rlap az al\u00e1bbi adatokat k\u00e9ri be a fel\u00fcleten a felhaszn\u00e1l\u00f3t\u00f3l (a *-gal jel\u00f6lt mez\u0151k k\u00f6telez\u0151en kit\u00f6ltend\u0151k): N\u00e9v*: sz\u00f6veges mez\u0151 Jelsz\u00f3*: jelsz\u00f3 mez\u0151 (nem l\u00e1that\u00f3 karakterek \u2013 haszn\u00e1lja a \"mobweb\" jelsz\u00f3t szeml\u00e9ltet\u00e9sre) Le\u00edr\u00e1s: sz\u00f6veges mez\u0151, t\u00f6bbsoros Sz\u00fclet\u00e9si d\u00e1tum*: d\u00e1tum Nem: fi\u00fa/l\u00e1ny/egy\u00e9b, leg\u00f6rd\u00fcl\u0151 men\u00fcb\u0151l L\u00e1bm\u00e9ret: sz\u00e1m, 0.5-\u00f6s l\u00e9pt\u00e9kkel Kutya: igen/nem, jel\u00f6l\u0151n\u00e9gyzettel megadhat\u00f3 Minden mez\u0151h\u00f6z tartozzon egy c\u00edmke is, amely t\u0151le balra helyezkedjen el! A c\u00edmk\u00e9re kattintva a f\u00f3kusz ker\u00fclj\u00f6n a relev\u00e1ns mez\u0151be (haszn\u00e1lja az id \u00e9s for attrib\u00fatumokat)! Az egyes mez\u0151k egym\u00e1s alatt helyezkedjenek el! Legyen egy K\u00fcld\u00e9s felirat\u00fa gomb, amely az adatokat a saj\u00e1t szerver\u00fcnknek k\u00fcldi a /postform.html URL-re, ahol egy egyszer\u0171 oldal jelenjen meg GET k\u00e9r\u00e9s hat\u00e1s\u00e1ra (POST k\u00e9r\u00e9s eset\u00e9n nem sz\u00fcks\u00e9ges bet\u00f6lt\u0151dnie az oldalnak, de az URL legyen ugyanez)! Tipp: Sz\u00fcks\u00e9ges elemek: form , input , label , option , select , textarea . Sz\u00fcks\u00e9ges attrib\u00fatumok: action , for , id , method , name , required , step , type , value . BEADAND\u00d3 (1.5 pont) Commitolja a form.html m\u00f3dos\u00edtott tartalm\u00e1t! K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet f5a.png n\u00e9ven tetsz\u0151leges b\u00f6ng\u00e9sz\u0151ben a teljesen kit\u00f6lt\u00f6tt \u0171rlapr\u00f3l, amin pontosan egy valid\u00e1ci\u00f3s hiba tal\u00e1lhat\u00f3! Demonstr\u00e1lja Fiddlerrel \u00e9s a b\u00f6ng\u00e9sz\u0151 Network f\u00fcl\u00e9nek seg\u00edts\u00e9g\u00e9vel az \u0171rlapadatok elk\u00fcld\u00e9s\u00e9nek t\u00e9ny\u00e9t GET f5b.png \u00e9s POST f5c.png ig\u00e9k haszn\u00e1lat\u00e1val is!","title":"Feladat 4 - HTML \u0171rlapok"},{"location":"laborok/09-css/","text":"Labor 09 - CSS \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Feladat 1 - St\u00edluslapok, inline st\u00edlusok \u00b6 Webes HTML tartalmak st\u00edlusoz\u00e1s\u00e1ra CSS-t haszn\u00e1lunk. A CSS alapjai: szab\u00e1ly (mintailleszt\u00e9s) alap\u00fa, deklarat\u00edv programoz\u00e1si nyelv, DOM elemekhez megjelen\u00e9st rendel. A b\u00f6ng\u00e9sz\u0151ben megjelen\u00edtett HTML tartalmak alap\u00e9rtelmez\u00e9s szerint form\u00e1zatlanok, viszont bizonyos szab\u00e1lyokat a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezetten illeszt az egyes elemekre, az elem t\u00edpusa szerint. Vizsg\u00e1ljuk meg, milyen szab\u00e1lyokat illeszt a b\u00f6ng\u00e9sz\u0151 a HTML, a BODY, a DIV, a SPAN, a H1, H2, az A \u00e9s a B elemekre! Nyissuk meg a Visual Studio Code-ban a lekl\u00f3nozott repositorynkat, \u00e9s dolgozzunk a feladat1-3 mapp\u00e1ban l\u00e9v\u0151 index.html -ben. Sz\u00fcks\u00e9g\u00fcnk lesz egy webszerverre, ami ki tudja szolg\u00e1lni nek\u00fcnk a f\u00e1jlokat. Futtassuk az al\u00e1bbi parancsot a Terminal ( Ctrl+\u00f6 vagy View > Integrated Terminal ) ablakb\u00f3l: http-server Figyelem! \u00dcgyeljen r\u00e1, hogy a parancsot a megfelel\u0151 munkak\u00f6nyvt\u00e1rban adja ki, ahol a szerkesztett f\u00e1jl is tal\u00e1lhat\u00f3! Ez elind\u00edt nek\u00fcnk egy egyszer\u0171 HTTP szervert a g\u00e9p 8080-as portj\u00e1n ( http://localhost:8080/ ), ahonnan egyszer\u0171en ki tudjuk szolg\u00e1lni a mapp\u00e1ban lev\u0151 f\u00e1jlokat, ill. index.html f\u00e1jl hi\u00e1ny\u00e1ban egy f\u00e1jllist\u00e1z\u00f3 f\u0151oldalt kapunk. Navig\u00e1ljunk a http://localhost:8080/ URL-re a b\u00f6ng\u00e9sz\u0151ben! Nyissuk meg az itt l\u00e1that\u00f3 index.html f\u00e1jlt! Az al\u00e1bbit kell l\u00e1tnunk: Vegy\u00fck \u00e9szre, hogy az oldalhoz nem vett\u00fcnk fel saj\u00e1t st\u00edluslapot, valamilyen form\u00e1z\u00e1s m\u00e9gis \u00e9rv\u00e9nyes\u00fclt. Egyes elemek f\u00e9lk\u00f6v\u00e9rek, kisebbek-nagyobbak, elrendez\u00e9s\u00fck sorfolytonos vagy t\u00f6rdelt. Vizsg\u00e1ljuk meg, milyen szab\u00e1lyok \u00e9rv\u00e9nyes\u00fclnek az egyes elemekre! Nyissuk meg a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett fejleszt\u0151i eszk\u00f6zeit ( F12 )! Lehet\u0151s\u00e9g\u00fcnk van az elemeket kijel\u00f6lni ( Jobb klikk > Inspect Element ), megn\u00e9zni elhelyezked\u00e9s\u00fcket a fel\u00fcleten \u00e9s a DOM sz\u00f6veges reprezent\u00e1ci\u00f3j\u00e1ban egyar\u00e1nt. Fontos! A b\u00f6ng\u00e9sz\u0151k \u00e9s/vagy bizonyos szerverek t\u00fal agressz\u00edvan gyors\u00edt\u00f3t\u00e1razhatnak bizonyos f\u00e1jlokat, pl. a HTML \u00e9s CSS f\u00e1jljainkat, \u00edgy a v\u00e1ltoz\u00e1sokat nem biztos, hogy l\u00e1tni fogjuk egyszer\u0171 \u00fajrat\u00f6lt\u00e9s ut\u00e1n. Ha ez el\u0151fordul, a cache letilt\u00e1s\u00e1hoz a Developer Tools eszk\u00f6zt\u00e1ron ki kell kapcsolnunk a cache-t. Jellemz\u0151en a men\u00fcsor bal oldal\u00e1n tal\u00e1lhat\u00f3k a kijel\u00f6l\u00e9shez sz\u00fcks\u00e9ges m\u0171veletek ikonjai, jobb oldalon a r\u00e9szletes n\u00e9zet. A kiv\u00e1lasztott elemhez a jobb oldali Computed f\u00fcl\u00f6n a t\u00e9nylegesen \u00e9rv\u00e9nyre l\u00e9pett szab\u00e1lyokat l\u00e1thatjuk. Mivel nincs explicit CSS f\u00e1jlunk linkelve \u00e9s CSS szab\u00e1lyokat sem \u00edrtunk a HTML-ben, ez\u00e9rt kiz\u00e1r\u00f3lag a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett user agent stylesheet -je \u00e9rv\u00e9nyes\u00fcl. Itt l\u00e1thatjuk a CSS Box model**t is, ami az elem **tartalma , a hozz\u00e1 tartoz\u00f3 padding , border \u00e9s margin \u00e9rt\u00e9kek egym\u00e1sra halmoz\u00e1s\u00e1t jelenti a 2 dimenzi\u00f3s t\u00e9glalap oldalaihoz m\u00e9rten. A CSS felold\u00e1s\u00e1ban a cascading , azaz \"egym\u00e1sba \u00e1gyazhat\u00f3\" r\u00e9sz szerint t\u00f6bb st\u00edluslap l\u00e9tezik a sz\u00e1rmaz\u00e1s szempontj\u00e1b\u00f3l; mi most a b\u00f6ng\u00e9sz\u0151be be\u00e9p\u00edtett , \u00fan. user agent stylesheet -et l\u00e1tjuk. A user agent stylesheet alap\u00e9rtelmezetten nem biztos, hogy l\u00e1that\u00f3 a fel\u00fcleten, a Computed f\u00fcl\u00f6n van lehet\u0151s\u00e9g\u00fcnk ezek megtekint\u00e9s\u00e9t bekapcsolni (\"Browser styles\"/\"Show all\" stb. lehet\u0151s\u00e9gek): A fenti sz\u0171r\u0151t haszn\u00e1lva van lehet\u0151s\u00e9g\u00fcnk az alkalmazott CSS szab\u00e1lyok k\u00f6z\u00f6tt keresni is. A h1 , h2 \u00e9s b elemek alap\u00e9rtelmezetten f\u00e9lk\u00f6v\u00e9rek, ezt a font-weight: 700; tulajdons\u00e1g \u00edrja le nek\u00fcnk. A html , body , div , h1 , h2 elemek display tulajdons\u00e1ga block , a span , a \u00e9s b elemek pedig inline t\u00edpus\u00faak. A display: block; tulajdons\u00e1g\u00fa elemek egy blokkot (sort) foglalnak el az \u0151ket befoglal\u00f3 elemben, az inline t\u00edpus\u00faak sorfolytonosak (egym\u00e1s mellett is elhelyezkedhetnek). L\u00e1thatjuk, hogy a body elemen tal\u00e1lhat\u00f3 8px marg\u00f3 ( margin ) mind a 4 ir\u00e1nyban: BEADAND\u00d3 (0.5 pont) Egy-egy k\u00e9perny\u0151k\u00e9ppel al\u00e1t\u00e1masztva demonstr\u00e1lja az al\u00e1bbi k\u00e9rd\u00e9seket: Mekkora a margin , padding \u00e9s border \u00e9rt\u00e9ke az <ul> elemnek? f1.1.png H\u00e1ny pixel a (f\u00fcgg\u0151leges) t\u00e1vols\u00e1g a <h1> \u00e9s <h2> elemek tartalma k\u00f6z\u00f6tt (\u00fcgyelve az \u00e1tfed\u0151 marg\u00f3kra)? f1.2.png Eml\u00e9keztet\u0151 a CSS szab\u00e1lyok defini\u00e1l\u00e1s\u00e1hoz Saj\u00e1t CSS szab\u00e1lyokat t\u00f6bbf\u00e9le m\u00f3don tudunk az oldalunkhoz rendelni: CSS f\u00e1jlokra t\u00f6rt\u00e9n\u0151 hivatkoz\u00e1ssal, CSS szab\u00e1lyok felv\u00e9tel\u00e9vel a HTML tartalm\u00e1n bel\u00fcli <style> tagben, inline, a HTML elemek style attrib\u00fatum\u00e1nak be\u00e1ll\u00edt\u00e1s\u00e1val. \u00dctk\u00f6z\u0151 CSS szab\u00e1lyok k\u00f6z\u00fcl az \u00e9rv\u00e9nyes\u00fcl, amelynek nagyobb a specificit\u00e1sa (megegyez\u0151 specificit\u00e1s eset\u00e9ben az utolj\u00e1ra defini\u00e1lt). Eml\u00e9keztet\u0151k\u00e9nt a szab\u00e1lyok specificit\u00e1si sorrendje: inline st\u00edlus ( <div style=\"...\"> ), ID-k sz\u00e1ma ( #azonosito ), oszt\u00e1lyok, attrib\u00fatumok \u00e9s pszeudo-oszt\u00e1lyok sz\u00e1ma ( .osztaly , [attributum] , [attributum=\"ertek\"] , :hover ), pszeudo-elemek ( :before , :after ). A sorrendhez hozz\u00e1tartozik az !important kulcssz\u00f3, ami \u00f6nmag\u00e1ban a fentiekt\u0151l specifikusabb, viszont az !important szab\u00e1lyokra a fenti specificit\u00e1si sorrend szint\u00e9n \u00e9rv\u00e9nyes\u00fcl. A szab\u00e1lyok defini\u00e1l\u00e1sa: M\u00f3dos\u00edtsuk az oldal megjelen\u00e9s\u00e9t fut\u00e1si id\u0151ben! Rejts\u00fck el a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett st\u00edlusait, \u00e9s l\u00e1thatjuk, hogy kiz\u00e1r\u00f3lag az \u00fcres inline st\u00edlus illeszkedik \u00edgy az elemre. Itt hozz\u00e1 tudunk adni \u00faj inline st\u00edlust az elemhez. Ha \u00faj szab\u00e1lyt akarunk felvenni, akkor a kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00e9 kattintva tehetj\u00fck ezt meg, ezut\u00e1n az automatikus kieg\u00e9sz\u00edt\u00e9s funkci\u00f3val l\u00e1thatjuk az \u00f6sszes, a b\u00f6ng\u00e9sz\u0151 \u00e1ltal ismert CSS tulajdons\u00e1got (Firefox Developerben ezt az \u00fcres kurzoron a **fel-le nyilak**kal tehetj\u00fck meg, Edge-ben \u00e9s Chrome-ban a **Ctrl+sz\u00f3k\u00f6z**zel). Vegy\u00fck fel a <h1> elemhez az al\u00e1bbi CSS tulajdons\u00e1got: color : red ; K\u00f6zben vegy\u00fck \u00e9szre a DOM reprezent\u00e1ci\u00f3ban, hogy b\u00e1r a jobb oldali panelen szerkeszt\u00fcnk, pontosan ugyanaz t\u00f6rt\u00e9nik, mintha a HTML elem style attrib\u00fatum\u00e1t adtuk volna meg. Ha be\u00e1ll\u00edtjuk a font-weight: bold; tulajdons\u00e1got a <body> -n, akkor l\u00e1thatjuk, hogy az \u00f6sszes gyermek\u00e9re is \u00e9rv\u00e9nyes\u00fcl a szab\u00e1ly. Bizonyos szab\u00e1lyok \u00f6r\u00f6kl\u0151dnek (a font-weight ilyen), m\u00e1sok (p\u00e9ld\u00e1ul a padding \u00e9s margin ) viszont nem. Lehet\u0151s\u00e9g van esetenk\u00e9nt t\u00f6bb szab\u00e1ly aggreg\u00e1lt megad\u00e1s\u00e1ra is \u00fan. shorthandek haszn\u00e1lat\u00e1val. Gyakori p\u00e9ld\u00e1ul a 4-ir\u00e1ny\u00fa \u00e9rt\u00e9kad\u00e1s, ami a top-right-bottom-left ir\u00e1nysorrend szerint ad meg t\u00f6bb \u00e9rt\u00e9ket. A padding: 50px 30px 10px 5px; szab\u00e1ly mind a n\u00e9gy \u00e9rt\u00e9ket be\u00e1ll\u00edtja a fenti sorrend szerint. A padding: 10% 1mm; szab\u00e1ly a fenti-lenti \u00e9rt\u00e9keket 10%-ra, a jobb-balt 1 mm-re (a padding-top). A sz\u00e1zal\u00e9kos \u00e9rt\u00e9kek a sz\u00fcl\u0151 elem sz\u00e9less\u00e9g\u00e9hez viszony\u00edtottak (ha padding-top -ot vagy margin-bottom -ot adunk meg, akkor is sz\u00e9less\u00e9ghez). A padding: 0; mind a 4 oldalon 0-ra \u00e1ll\u00edtja a paddingot (nem sz\u00fcks\u00e9ges m\u00e9rt\u00e9kegys\u00e9g 0 eset\u00e9n). Inline st\u00edlusok Inline st\u00edlusokat csak kiv\u00e9teles esetekben haszn\u00e1ljunk, jellemz\u0151en programozottan (JavaScriptb\u0151l) elfogadott lehet egy elem megjelen\u00e9s\u00e9t ilyen m\u00f3don \u00e1ll\u00edtani, de a nyers HTML-ben nem! Feladat 2. - CSS \u00b6 Az oldalhoz alapvet\u0151en k\u00e9tf\u00e9le m\u00f3don van lehet\u0151s\u00e9g\u00fcnk st\u00edluslapot rendelni: k\u00fcls\u0151 CSS f\u00e1jlb\u00f3l vagy az oldalban defini\u00e1lt <style> tagben. Az index.html forr\u00e1sk\u00f3dj\u00e1t eg\u00e9sz\u00edts\u00fck ki, a <head> elembe helyezz\u00fck el az al\u00e1bbi k\u00f3dot: < style > ul { list-style : none ; padding : 0 ; } ul > li { float : left ; padding : 10 px ; min-width : 200 px ; border : 1 px solid grey ; } </ style > Ha friss\u00edtj\u00fck az oldalt (nem sz\u00fcks\u00e9ges \u00fajraind\u00edtani a szervert, csak menteni a f\u00e1jlt), akkor az elrendez\u00e9s m\u00f3dosul: a list\u00e1nkban a listaelemek egym\u00e1s mell\u00e9 ker\u00fclnek, \u00e9s a listaelemet jelz\u0151 p\u00f6tty elt\u0171nik. float: left A float: left; tulajdons\u00e1g \u00e1ll\u00edt\u00e1s\u00e1val nem ugyanazt \u00e9rj\u00fck el, mintha a listaelemet display: inline-block; -ra \u00e1ll\u00edtan\u00e1nk, mert az inline-block megtartja az egym\u00e1st k\u00f6vet\u0151 elemek k\u00f6z\u00f6tti whitespace-eket, a float: left; viszont nem. A float seg\u00edts\u00e9g\u00e9vel komplexebb elrendez\u00e9seket is el tudunk \u00e9rni, viszont a float-ol\u00e1st meg kell tudnunk sz\u00fcntetni. Ehhez a clear: both; \u00e9rt\u00e9ket \u00e1ll\u00edthatjuk be egy elemen. A float-ol\u00e1s azon kev\u00e9s CSS tulajdons\u00e1g egyike, ami az elemet sorban k\u00f6vet\u0151 tov\u00e1bbi testv\u00e9rekre is k\u00f6zvetlen\u00fcl hat. Az al\u00e1bbi szab\u00e1lyt haszn\u00e1lhatjuk a float-ol\u00e1s megsz\u00fcntet\u00e9s\u00e9hez, ekkor az <article> elemre a clearfix oszt\u00e1lyt alkalmazva az m\u00e1r \u00faj sorba is ker\u00fcl. . clearfix { clear : both ; } < article class = \"clearfix\" > <!-- ... --> </ article > A CSS szab\u00e1lyainknak az esetek nagy t\u00f6bbs\u00e9g\u00e9ben nem tesz j\u00f3t, ha t\u00fal \u00e1ltal\u00e1nosak. A fenti szab\u00e1lyok minden listaelemre \u00e1ltal\u00e1nosan illeszkedni fognak, ami ebben a konkr\u00e9t esetben nem j\u00f3 d\u00f6nt\u00e9s, ugyanis valahol az oldal t\u00f6rzs\u00e9ben lehet, hogy szeretn\u00e9nk haszn\u00e1lni a \"klasszikus\" list\u00e1s megjelen\u00edt\u00e9st is. Ez\u00e9rt a szab\u00e1lyunkat \u00e1t kell gondolnunk, specifikusabb szab\u00e1lyt \u00e9rdemes \u00edrni: ul . menu { list-style : none ; padding : 0 ; } ul . menu > li { float : left ; padding : 10 px ; min-width : 200 px ; border : 1 px solid grey ; } A fenti oszt\u00e1llyal megk\u00fcl\u00f6nb\u00f6ztett\u00fck a menu oszt\u00e1llyal ell\u00e1tott ul elemeket azokt\u00f3l, amiken nincs rajta az oszt\u00e1ly. A pszeudooszt\u00e1lyok haszn\u00e1lat\u00e1val az elemek k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotainak k\u00fcl\u00f6nb\u00f6z\u0151 st\u00edlust tudunk adni. Ha a listaelemek kijel\u00f6l\u00e9se a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra speci\u00e1lis \u00e1llapot, ezt \u00e9rdemes jelezn\u00fcnk a fel\u00fcleten. Haszn\u00e1ljuk az al\u00e1bbi szab\u00e1lyt: ul . menu > li : focus { font-weight : bold ; color : #44AA44 ; } \u00d6nmag\u00e1ban a focus pszeudooszt\u00e1ly haszn\u00e1lata nem elegend\u0151, ugyanis a li elem nem f\u00f3kusz\u00e1lhat\u00f3. A <li> elemen elhelyezett tabindex attrib\u00fatum jelzi a b\u00f6ng\u00e9sz\u0151nek, hogy az elem k\u00e9pes f\u00f3kuszt kapni: < ul class = \"menu\" > < li tabindex = \"1\" > Item 1 </ li > < li tabindex = \"2\" > Item 2 </ li > < li tabindex = \"3\" > Item 3 </ li > </ ul > Ezut\u00e1n lehets\u00e9ges az eg\u00e9r kattint\u00e1ssal vagy a Tab billenty\u0171 haszn\u00e1lat\u00e1val kijel\u00f6lni az elemet. A HTML-be \u00e1gyazott CSS-sel a probl\u00e9ma, hogy ugyanaz a st\u00edlus nem \u00fajrahasznos\u00edthat\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 oldalaink k\u00f6z\u00f6tt. Ez\u00e9rt \u00e9rdemes kiszervezni a CSS tartalmainkat a saj\u00e1t dedik\u00e1lt CSS f\u00e1jljainkba. A CSS tartalm\u00e1t mozgassuk \u00e1t a HTML <head> r\u00e9sz\u00e9b\u0151l egy \u00faj f\u00e1jlba az index.html mellett, legyen a neve index.css . A f\u00e1jlt a HTML-b\u0151l az al\u00e1bbi m\u00f3don tudjuk linkelni: tegy\u00fck az oldal <head> r\u00e9sz\u00e9be (a kor\u00e1bbi oldalon bel\u00fcli st\u00edlus-defin\u00edci\u00f3k hely\u00e9re) az al\u00e1bbi hivatkoz\u00e1st: < link rel = \"stylesheet\" type = \"text/css\" href = \"index.css\" > BEADAND\u00d3 (0.5 pont) K\u00e9perny\u0151k\u00e9ppel demonstr\u00e1lja, hogy: Az index.html let\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en az index.css f\u00e1jl is let\u00f6lt\u0151dik. ( f2.1.png ) Az <ul> lista elemei egym\u00e1s mellett helyezkednek el. ( f2.2.png ) Ehhez a HTML-t m\u00f3dos\u00edtani sz\u00fcks\u00e9ges \u00e9s commitolni. Az egyik listaelem kijel\u00f6lt \u00e1llapot\u00e1ban a bet\u0171sz\u00edn z\u00f6ld lesz, a karakterek f\u00e9lk\u00f6v\u00e9rek. ( f2.3.png ) Feladat 3 - Reszponz\u00edv elrendez\u00e9s \u00b6 A weboldalakat k\u00fcl\u00f6nb\u00f6z\u0151 k\u00e9perny\u0151m\u00e9ret\u0171 \u00e9s felbont\u00e1s\u00fa eszk\u00f6z\u00f6kr\u0151l szoktuk l\u00e1togatni. A t\u00fal r\u00e9szletes t\u00e1bl\u00e1zatok, hossz\u00fa, meg nem t\u00f6r\u0151 sorok nem felhaszn\u00e1l\u00f3bar\u00e1tak kisebb m\u00e9ret\u0171 kijelz\u0151k\u00f6n, m\u00e9g ha az eszk\u00f6z felbont\u00e1sa kell\u0151en nagy is. A mobil eszk\u00f6z\u00f6k ez\u00e9rt szorz\u00f3kat alkalmaznak a val\u00f3s \u00e9s a hasznos felbont\u00e1s k\u00f6z\u00f6tti megk\u00fcl\u00f6nb\u00f6ztet\u00e9sk\u00e9ppen. A reszponz\u00edv elrendez\u00e9s sor\u00e1n a legfontosabb koncepci\u00f3k k\u00f6z\u00e9 tartozik a sz\u00e9less\u00e9g f\u00fcggv\u00e9ny\u00e9ben t\u00f6rt\u00e9n\u0151 \u00e1tm\u00e9retez\u00e9se az oldalnak. Ezeket az al\u00e1bbi szintaxis alapj\u00e1n, \u00fan. media query-vel tudjuk implement\u00e1lni: . medium-only { display : none ; } @ media ( min-width : 768px ) and ( max-width : 991px ) { . medium-only { display : block ; } } A fenti szab\u00e1ly 768 \u00e9s 991 pixel k\u00f6z\u00f6tti sz\u00e9less\u00e9g\u0171 viewport-on jelenik meg, teh\u00e1t nem a k\u00e9perny\u0151 m\u00e9rete, hanem a rendelkez\u00e9sre \u00e1ll\u00f3 hely f\u00fcggv\u00e9ny\u00e9ben v\u00e1ltozik (pl. ablak \u00e1tm\u00e9retez\u00e9sekor is). A medium-only oszt\u00e1llyal ell\u00e1tott elemek csak ilyen k\u00e9perny\u0151m\u00e9reten jelennek meg, ugyanis a media query szab\u00e1ly specifikusabb, mint az azon k\u00edv\u00fcl defini\u00e1lt. Pr\u00f3b\u00e1ljuk ki, mi t\u00f6rt\u00e9nik, hogyha a k\u00e9t szab\u00e1ly sorrendj\u00e9t felcser\u00e9lj\u00fck! BEADAND\u00d3 (0.5 pont) K\u00e9perny\u0151k\u00e9pekkel demonstr\u00e1lja, hogy a fenti szab\u00e1lyt tetsz\u0151leges elemekre alkalmazva azok az ablak m\u00e9ret\u00e9nek f\u00fcggv\u00e9ny\u00e9ben l\u00e1that\u00f3k vagy el vannak rejtve! ( f3.1.png, f3.2.png ) Feladat 4 (\u00f6n\u00e1ll\u00f3) - CSS egy komplexebb feladatban (3.5 pont) \u00b6 Mostant\u00f3l a Feladat4 mapp\u00e1ban l\u00e9v\u0151 \u00e1llom\u00e1nyokkal dolgozzon. K\u00e9sz\u00edtse el a kiindul\u00f3 HTML oldal designj\u00e1t, mely megk\u00f6zel\u00edti a lenti k\u00e9peken l\u00e1that\u00f3 elrendez\u00e9st \u00e9s megjelen\u00e9st! Figyeljen r\u00e1, hogy a megval\u00f3s\u00edt\u00e1s sor\u00e1n nem alkalmazhat inline st\u00edlusokat, \u00e9s ker\u00fclje a HTML f\u00e1jl m\u00f3dos\u00edt\u00e1s\u00e1t. Fejl\u00e9c (1 pont) \u00b6 A fejl\u00e9c megjelen\u00e9s\u00e9t a navbar.css f\u00e1jlba k\u00e9sz\u00edtse el, amit el\u0151sz\u00f6r l\u00e9tre kell hozni. (A HTML oldal m\u00e1r hivatkozik r\u00e1.) Az oldalon fix fejl\u00e9c tal\u00e1lhat\u00f3 (teh\u00e1t a fejl\u00e9c nem t\u0171nik el, ha kig\u00f6rget\u00fcnk a tartalomb\u00f3l). \u00dcgyeljen r\u00e1, hogy a fejl\u00e9c ne takarja ki az oldal k\u00f6zponti tartalm\u00e1t! (Tipp: padding ) A fejl\u00e9c magass\u00e1ga 60px \u00e9s a h\u00e1ttere bord\u00f3! A log\u00f3 mellett egy 2 elemb\u0151l \u00e1ll\u00f3 men\u00fcsor tal\u00e1lhat\u00f3, ahol az elemek \u00e1tnavig\u00e1lnak rendre az index.html \u00e9s contact.html oldalakra az aktu\u00e1lis oldalr\u00f3l, megnevez\u00e9s\u00fck: F\u0151oldal , Kapcsolat (ezeket az oldalakat nem kell elk\u00e9sz\u00edtenie)! A men\u00fcsort <ul> \u00e9s <li> elemek haszn\u00e1lat\u00e1val struktur\u00e1lja. (Tipp: display: inline-block ) A men\u00fcpontok bet\u0171m\u00e9rete 1.1em legyen, el\u0151t\u00e9rsz\u00edne feh\u00e9r. Az egeret a men\u00fcpontra helyezve (Tipp: :hover pszeudoclass) a h\u00e1tt\u00e9rsz\u00edn valamelyest * t\u00e9tebb\u00e9 v\u00e1lik. A men\u00fcpontok sz\u00f6vege legyen f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtva. (Tipp: line-height ) A fejl\u00e9cben jobbra igaz\u00edtva tal\u00e1lhat\u00f3 egy Bejelentkez\u00e9s gomb (Tipp: float ). \u00dcgyeljen r\u00e1, hogy g\u00f6rget\u00e9skor a tartalom ne takarja ki a men\u00fcsort! (Tipp: z-index ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.1.png F\u0151 h\u00edr megjelen\u00edt\u00e9se (1 pont) \u00b6 A f\u0151 h\u00edr megjelen\u00e9s\u00e9t a news.css f\u00e1jlba k\u00e9sz\u00edtse el, amit el\u0151sz\u00f6r l\u00e9tre kell hozni. (A HTML oldal m\u00e1r hivatkozik r\u00e1.) A kezd\u0151oldalon a legfrissebb h\u00edr jelenik meg. A h\u00edrnek van egy fejl\u00e9ce amiben megtal\u00e1lhat\u00f3 a c\u00edm , szerz\u0151 , szerz\u0151 profil k\u00e9pe , publik\u00e1l\u00e1si d\u00e1tum . Ezeket a csatolt k\u00e9perny\u0151k\u00e9p alapj\u00e1n rendezze \u00e9s form\u00e1zza! A szerz\u0151 profil k\u00e9pe 80px x 80px. Ezek mellett jelenik meg a c\u00edm, a szerz\u0151 neve, \u00e9s a publik\u00e1l\u00e1s d\u00e1tuma. A profilk\u00e9p \u00e9s a sz\u00f6veg k\u00f6z\u00f6tt legyen 10px t\u00e1vols\u00e1g. A c\u00edm, szerz\u0151 neve \u00e9s publik\u00e1l\u00e1s d\u00e1tum\u00e1n\u00e1l \u00fagy \u00e1ll\u00edtsa \u00e1t a bet\u0171m\u00e9retet \u00e9s a marg\u00f3kat, hogy azok olyan magasak legyenek mint a k\u00e9p. A h\u00edr t\u00f6rzse egy bevezet\u0151 , k\u00e9p majd tov\u00e1bbi tartalomb\u00f3l \u00e1ll. A h\u00edrhez tartoz\u00f3 k\u00e9p legyen k\u00f6z\u00e9pre igaz\u00edtva. \u00dcgyeljen arra, hogy a sz\u00f6vegek tartsanak egys\u00e9gesen 16px t\u00e1vols\u00e1got a befoglal\u00f3 elemekt\u0151l. (Tipp: padding ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.2.png Oldals\u00f3 s\u00e1v (1 pont) \u00b6 Az oldals\u00f3 s\u00e1v megjelen\u00edt\u00e9s\u00e9t is a news.css f\u00e1jlba k\u00e9sz\u00edtse el. Az oldal alj\u00e1n tal\u00e1lhat\u00f3 kor\u00e1bbi h\u00edreket rendezze \u00fagy, hogy a f\u0151 h\u00edr jobb oldal\u00e1n jelenjenek meg Az oldals\u00e1v sz\u00e9less\u00e9ge fixen 350px legyen, a f\u0151 h\u00edr pedig a fennmarad\u00f3 helyet t\u00f6ltse ki (Tipp: width: calc(100% - oldals\u00e1g sz\u00e9less\u00e9ge - paddingok) ) Az oldals\u00e1v h\u00e1tt\u00e9rsz\u00edne legyen vil\u00e1gossz\u00fcrke. Ha a f\u0151 h\u00edr magasabb mint az oldals\u00e1v, akkor is \u00e9rjen le az oldals\u00e1v a l\u00e1bl\u00e9cig. (Tipp: position: absolute ) Ha az oldals\u00e1v magasabb, akkor pedig jelenjen meg a scrollbar az oldals\u00e1von. (Tipp: overflow: auto ) Az egyes h\u00edrek k\u00f6z\u00f6tt legyen egy elv\u00e1laszt\u00f3 vonal (Tipp: border-bottom ) \u00dcgyeljen r\u00e1, hogy az utols\u00f3 h\u00edr ut\u00e1n viszont m\u00e1r ne legyen elv\u00e1laszt\u00f3 vonal (Tipp: :last-child ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.3.png Reszponzivit\u00e1s (0.5 pont) \u00b6 Eg\u00e9sz\u00edtse ki a news.css f\u00e1jlt \u00fagy, hogy ha 900px-n\u00e9l kisebbre \u00e1ll\u00edtjuk az ablakot, akkor a jobb oldali s\u00e1v t\u0171nj\u00f6n el, \u00e9s a teljes oldalt a f\u0151 h\u00edr foglalja el. (Tipp: @media( max-width: 900px ) ) Tippek a megold\u00e1shoz: Haszn\u00e1lja a b\u00f6ng\u00e9sz\u0151 DOM vizualiz\u00e1l\u00f3 eszk\u00f6zt, \u00edgy l\u00e1thatja, hogy a kijel\u00f6lt elemre milyen CSS szab\u00e1lyok illeszkednek. Ha egy elemnek ki kell t\u00f6ltenie a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get, akkor minden \u0151s\u00e9nek a f\u00e1ban ki kell t\u00f6ltenie a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get, am\u00edg az sz\u00fcks\u00e9ges. Pl. a width: 100%; csak a k\u00f6zvetlen \u0151sre vonatkozik blokkszint\u0171 elemekn\u00e9l, ha az position: relative vagy nincs be\u00e1ll\u00edtva. Az elrendez\u00e9sn\u00e9l \u00e9rdemes figyelembe venni, hogy a position: absolute; \u00e9rt\u00e9k a DOM-ban az elemhez legk\u00f6zelebbi olyan \u0151sh\u00f6z poz\u00edcion\u00e1l, mely position: relative; . Ezut\u00e1n a top , right , bottom \u00e9s left tulajdons\u00e1gokat tudja be\u00e1ll\u00edtani pl. pixel vagy sz\u00e1zal\u00e9k \u00e9rt\u00e9k alapj\u00e1n, \u00edgy az adott \u0151sh\u00f6z poz\u00edcion\u00e1lja az elemet. Haszn\u00e1lhatja a calc() f\u00fcggv\u00e9nyt, mely egyszer\u0171 konstans \u00e9rt\u00e9kek sz\u00e1m\u00edt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, pl. width: calc(50% - 100px); . Fontos, hogy a sz\u00e1m\u00edtand\u00f3 \u00e9rt\u00e9kek k\u00f6z\u00f6tt mindenk\u00e9ppen sz\u00fcks\u00e9ges sz\u00f3k\u00f6zt tennie. @media query-ket az and \u00e9s az or logikai oper\u00e1torokkal tud egym\u00e1s ut\u00e1n f\u0171zni, pl. @media screen and (min-width: 200px) {...} , neg\u00e1lni a not kulcssz\u00f3val lehets\u00e9ges. BEADAND\u00d3 (0.5 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.4.png","title":"Labor 09 - CSS"},{"location":"laborok/09-css/#labor-09-css","text":"","title":"Labor 09 - CSS"},{"location":"laborok/09-css/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github .","title":"Bevezet\u00e9s"},{"location":"laborok/09-css/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/09-css/#feladat-1-stiluslapok-inline-stilusok","text":"Webes HTML tartalmak st\u00edlusoz\u00e1s\u00e1ra CSS-t haszn\u00e1lunk. A CSS alapjai: szab\u00e1ly (mintailleszt\u00e9s) alap\u00fa, deklarat\u00edv programoz\u00e1si nyelv, DOM elemekhez megjelen\u00e9st rendel. A b\u00f6ng\u00e9sz\u0151ben megjelen\u00edtett HTML tartalmak alap\u00e9rtelmez\u00e9s szerint form\u00e1zatlanok, viszont bizonyos szab\u00e1lyokat a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezetten illeszt az egyes elemekre, az elem t\u00edpusa szerint. Vizsg\u00e1ljuk meg, milyen szab\u00e1lyokat illeszt a b\u00f6ng\u00e9sz\u0151 a HTML, a BODY, a DIV, a SPAN, a H1, H2, az A \u00e9s a B elemekre! Nyissuk meg a Visual Studio Code-ban a lekl\u00f3nozott repositorynkat, \u00e9s dolgozzunk a feladat1-3 mapp\u00e1ban l\u00e9v\u0151 index.html -ben. Sz\u00fcks\u00e9g\u00fcnk lesz egy webszerverre, ami ki tudja szolg\u00e1lni nek\u00fcnk a f\u00e1jlokat. Futtassuk az al\u00e1bbi parancsot a Terminal ( Ctrl+\u00f6 vagy View > Integrated Terminal ) ablakb\u00f3l: http-server Figyelem! \u00dcgyeljen r\u00e1, hogy a parancsot a megfelel\u0151 munkak\u00f6nyvt\u00e1rban adja ki, ahol a szerkesztett f\u00e1jl is tal\u00e1lhat\u00f3! Ez elind\u00edt nek\u00fcnk egy egyszer\u0171 HTTP szervert a g\u00e9p 8080-as portj\u00e1n ( http://localhost:8080/ ), ahonnan egyszer\u0171en ki tudjuk szolg\u00e1lni a mapp\u00e1ban lev\u0151 f\u00e1jlokat, ill. index.html f\u00e1jl hi\u00e1ny\u00e1ban egy f\u00e1jllist\u00e1z\u00f3 f\u0151oldalt kapunk. Navig\u00e1ljunk a http://localhost:8080/ URL-re a b\u00f6ng\u00e9sz\u0151ben! Nyissuk meg az itt l\u00e1that\u00f3 index.html f\u00e1jlt! Az al\u00e1bbit kell l\u00e1tnunk: Vegy\u00fck \u00e9szre, hogy az oldalhoz nem vett\u00fcnk fel saj\u00e1t st\u00edluslapot, valamilyen form\u00e1z\u00e1s m\u00e9gis \u00e9rv\u00e9nyes\u00fclt. Egyes elemek f\u00e9lk\u00f6v\u00e9rek, kisebbek-nagyobbak, elrendez\u00e9s\u00fck sorfolytonos vagy t\u00f6rdelt. Vizsg\u00e1ljuk meg, milyen szab\u00e1lyok \u00e9rv\u00e9nyes\u00fclnek az egyes elemekre! Nyissuk meg a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett fejleszt\u0151i eszk\u00f6zeit ( F12 )! Lehet\u0151s\u00e9g\u00fcnk van az elemeket kijel\u00f6lni ( Jobb klikk > Inspect Element ), megn\u00e9zni elhelyezked\u00e9s\u00fcket a fel\u00fcleten \u00e9s a DOM sz\u00f6veges reprezent\u00e1ci\u00f3j\u00e1ban egyar\u00e1nt. Fontos! A b\u00f6ng\u00e9sz\u0151k \u00e9s/vagy bizonyos szerverek t\u00fal agressz\u00edvan gyors\u00edt\u00f3t\u00e1razhatnak bizonyos f\u00e1jlokat, pl. a HTML \u00e9s CSS f\u00e1jljainkat, \u00edgy a v\u00e1ltoz\u00e1sokat nem biztos, hogy l\u00e1tni fogjuk egyszer\u0171 \u00fajrat\u00f6lt\u00e9s ut\u00e1n. Ha ez el\u0151fordul, a cache letilt\u00e1s\u00e1hoz a Developer Tools eszk\u00f6zt\u00e1ron ki kell kapcsolnunk a cache-t. Jellemz\u0151en a men\u00fcsor bal oldal\u00e1n tal\u00e1lhat\u00f3k a kijel\u00f6l\u00e9shez sz\u00fcks\u00e9ges m\u0171veletek ikonjai, jobb oldalon a r\u00e9szletes n\u00e9zet. A kiv\u00e1lasztott elemhez a jobb oldali Computed f\u00fcl\u00f6n a t\u00e9nylegesen \u00e9rv\u00e9nyre l\u00e9pett szab\u00e1lyokat l\u00e1thatjuk. Mivel nincs explicit CSS f\u00e1jlunk linkelve \u00e9s CSS szab\u00e1lyokat sem \u00edrtunk a HTML-ben, ez\u00e9rt kiz\u00e1r\u00f3lag a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett user agent stylesheet -je \u00e9rv\u00e9nyes\u00fcl. Itt l\u00e1thatjuk a CSS Box model**t is, ami az elem **tartalma , a hozz\u00e1 tartoz\u00f3 padding , border \u00e9s margin \u00e9rt\u00e9kek egym\u00e1sra halmoz\u00e1s\u00e1t jelenti a 2 dimenzi\u00f3s t\u00e9glalap oldalaihoz m\u00e9rten. A CSS felold\u00e1s\u00e1ban a cascading , azaz \"egym\u00e1sba \u00e1gyazhat\u00f3\" r\u00e9sz szerint t\u00f6bb st\u00edluslap l\u00e9tezik a sz\u00e1rmaz\u00e1s szempontj\u00e1b\u00f3l; mi most a b\u00f6ng\u00e9sz\u0151be be\u00e9p\u00edtett , \u00fan. user agent stylesheet -et l\u00e1tjuk. A user agent stylesheet alap\u00e9rtelmezetten nem biztos, hogy l\u00e1that\u00f3 a fel\u00fcleten, a Computed f\u00fcl\u00f6n van lehet\u0151s\u00e9g\u00fcnk ezek megtekint\u00e9s\u00e9t bekapcsolni (\"Browser styles\"/\"Show all\" stb. lehet\u0151s\u00e9gek): A fenti sz\u0171r\u0151t haszn\u00e1lva van lehet\u0151s\u00e9g\u00fcnk az alkalmazott CSS szab\u00e1lyok k\u00f6z\u00f6tt keresni is. A h1 , h2 \u00e9s b elemek alap\u00e9rtelmezetten f\u00e9lk\u00f6v\u00e9rek, ezt a font-weight: 700; tulajdons\u00e1g \u00edrja le nek\u00fcnk. A html , body , div , h1 , h2 elemek display tulajdons\u00e1ga block , a span , a \u00e9s b elemek pedig inline t\u00edpus\u00faak. A display: block; tulajdons\u00e1g\u00fa elemek egy blokkot (sort) foglalnak el az \u0151ket befoglal\u00f3 elemben, az inline t\u00edpus\u00faak sorfolytonosak (egym\u00e1s mellett is elhelyezkedhetnek). L\u00e1thatjuk, hogy a body elemen tal\u00e1lhat\u00f3 8px marg\u00f3 ( margin ) mind a 4 ir\u00e1nyban: BEADAND\u00d3 (0.5 pont) Egy-egy k\u00e9perny\u0151k\u00e9ppel al\u00e1t\u00e1masztva demonstr\u00e1lja az al\u00e1bbi k\u00e9rd\u00e9seket: Mekkora a margin , padding \u00e9s border \u00e9rt\u00e9ke az <ul> elemnek? f1.1.png H\u00e1ny pixel a (f\u00fcgg\u0151leges) t\u00e1vols\u00e1g a <h1> \u00e9s <h2> elemek tartalma k\u00f6z\u00f6tt (\u00fcgyelve az \u00e1tfed\u0151 marg\u00f3kra)? f1.2.png Eml\u00e9keztet\u0151 a CSS szab\u00e1lyok defini\u00e1l\u00e1s\u00e1hoz Saj\u00e1t CSS szab\u00e1lyokat t\u00f6bbf\u00e9le m\u00f3don tudunk az oldalunkhoz rendelni: CSS f\u00e1jlokra t\u00f6rt\u00e9n\u0151 hivatkoz\u00e1ssal, CSS szab\u00e1lyok felv\u00e9tel\u00e9vel a HTML tartalm\u00e1n bel\u00fcli <style> tagben, inline, a HTML elemek style attrib\u00fatum\u00e1nak be\u00e1ll\u00edt\u00e1s\u00e1val. \u00dctk\u00f6z\u0151 CSS szab\u00e1lyok k\u00f6z\u00fcl az \u00e9rv\u00e9nyes\u00fcl, amelynek nagyobb a specificit\u00e1sa (megegyez\u0151 specificit\u00e1s eset\u00e9ben az utolj\u00e1ra defini\u00e1lt). Eml\u00e9keztet\u0151k\u00e9nt a szab\u00e1lyok specificit\u00e1si sorrendje: inline st\u00edlus ( <div style=\"...\"> ), ID-k sz\u00e1ma ( #azonosito ), oszt\u00e1lyok, attrib\u00fatumok \u00e9s pszeudo-oszt\u00e1lyok sz\u00e1ma ( .osztaly , [attributum] , [attributum=\"ertek\"] , :hover ), pszeudo-elemek ( :before , :after ). A sorrendhez hozz\u00e1tartozik az !important kulcssz\u00f3, ami \u00f6nmag\u00e1ban a fentiekt\u0151l specifikusabb, viszont az !important szab\u00e1lyokra a fenti specificit\u00e1si sorrend szint\u00e9n \u00e9rv\u00e9nyes\u00fcl. A szab\u00e1lyok defini\u00e1l\u00e1sa: M\u00f3dos\u00edtsuk az oldal megjelen\u00e9s\u00e9t fut\u00e1si id\u0151ben! Rejts\u00fck el a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett st\u00edlusait, \u00e9s l\u00e1thatjuk, hogy kiz\u00e1r\u00f3lag az \u00fcres inline st\u00edlus illeszkedik \u00edgy az elemre. Itt hozz\u00e1 tudunk adni \u00faj inline st\u00edlust az elemhez. Ha \u00faj szab\u00e1lyt akarunk felvenni, akkor a kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00e9 kattintva tehetj\u00fck ezt meg, ezut\u00e1n az automatikus kieg\u00e9sz\u00edt\u00e9s funkci\u00f3val l\u00e1thatjuk az \u00f6sszes, a b\u00f6ng\u00e9sz\u0151 \u00e1ltal ismert CSS tulajdons\u00e1got (Firefox Developerben ezt az \u00fcres kurzoron a **fel-le nyilak**kal tehetj\u00fck meg, Edge-ben \u00e9s Chrome-ban a **Ctrl+sz\u00f3k\u00f6z**zel). Vegy\u00fck fel a <h1> elemhez az al\u00e1bbi CSS tulajdons\u00e1got: color : red ; K\u00f6zben vegy\u00fck \u00e9szre a DOM reprezent\u00e1ci\u00f3ban, hogy b\u00e1r a jobb oldali panelen szerkeszt\u00fcnk, pontosan ugyanaz t\u00f6rt\u00e9nik, mintha a HTML elem style attrib\u00fatum\u00e1t adtuk volna meg. Ha be\u00e1ll\u00edtjuk a font-weight: bold; tulajdons\u00e1got a <body> -n, akkor l\u00e1thatjuk, hogy az \u00f6sszes gyermek\u00e9re is \u00e9rv\u00e9nyes\u00fcl a szab\u00e1ly. Bizonyos szab\u00e1lyok \u00f6r\u00f6kl\u0151dnek (a font-weight ilyen), m\u00e1sok (p\u00e9ld\u00e1ul a padding \u00e9s margin ) viszont nem. Lehet\u0151s\u00e9g van esetenk\u00e9nt t\u00f6bb szab\u00e1ly aggreg\u00e1lt megad\u00e1s\u00e1ra is \u00fan. shorthandek haszn\u00e1lat\u00e1val. Gyakori p\u00e9ld\u00e1ul a 4-ir\u00e1ny\u00fa \u00e9rt\u00e9kad\u00e1s, ami a top-right-bottom-left ir\u00e1nysorrend szerint ad meg t\u00f6bb \u00e9rt\u00e9ket. A padding: 50px 30px 10px 5px; szab\u00e1ly mind a n\u00e9gy \u00e9rt\u00e9ket be\u00e1ll\u00edtja a fenti sorrend szerint. A padding: 10% 1mm; szab\u00e1ly a fenti-lenti \u00e9rt\u00e9keket 10%-ra, a jobb-balt 1 mm-re (a padding-top). A sz\u00e1zal\u00e9kos \u00e9rt\u00e9kek a sz\u00fcl\u0151 elem sz\u00e9less\u00e9g\u00e9hez viszony\u00edtottak (ha padding-top -ot vagy margin-bottom -ot adunk meg, akkor is sz\u00e9less\u00e9ghez). A padding: 0; mind a 4 oldalon 0-ra \u00e1ll\u00edtja a paddingot (nem sz\u00fcks\u00e9ges m\u00e9rt\u00e9kegys\u00e9g 0 eset\u00e9n). Inline st\u00edlusok Inline st\u00edlusokat csak kiv\u00e9teles esetekben haszn\u00e1ljunk, jellemz\u0151en programozottan (JavaScriptb\u0151l) elfogadott lehet egy elem megjelen\u00e9s\u00e9t ilyen m\u00f3don \u00e1ll\u00edtani, de a nyers HTML-ben nem!","title":"Feladat 1 - St\u00edluslapok, inline st\u00edlusok"},{"location":"laborok/09-css/#feladat-2-css","text":"Az oldalhoz alapvet\u0151en k\u00e9tf\u00e9le m\u00f3don van lehet\u0151s\u00e9g\u00fcnk st\u00edluslapot rendelni: k\u00fcls\u0151 CSS f\u00e1jlb\u00f3l vagy az oldalban defini\u00e1lt <style> tagben. Az index.html forr\u00e1sk\u00f3dj\u00e1t eg\u00e9sz\u00edts\u00fck ki, a <head> elembe helyezz\u00fck el az al\u00e1bbi k\u00f3dot: < style > ul { list-style : none ; padding : 0 ; } ul > li { float : left ; padding : 10 px ; min-width : 200 px ; border : 1 px solid grey ; } </ style > Ha friss\u00edtj\u00fck az oldalt (nem sz\u00fcks\u00e9ges \u00fajraind\u00edtani a szervert, csak menteni a f\u00e1jlt), akkor az elrendez\u00e9s m\u00f3dosul: a list\u00e1nkban a listaelemek egym\u00e1s mell\u00e9 ker\u00fclnek, \u00e9s a listaelemet jelz\u0151 p\u00f6tty elt\u0171nik. float: left A float: left; tulajdons\u00e1g \u00e1ll\u00edt\u00e1s\u00e1val nem ugyanazt \u00e9rj\u00fck el, mintha a listaelemet display: inline-block; -ra \u00e1ll\u00edtan\u00e1nk, mert az inline-block megtartja az egym\u00e1st k\u00f6vet\u0151 elemek k\u00f6z\u00f6tti whitespace-eket, a float: left; viszont nem. A float seg\u00edts\u00e9g\u00e9vel komplexebb elrendez\u00e9seket is el tudunk \u00e9rni, viszont a float-ol\u00e1st meg kell tudnunk sz\u00fcntetni. Ehhez a clear: both; \u00e9rt\u00e9ket \u00e1ll\u00edthatjuk be egy elemen. A float-ol\u00e1s azon kev\u00e9s CSS tulajdons\u00e1g egyike, ami az elemet sorban k\u00f6vet\u0151 tov\u00e1bbi testv\u00e9rekre is k\u00f6zvetlen\u00fcl hat. Az al\u00e1bbi szab\u00e1lyt haszn\u00e1lhatjuk a float-ol\u00e1s megsz\u00fcntet\u00e9s\u00e9hez, ekkor az <article> elemre a clearfix oszt\u00e1lyt alkalmazva az m\u00e1r \u00faj sorba is ker\u00fcl. . clearfix { clear : both ; } < article class = \"clearfix\" > <!-- ... --> </ article > A CSS szab\u00e1lyainknak az esetek nagy t\u00f6bbs\u00e9g\u00e9ben nem tesz j\u00f3t, ha t\u00fal \u00e1ltal\u00e1nosak. A fenti szab\u00e1lyok minden listaelemre \u00e1ltal\u00e1nosan illeszkedni fognak, ami ebben a konkr\u00e9t esetben nem j\u00f3 d\u00f6nt\u00e9s, ugyanis valahol az oldal t\u00f6rzs\u00e9ben lehet, hogy szeretn\u00e9nk haszn\u00e1lni a \"klasszikus\" list\u00e1s megjelen\u00edt\u00e9st is. Ez\u00e9rt a szab\u00e1lyunkat \u00e1t kell gondolnunk, specifikusabb szab\u00e1lyt \u00e9rdemes \u00edrni: ul . menu { list-style : none ; padding : 0 ; } ul . menu > li { float : left ; padding : 10 px ; min-width : 200 px ; border : 1 px solid grey ; } A fenti oszt\u00e1llyal megk\u00fcl\u00f6nb\u00f6ztett\u00fck a menu oszt\u00e1llyal ell\u00e1tott ul elemeket azokt\u00f3l, amiken nincs rajta az oszt\u00e1ly. A pszeudooszt\u00e1lyok haszn\u00e1lat\u00e1val az elemek k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotainak k\u00fcl\u00f6nb\u00f6z\u0151 st\u00edlust tudunk adni. Ha a listaelemek kijel\u00f6l\u00e9se a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra speci\u00e1lis \u00e1llapot, ezt \u00e9rdemes jelezn\u00fcnk a fel\u00fcleten. Haszn\u00e1ljuk az al\u00e1bbi szab\u00e1lyt: ul . menu > li : focus { font-weight : bold ; color : #44AA44 ; } \u00d6nmag\u00e1ban a focus pszeudooszt\u00e1ly haszn\u00e1lata nem elegend\u0151, ugyanis a li elem nem f\u00f3kusz\u00e1lhat\u00f3. A <li> elemen elhelyezett tabindex attrib\u00fatum jelzi a b\u00f6ng\u00e9sz\u0151nek, hogy az elem k\u00e9pes f\u00f3kuszt kapni: < ul class = \"menu\" > < li tabindex = \"1\" > Item 1 </ li > < li tabindex = \"2\" > Item 2 </ li > < li tabindex = \"3\" > Item 3 </ li > </ ul > Ezut\u00e1n lehets\u00e9ges az eg\u00e9r kattint\u00e1ssal vagy a Tab billenty\u0171 haszn\u00e1lat\u00e1val kijel\u00f6lni az elemet. A HTML-be \u00e1gyazott CSS-sel a probl\u00e9ma, hogy ugyanaz a st\u00edlus nem \u00fajrahasznos\u00edthat\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 oldalaink k\u00f6z\u00f6tt. Ez\u00e9rt \u00e9rdemes kiszervezni a CSS tartalmainkat a saj\u00e1t dedik\u00e1lt CSS f\u00e1jljainkba. A CSS tartalm\u00e1t mozgassuk \u00e1t a HTML <head> r\u00e9sz\u00e9b\u0151l egy \u00faj f\u00e1jlba az index.html mellett, legyen a neve index.css . A f\u00e1jlt a HTML-b\u0151l az al\u00e1bbi m\u00f3don tudjuk linkelni: tegy\u00fck az oldal <head> r\u00e9sz\u00e9be (a kor\u00e1bbi oldalon bel\u00fcli st\u00edlus-defin\u00edci\u00f3k hely\u00e9re) az al\u00e1bbi hivatkoz\u00e1st: < link rel = \"stylesheet\" type = \"text/css\" href = \"index.css\" > BEADAND\u00d3 (0.5 pont) K\u00e9perny\u0151k\u00e9ppel demonstr\u00e1lja, hogy: Az index.html let\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en az index.css f\u00e1jl is let\u00f6lt\u0151dik. ( f2.1.png ) Az <ul> lista elemei egym\u00e1s mellett helyezkednek el. ( f2.2.png ) Ehhez a HTML-t m\u00f3dos\u00edtani sz\u00fcks\u00e9ges \u00e9s commitolni. Az egyik listaelem kijel\u00f6lt \u00e1llapot\u00e1ban a bet\u0171sz\u00edn z\u00f6ld lesz, a karakterek f\u00e9lk\u00f6v\u00e9rek. ( f2.3.png )","title":"Feladat 2. - CSS"},{"location":"laborok/09-css/#feladat-3-reszponziv-elrendezes","text":"A weboldalakat k\u00fcl\u00f6nb\u00f6z\u0151 k\u00e9perny\u0151m\u00e9ret\u0171 \u00e9s felbont\u00e1s\u00fa eszk\u00f6z\u00f6kr\u0151l szoktuk l\u00e1togatni. A t\u00fal r\u00e9szletes t\u00e1bl\u00e1zatok, hossz\u00fa, meg nem t\u00f6r\u0151 sorok nem felhaszn\u00e1l\u00f3bar\u00e1tak kisebb m\u00e9ret\u0171 kijelz\u0151k\u00f6n, m\u00e9g ha az eszk\u00f6z felbont\u00e1sa kell\u0151en nagy is. A mobil eszk\u00f6z\u00f6k ez\u00e9rt szorz\u00f3kat alkalmaznak a val\u00f3s \u00e9s a hasznos felbont\u00e1s k\u00f6z\u00f6tti megk\u00fcl\u00f6nb\u00f6ztet\u00e9sk\u00e9ppen. A reszponz\u00edv elrendez\u00e9s sor\u00e1n a legfontosabb koncepci\u00f3k k\u00f6z\u00e9 tartozik a sz\u00e9less\u00e9g f\u00fcggv\u00e9ny\u00e9ben t\u00f6rt\u00e9n\u0151 \u00e1tm\u00e9retez\u00e9se az oldalnak. Ezeket az al\u00e1bbi szintaxis alapj\u00e1n, \u00fan. media query-vel tudjuk implement\u00e1lni: . medium-only { display : none ; } @ media ( min-width : 768px ) and ( max-width : 991px ) { . medium-only { display : block ; } } A fenti szab\u00e1ly 768 \u00e9s 991 pixel k\u00f6z\u00f6tti sz\u00e9less\u00e9g\u0171 viewport-on jelenik meg, teh\u00e1t nem a k\u00e9perny\u0151 m\u00e9rete, hanem a rendelkez\u00e9sre \u00e1ll\u00f3 hely f\u00fcggv\u00e9ny\u00e9ben v\u00e1ltozik (pl. ablak \u00e1tm\u00e9retez\u00e9sekor is). A medium-only oszt\u00e1llyal ell\u00e1tott elemek csak ilyen k\u00e9perny\u0151m\u00e9reten jelennek meg, ugyanis a media query szab\u00e1ly specifikusabb, mint az azon k\u00edv\u00fcl defini\u00e1lt. Pr\u00f3b\u00e1ljuk ki, mi t\u00f6rt\u00e9nik, hogyha a k\u00e9t szab\u00e1ly sorrendj\u00e9t felcser\u00e9lj\u00fck! BEADAND\u00d3 (0.5 pont) K\u00e9perny\u0151k\u00e9pekkel demonstr\u00e1lja, hogy a fenti szab\u00e1lyt tetsz\u0151leges elemekre alkalmazva azok az ablak m\u00e9ret\u00e9nek f\u00fcggv\u00e9ny\u00e9ben l\u00e1that\u00f3k vagy el vannak rejtve! ( f3.1.png, f3.2.png )","title":"Feladat 3 - Reszponz\u00edv elrendez\u00e9s"},{"location":"laborok/09-css/#feladat-4-onallo-css-egy-komplexebb-feladatban-35-pont","text":"Mostant\u00f3l a Feladat4 mapp\u00e1ban l\u00e9v\u0151 \u00e1llom\u00e1nyokkal dolgozzon. K\u00e9sz\u00edtse el a kiindul\u00f3 HTML oldal designj\u00e1t, mely megk\u00f6zel\u00edti a lenti k\u00e9peken l\u00e1that\u00f3 elrendez\u00e9st \u00e9s megjelen\u00e9st! Figyeljen r\u00e1, hogy a megval\u00f3s\u00edt\u00e1s sor\u00e1n nem alkalmazhat inline st\u00edlusokat, \u00e9s ker\u00fclje a HTML f\u00e1jl m\u00f3dos\u00edt\u00e1s\u00e1t.","title":"Feladat 4 (\u00f6n\u00e1ll\u00f3) - CSS egy komplexebb feladatban (3.5 pont)"},{"location":"laborok/09-css/#fejlec-1-pont","text":"A fejl\u00e9c megjelen\u00e9s\u00e9t a navbar.css f\u00e1jlba k\u00e9sz\u00edtse el, amit el\u0151sz\u00f6r l\u00e9tre kell hozni. (A HTML oldal m\u00e1r hivatkozik r\u00e1.) Az oldalon fix fejl\u00e9c tal\u00e1lhat\u00f3 (teh\u00e1t a fejl\u00e9c nem t\u0171nik el, ha kig\u00f6rget\u00fcnk a tartalomb\u00f3l). \u00dcgyeljen r\u00e1, hogy a fejl\u00e9c ne takarja ki az oldal k\u00f6zponti tartalm\u00e1t! (Tipp: padding ) A fejl\u00e9c magass\u00e1ga 60px \u00e9s a h\u00e1ttere bord\u00f3! A log\u00f3 mellett egy 2 elemb\u0151l \u00e1ll\u00f3 men\u00fcsor tal\u00e1lhat\u00f3, ahol az elemek \u00e1tnavig\u00e1lnak rendre az index.html \u00e9s contact.html oldalakra az aktu\u00e1lis oldalr\u00f3l, megnevez\u00e9s\u00fck: F\u0151oldal , Kapcsolat (ezeket az oldalakat nem kell elk\u00e9sz\u00edtenie)! A men\u00fcsort <ul> \u00e9s <li> elemek haszn\u00e1lat\u00e1val struktur\u00e1lja. (Tipp: display: inline-block ) A men\u00fcpontok bet\u0171m\u00e9rete 1.1em legyen, el\u0151t\u00e9rsz\u00edne feh\u00e9r. Az egeret a men\u00fcpontra helyezve (Tipp: :hover pszeudoclass) a h\u00e1tt\u00e9rsz\u00edn valamelyest * t\u00e9tebb\u00e9 v\u00e1lik. A men\u00fcpontok sz\u00f6vege legyen f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtva. (Tipp: line-height ) A fejl\u00e9cben jobbra igaz\u00edtva tal\u00e1lhat\u00f3 egy Bejelentkez\u00e9s gomb (Tipp: float ). \u00dcgyeljen r\u00e1, hogy g\u00f6rget\u00e9skor a tartalom ne takarja ki a men\u00fcsort! (Tipp: z-index ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.1.png","title":"Fejl\u00e9c (1 pont)"},{"location":"laborok/09-css/#fo-hir-megjelenitese-1-pont","text":"A f\u0151 h\u00edr megjelen\u00e9s\u00e9t a news.css f\u00e1jlba k\u00e9sz\u00edtse el, amit el\u0151sz\u00f6r l\u00e9tre kell hozni. (A HTML oldal m\u00e1r hivatkozik r\u00e1.) A kezd\u0151oldalon a legfrissebb h\u00edr jelenik meg. A h\u00edrnek van egy fejl\u00e9ce amiben megtal\u00e1lhat\u00f3 a c\u00edm , szerz\u0151 , szerz\u0151 profil k\u00e9pe , publik\u00e1l\u00e1si d\u00e1tum . Ezeket a csatolt k\u00e9perny\u0151k\u00e9p alapj\u00e1n rendezze \u00e9s form\u00e1zza! A szerz\u0151 profil k\u00e9pe 80px x 80px. Ezek mellett jelenik meg a c\u00edm, a szerz\u0151 neve, \u00e9s a publik\u00e1l\u00e1s d\u00e1tuma. A profilk\u00e9p \u00e9s a sz\u00f6veg k\u00f6z\u00f6tt legyen 10px t\u00e1vols\u00e1g. A c\u00edm, szerz\u0151 neve \u00e9s publik\u00e1l\u00e1s d\u00e1tum\u00e1n\u00e1l \u00fagy \u00e1ll\u00edtsa \u00e1t a bet\u0171m\u00e9retet \u00e9s a marg\u00f3kat, hogy azok olyan magasak legyenek mint a k\u00e9p. A h\u00edr t\u00f6rzse egy bevezet\u0151 , k\u00e9p majd tov\u00e1bbi tartalomb\u00f3l \u00e1ll. A h\u00edrhez tartoz\u00f3 k\u00e9p legyen k\u00f6z\u00e9pre igaz\u00edtva. \u00dcgyeljen arra, hogy a sz\u00f6vegek tartsanak egys\u00e9gesen 16px t\u00e1vols\u00e1got a befoglal\u00f3 elemekt\u0151l. (Tipp: padding ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.2.png","title":"F\u0151 h\u00edr megjelen\u00edt\u00e9se (1 pont)"},{"location":"laborok/09-css/#oldalso-sav-1-pont","text":"Az oldals\u00f3 s\u00e1v megjelen\u00edt\u00e9s\u00e9t is a news.css f\u00e1jlba k\u00e9sz\u00edtse el. Az oldal alj\u00e1n tal\u00e1lhat\u00f3 kor\u00e1bbi h\u00edreket rendezze \u00fagy, hogy a f\u0151 h\u00edr jobb oldal\u00e1n jelenjenek meg Az oldals\u00e1v sz\u00e9less\u00e9ge fixen 350px legyen, a f\u0151 h\u00edr pedig a fennmarad\u00f3 helyet t\u00f6ltse ki (Tipp: width: calc(100% - oldals\u00e1g sz\u00e9less\u00e9ge - paddingok) ) Az oldals\u00e1v h\u00e1tt\u00e9rsz\u00edne legyen vil\u00e1gossz\u00fcrke. Ha a f\u0151 h\u00edr magasabb mint az oldals\u00e1v, akkor is \u00e9rjen le az oldals\u00e1v a l\u00e1bl\u00e9cig. (Tipp: position: absolute ) Ha az oldals\u00e1v magasabb, akkor pedig jelenjen meg a scrollbar az oldals\u00e1von. (Tipp: overflow: auto ) Az egyes h\u00edrek k\u00f6z\u00f6tt legyen egy elv\u00e1laszt\u00f3 vonal (Tipp: border-bottom ) \u00dcgyeljen r\u00e1, hogy az utols\u00f3 h\u00edr ut\u00e1n viszont m\u00e1r ne legyen elv\u00e1laszt\u00f3 vonal (Tipp: :last-child ) BEADAND\u00d3 (1 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.3.png","title":"Oldals\u00f3 s\u00e1v (1 pont)"},{"location":"laborok/09-css/#reszponzivitas-05-pont","text":"Eg\u00e9sz\u00edtse ki a news.css f\u00e1jlt \u00fagy, hogy ha 900px-n\u00e9l kisebbre \u00e1ll\u00edtjuk az ablakot, akkor a jobb oldali s\u00e1v t\u0171nj\u00f6n el, \u00e9s a teljes oldalt a f\u0151 h\u00edr foglalja el. (Tipp: @media( max-width: 900px ) ) Tippek a megold\u00e1shoz: Haszn\u00e1lja a b\u00f6ng\u00e9sz\u0151 DOM vizualiz\u00e1l\u00f3 eszk\u00f6zt, \u00edgy l\u00e1thatja, hogy a kijel\u00f6lt elemre milyen CSS szab\u00e1lyok illeszkednek. Ha egy elemnek ki kell t\u00f6ltenie a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get, akkor minden \u0151s\u00e9nek a f\u00e1ban ki kell t\u00f6ltenie a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get, am\u00edg az sz\u00fcks\u00e9ges. Pl. a width: 100%; csak a k\u00f6zvetlen \u0151sre vonatkozik blokkszint\u0171 elemekn\u00e9l, ha az position: relative vagy nincs be\u00e1ll\u00edtva. Az elrendez\u00e9sn\u00e9l \u00e9rdemes figyelembe venni, hogy a position: absolute; \u00e9rt\u00e9k a DOM-ban az elemhez legk\u00f6zelebbi olyan \u0151sh\u00f6z poz\u00edcion\u00e1l, mely position: relative; . Ezut\u00e1n a top , right , bottom \u00e9s left tulajdons\u00e1gokat tudja be\u00e1ll\u00edtani pl. pixel vagy sz\u00e1zal\u00e9k \u00e9rt\u00e9k alapj\u00e1n, \u00edgy az adott \u0151sh\u00f6z poz\u00edcion\u00e1lja az elemet. Haszn\u00e1lhatja a calc() f\u00fcggv\u00e9nyt, mely egyszer\u0171 konstans \u00e9rt\u00e9kek sz\u00e1m\u00edt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, pl. width: calc(50% - 100px); . Fontos, hogy a sz\u00e1m\u00edtand\u00f3 \u00e9rt\u00e9kek k\u00f6z\u00f6tt mindenk\u00e9ppen sz\u00fcks\u00e9ges sz\u00f3k\u00f6zt tennie. @media query-ket az and \u00e9s az or logikai oper\u00e1torokkal tud egym\u00e1s ut\u00e1n f\u0171zni, pl. @media screen and (min-width: 200px) {...} , neg\u00e1lni a not kulcssz\u00f3val lehets\u00e9ges. BEADAND\u00d3 (0.5 pont) Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! f4.4.png","title":"Reszponzivit\u00e1s (0.5 pont)"},{"location":"laborok/10-bootstrap/","text":"Labor 10 - Bootstrap \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s! Feladat 0. - Ismerked\u00e9s a kiindul\u00f3 projekttel \u00b6 A webfejleszt\u00e9sben \u00e1ltal\u00e1nos jelens\u00e9g, hogy a diz\u00e1jnerek csak egy k\u00e9pet k\u00e9sz\u00edtenek el, hogy a fel\u00fcletnek hogyan kell kin\u00e9znie, ami alapj\u00e1n el kell k\u00e9sz\u00edteni a megfelel\u0151 HTML \u00e9s CSS k\u00f3dot a fejleszt\u0151nek. A mai labor alkalm\u00e1val egy ilyen k\u00e9pb\u0151l (\u00e9s egy kicsi HTML v\u00e1z seg\u00edts\u00e9g\u00e9vel) kell az oldalt elk\u00e9sz\u00edteni. A diz\u00e1jnol\u00e1s folyam\u00e1n \u00e1ltal\u00e1ban valamilyen keretrendszerb\u0151l indulunk ki, mely k\u00e9sz megold\u00e1sokat ad a leggyakoribb feladatokra, \u00edgy cs\u00f6kkentve az egyedi CSS mennyis\u00e9g\u00e9t. A Bootstrap k\u00e9t alapvet\u0151 funkci\u00f3t ny\u00fajt: egys\u00e9ges form\u00e1z\u00e1s (gombok, sz\u00ednek) \u00e9s grid alap\u00fa elrendez\u00e9s kiz\u00e1r\u00f3lag CSS-sel, gyakori komponensek (felugr\u00f3 ablakok, k\u00e1rty\u00e1k, nyithat\u00f3-z\u00e1rhat\u00f3 blokkok, kiemel\u00e9sek, panelek) CSS-sel \u00e9s/vagy JavaScriptb\u0151l. A laboron ezekb\u0151l a k\u00e9sz komponensekb\u0151l fogunk megismerni egy p\u00e1rat k\u00f6zelebbr\u0151l is. Bootstrap hozz\u00e1ad\u00e1sa egy HTML oldalhoz \u00b6 Nyissuk meg az index.html f\u00e1jlt, amit a labor sor\u00e1n meg fogunk form\u00e1zni. N\u00e9zz\u00fck meg, hogy az oldal head -j\u00e9ben milyen \u00e1llom\u00e1nyokat \u00e9s honnan t\u00f6lt\u00fcnk be. < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > MyBlog </ title > <!-- Bootstrap linkel\u00e9se CDN-r\u0151l --> < link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity = \"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin = \"anonymous\" > <!-- Font awesome 5 CDN-r\u0151l (solid, regular \u00e9s brand is) --> < link rel = \"stylesheet\" href = \"https://use.fontawesome.com/releases/v5.15.1/css/all.css\" crossorigin = \"anonymous\" > <!-- Google font (Muli) let\u00f6lt\u00e9se --> < link href = \"https://fonts.googleapis.com/css?family=Muli\" rel = \"stylesheet\" > <!-- Saj\u00e1t CSS --> < link rel = \"stylesheet\" href = \"assets/css/site.css\" > </ head > Figyelj\u00fck meg, hogy n\u00e9gy k\u00fcl\u00f6nb\u00f6z\u0151 CSS \u00e1llom\u00e1nyt t\u00f6lt\u00fcnk be, egy kiv\u00e9tel\u00e9vel CDN-r\u0151l: Az els\u0151 mag\u00e1t a Bootstrap-et t\u00f6lti be. Ezt k\u00f6vet\u0151en egy gyakran haszn\u00e1lt ikongy\u0171jtem\u00e9nyt, a Font Awesome-ot t\u00f6ltj\u00fck le. Ezen fel\u00fcl, mivel egyedi bet\u0171t\u00edpust haszn\u00e1lunk, azt a Google fonts oldal\u00e1r\u00f3l t\u00f6ltj\u00fck le. A legutols\u00f3 hivatkoz\u00e1s pedig az \u00e1ltalunk k\u00e9sz\u00edtett CSS f\u00e1jlt hivatkozza be. Bet\u00f6lt\u00e9si lehet\u0151s\u00e9gek A CSS \u00e9s JS k\u00f6nyvt\u00e1rakat t\u00f6bbf\u00e9lek\u00e9ppen is be tudjuk t\u00f6lteni: CDN-r\u0151l, publikus webr\u0151l t\u00f6lti le a CSS f\u00e1jlt, amit most is haszn\u00e1lunk, van lehet\u0151s\u00e9g\u00fcnk csomagkezel\u0151t (npm, bower) haszn\u00e1lni let\u00f6lt\u00e9sre \u00e9s magunk kiszolg\u00e1lni a f\u00e1jlt, ak\u00e1r saj\u00e1t magunk k\u00e9zzel is let\u00f6lthetj\u00fck a megfelel\u0151 f\u00e1jlokat, ebben az esetben is a saj\u00e1t webszerver\u00fcnk szolg\u00e1lja ki ezeket a f\u00e1jlokat. Ha az alkalmaz\u00e1s elrendez\u00e9s\u00e9t szeretn\u00e9nk megadni, el\u00e9g sok boilerplate-jelleg\u0171 CSS k\u00f3dot kellene \u00edrnunk. A Bootstrap megk\u00f6zel\u00edt\u00e9se, hogy a gyakori elrendez\u00e9si lehet\u0151s\u00e9geket \u00e9s st\u00edlusoz\u00e1si lehet\u0151s\u00e9geket k\u00e9szen \u00e9s konfigur\u00e1lhat\u00f3an adja nek\u00fcnk. A megval\u00f3s\u00edtand\u00f3 oldal az al\u00e1bbi f\u0151bb r\u00e9szekb\u0151l \u00e1ll: navig\u00e1ci\u00f3s s\u00e1v, oldal k\u00f6zponti eleme, ami blogbejegyz\u00e9sek list\u00e1j\u00e1t tartalmazza, l\u00e1bl\u00e9c. Feladat 1 - Navig\u00e1ci\u00f3s s\u00e1v \u00b6 A navig\u00e1ci\u00f3s s\u00e1v fel\u00e9p\u00edt\u00e9se legyen a k\u00f6vetkez\u0151 (a HTML v\u00e1z szerepel a kiindul\u00f3 index.html -ben): bal sz\u00e9len szerepeljen egy a BME AUT logo, ami az assets/img/logo-bme-aut.png \u00fatvonalon \u00e9rhet\u0151 el, ezt k\u00f6vet\u0151en a k\u00e9t navig\u00e1ci\u00f3s link: Home \u00e9s Registration, a s\u00e1v jobb sz\u00e9l\u00e9n pedig egy keres\u00e9s sz\u00f6vegdoboz \u00e9s egy Search felirat\u00fa gomb legyen. A navig\u00e1ci\u00f3s s\u00e1v az al\u00e1bbiak szerint n\u00e9zzen ki magas felbont\u00e1son Mivel a navig\u00e1ci\u00f3 is egy gyakori probl\u00e9ma, a Bootstrap ad r\u00e1 k\u00e9sz komponenst, a **navbar**t. A megval\u00f3s\u00edt\u00e1s el\u0151tt n\u00e9zz\u00fck meg, hogyan \u00e9p\u00fcl fel a Bootstrap navbar komponense. Az oldalon tal\u00e1lunk k\u00e9sz HTML v\u00e1zakat is, amib\u0151l ha a megfelel\u0151t kiv\u00e1lasztva bem\u00e1soljuk a saj\u00e1t k\u00f3dunkba, apr\u00f3 m\u00f3dos\u00edt\u00e1sokkal el tudjuk \u00e9rni a megfelel\u0151 kin\u00e9zetet. A legfontosabb oszt\u00e1lyok, amire a navbar \u00e9p\u00edt: .navbar-brand brand logo megjelen\u00edt\u00e9s\u00e9re. .navbar-nav teljes magass\u00e1g\u00fa egyszer\u0171 navig\u00e1ci\u00f3s elemek megad\u00e1s\u00e1hoz (a leg\u00f6rd\u00fcl\u0151 lista is t\u00e1mogatott). .navbar-toggler mobil n\u00e9zeten el lehessen rejteni a linkeket egy hamburger men\u00fc al\u00e1. .form-inline ha valamilyen form controlt szeretn\u00e9nk a navig\u00e1ci\u00f3s s\u00e1vba tenni. .navbar-text ha f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtott sz\u00f6veget szeretn\u00e9nk haszn\u00e1lni. .collapse.navbar-collapse elemek csoportos elrejt\u00e9s\u00e9re haszn\u00e1lhat\u00f3. Tip \u00c9rdemes keresni a dokument\u00e1ci\u00f3ban egy ahhoz hasonl\u00f3 megjelen\u00e9st amire nek\u00fcnk is sz\u00fcks\u00e9g\u00fcnk van \u00e9s az ott tal\u00e1lhat\u00f3 HTML k\u00f3dot \u00e1talak\u00edtani a saj\u00e1t ig\u00e9nyeinknek megfelel\u0151en. A s\u00f6t\u00e9t h\u00e1tter\u0171 navbarhoz haszn\u00e1ljuk navbar-dark \u00e9s bg-dark oszt\u00e1lyokat. !!! example \"BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtse el a fent ismertetett navig\u00e1ci\u00f3s s\u00e1vot Bootstrap 4 seg\u00edts\u00e9g\u00e9vel. Az elk\u00e9sz\u00fclt navig\u00e1ci\u00f3s s\u00e1vr\u00f3l illesszen be egy k\u00e9perny\u0151k\u00e9pet! ( f1.png ) Feladat 2 - Reszponz\u00edv megjelen\u00e9s \u00b6 A navig\u00e1ci\u00f3t is reszponz\u00edvan kell megval\u00f3s\u00edtani, teh\u00e1t ha \u00e1tm\u00e9retezz\u00fck az oldalt, akkor a navig\u00e1ci\u00f3s men\u00fcpontokat el kell rejteni \u00e9s egy \u00fagynevezett hamburger men\u00fct kell megjelen\u00edteni helyette, amire kattintva megjelennek a men\u00fcpontok. M\u00e9g miel\u0151tt nekiesn\u00e9nk az egyedi megold\u00e1s kital\u00e1l\u00e1s\u00e1ra \u00e9rdemes megn\u00e9zni, hogy a Bootstrap t\u00e1mogatja ezt a funkcionalit\u00e1st is, teh\u00e1t csak a megfelel\u0151 HTML v\u00e1zat kell kikeresni a Bootstrap navbar dokument\u00e1ci\u00f3j\u00e1b\u00f3l \u00e9s az alapj\u00e1n kieg\u00e9sz\u00edteni a k\u00f3dunkat. Tipp: navbar-toggler A k\u00e9sz oldalnak \u00edgy kell kin\u00e9znie. Mobil eszk\u00f6z\u00f6n z\u00e1rva. Mobil eszk\u00f6z\u00f6n lenyitva BEADAND\u00d3 (0.5 pont) Tegye reszponz\u00edvv\u00e1 a navig\u00e1ci\u00f3s men\u00fct a fenti k\u00e9peknek megfelel\u0151en. Az elk\u00e9sz\u00fclt teljes oldalr\u00f3l (ne csak a navig\u00e1ci\u00f3s s\u00e1vr\u00f3l) illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet: mobil n\u00e9zeten, ahol nincs lenyitva a hamburger men\u00fc, ( f2.1.png ) mobil n\u00e9zeten, ahol le van nyitva a hamburger men\u00fc, ( f2.2.png ) nem mobil n\u00e9zeten. ( f2.3.png ) Feladat 2 iMSc - Navig\u00e1ci\u00f3s s\u00e1vban szab\u00e1lyok fel\u00fcldefini\u00e1l\u00e1sa \u00b6 A navig\u00e1ci\u00f3s men\u00fcben a linkek feh\u00e9r sz\u00edn\u0171ek, hiszen a Bootstrap erre \u00e1ll\u00edtja be. Defini\u00e1lja fel\u00fcl a Bootstrapben megadott men\u00fcpont sz\u00edneket a site.css-ben \u00fagy, hogy azok z\u00f6ldek legyenek \u00e9s ha egy men\u00fcpont f\u00f6l\u00e9 vissz\u00fck az egeret, akkor v\u00e1ltson s\u00f6t\u00e9tz\u00f6ldre. Az !important kulcssz\u00f3t nem haszn\u00e1lhatja! iMSc BEADAND\u00d3 (1 iMSc pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a b\u00f6ng\u00e9sz\u0151 devTool (F12) ablak\u00e1r\u00f3l, amin l\u00e1that\u00f3, hogy milyen CSS oszt\u00e1ly hat\u00e1rozza meg most az egyes men\u00fcpontok (pl.: Home) bet\u0171sz\u00edn\u00e9t. Tipp: haszn\u00e1lja a Computed tabf\u00fclet. ( f2.imsc1.png ) A k\u00e9sz megold\u00e1sr\u00f3l csatoljon egy k\u00e9perny\u0151k\u00e9pet. ( f2.imsc2.png ) Feladat 3 - Egy k\u00e1rtya (blog bejegyz\u00e9s) form\u00e1z\u00e1sa \u00b6 A navig\u00e1ci\u00f3 ut\u00e1n t\u00e9rj\u00fcnk \u00e1t a f\u0151 tartalmi elemre, a blog bejegyz\u00e9sre. El\u0151sz\u00f6r csak egy bejegyz\u00e9st form\u00e1zzunk meg. A blog post HTML v\u00e1za m\u00e1r szerepel az index oldalon, ezt kell kieg\u00e9sz\u00edteni a megfelel\u0151 Bootstrap oszt\u00e1lyokkal \u00e9s helyenk\u00e9nt k\u00e9sz\u00edteni egy-egy CSS szab\u00e1lyt, amivel kieg\u00e9sz\u00edtj\u00fck a Bootstrap-es oszt\u00e1lyokat. A megold\u00e1shoz haszn\u00e1ljuk a Bootstrap card -j\u00e1t. Mivel majd t\u00f6bb k\u00e1rtya ker\u00fcl egym\u00e1s mell\u00e9 a sz\u00e9less\u00e9get a grid oszlopaihoz haszn\u00e1lt col-x seg\u00edts\u00e9g\u00e9vel adjuk meg. A k\u00e9p igaz\u00edt\u00e1s\u00e1hoz haszn\u00e1ljuk a card-img-top oszt\u00e1lyt A sz\u00f6veges r\u00e9sz legyen a k\u00e1rtya t\u00f6rzse card-body A c\u00edmhez a card-title oszt\u00e1lyt haszn\u00e1ljuk Az egy\u00e9b adatok pedig a k\u00e1rtya l\u00e1bl\u00e9c\u00e9ben card-footer jelenjenek meg a l\u00e1bl\u00e9c f\u00f6l\u00f6tti vonal legyen szaggatott, a bet\u0171m\u00e9ret 12px, a h\u00e1tt\u00e9rsz\u00edn \u00e1tl\u00e1tsz\u00f3, a l\u00e1bl\u00e9cben szerepl\u0151 linkek legyenek sz\u00fcrk\u00e9k \u00e9s ha f\u00f6l\u00e9 vissz\u00fck az egeret akkor z\u00f6ldek, de ne legyen al\u00e1h\u00fazva. Az ikonok mindig legyenek z\u00f6ldek. Tipp: A l\u00e1bl\u00e9chez \u00e9rdemes egyedi CSS oszt\u00e1ly(oka)t is defini\u00e1lni. \u00dcgyeljen arra, hogy a marg\u00f3k \u00e9s paddingok hasonl\u00f3ak legyenek. Tipp: haszn\u00e1lja a m-0 , py-2 .... oszt\u00e1lyokat. R\u00e9szletesen a Bootstrap spacing szekci\u00f3ban lehet r\u00f3la olvasni. Az egyes blog bejegyz\u00e9seknek, az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 m\u00f3don kell megjelennie: BEADAND\u00d3 (1 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a teljes oldalr\u00f3l, amin l\u00e1that\u00f3 az elk\u00e9sz\u00edtett blogpost megform\u00e1zva. ( f3.png ) Feladat 4 - Reszponz\u00edv blog bejegyz\u00e9s lista \u00b6 Eg\u00e9sz\u00edtse ki a HTML k\u00f3dot \u00fagy, hogy az oldalon \u00f6sszesen 6 blogbejegyz\u00e9s jelenjen meg. Az egyes bejegyz\u00e9sek minden adata lehet azonos, csak a k\u00e9peket cser\u00e9lje le. A k\u00e9peket az assets/img k\u00f6nyvt\u00e1rban tal\u00e1lja. Haszn\u00e1lja a Bootstrap \u00e1ltal defini\u00e1lt alap\u00e9rtelmezetten 12 has\u00e1bos grid rendszert . Az oldalt \u00fagy val\u00f3s\u00edtsa meg, hogy magas felbont\u00e1son 3 has\u00e1bos legyen, k\u00f6zepesen 2, kicsin pedig 1 has\u00e1bos. Magas felbont\u00e1son K\u00f6zepes felbont\u00e1son Kicsi felbont\u00e1son BEADAND\u00d3 (1 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet mindh\u00e1rom felbont\u00e1son, a teljes oldalr\u00f3l. ( f4.png ) Feladat 5 - Oldal l\u00e1bl\u00e9c elk\u00e9sz\u00edt\u00e9se \u00b6 A l\u00e1bl\u00e9c elk\u00e9sz\u00edt\u00e9sekor a footerben egyedi CSS oszt\u00e1lyban adja meg, hogy fekete legyen a h\u00e1tt\u00e9r \u00e9s feh\u00e9r a bet\u0171sz\u00edn. Ezen fel\u00fcl adjon meg megfelel\u0151 m\u00e9ret\u0171 paddingot, amihez haszn\u00e1lhatja a p-4 CSS oszt\u00e1lyt illetve annak egy\u00e9b v\u00e1ltozatait. R\u00e9szletes le\u00edr\u00e1s a Bootstrap spacing fejezetben tal\u00e1lhat\u00f3. A copyright sz\u00f6veg ker\u00fclj\u00f6n balra, az ikonok pedig jobbra. Ehhez a flexboxot haszn\u00e1lja. \u00dcgyeljen arra, hogy az egyes ikonok m\u00e9rete \u00e9s t\u00e1vols\u00e1ga is megfelel\u0151 legyen. BEADAND\u00d3 (0.5 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00edtett l\u00e1bl\u00e9cr\u0151l. ( f5.png ) Feladat 5 iMSc - L\u00e1bl\u00e9c igaz\u00edt\u00e1sa az oldal alj\u00e1ra \u00b6 Dolgozzon ki megold\u00e1st arra, hogy az oldal l\u00e1bl\u00e9ce mindig a l\u00e1that\u00f3 k\u00e9perny\u0151 alj\u00e1n legyen. Akkor is ha az oldalon kev\u00e9s a tartalom \u00e9s akkor is ha scrollozni kell az oldalon Soha ne takarjon ki tartalmi r\u00e9szt. Tipp: a megold\u00e1shoz haszn\u00e1lhatja a calc f\u00fcggv\u00e9nyt a magass\u00e1g sz\u00e1m\u00edt\u00e1s\u00e1hoz, vagy ak\u00e1r a flexboxot is. iMSc BEADAND\u00d3 (0.5 iMSc pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet a teljes oldalr\u00f3l amikor azon kell scrollozni ( f5.imsc1.png ), illetve akkor is, amikor csak kev\u00e9s tartalom van rajta ( f5.imsc2.png ). (A kev\u00e9s tartalomhoz kommentezze ki a k\u00e1rty\u00e1k egy r\u00e9sz\u00e9t.) Feladat 6 - Regisztr\u00e1ci\u00f3s \u0171rlap l\u00e9trehoz\u00e1sa \u00b6 Az elk\u00e9sz\u00edtett oldal tetej\u00e9n tal\u00e1lhat\u00f3 egy Register felirat\u00fa link, ami a register.html oldalra ir\u00e1ny\u00edt. A feladat ennek az oldalnak az elk\u00e9sz\u00edt\u00e9se. Az oldal fejl\u00e9c \u00e9s l\u00e1bl\u00e9c r\u00e9sze v\u00e1ltozatlan, teh\u00e1t azt m\u00e1solja \u00e1t a megl\u00e9v\u0151 index.html oldalr\u00f3l. Csak a navig\u00e1ci\u00f3 ut\u00e1ni r\u00e9sz fog v\u00e1ltozni. Az oldalon egy \u0171rlapot kell k\u00e9sz\u00edteni, ahol a felhaszn\u00e1l\u00f3t\u00f3 bek\u00e9rj\u00fck a k\u00f6vetkez\u0151 al\u00e1bbi adatokat: Email c\u00edm , Password , Address , City , State (Tipp: select ), ZIP . Az \u0171rlap v\u00e9g\u00e9n legyen egy checkbox, hogy elfogadja a felt\u00e9teleket illetve egy Sign in felirat\u00fa gomb, ami elk\u00fcldi az \u0171rlapot. Az inputok l\u00e9trehoz\u00e1s\u00e1n\u00e1l \u00fcgyeljen mindig a megfelel\u0151 t\u00edpus haszn\u00e1lat\u00e1ra. A sz\u00f6vegdobozokba tegyen placeholder sz\u00f6veget is. Az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 elrendez\u00e9st val\u00f3s\u00edtja meg. Ellen\u0151rizze, hogy az oldal kis k\u00e9perny\u0151 m\u00e9reten az al\u00e1bbi elrendez\u00e9sben jelenik-e meg. Ha nem, akkor jav\u00edtsa a k\u00f3dot, hogy az al\u00e1bbi kin\u00e9zetet kapja. BEADAND\u00d3 (1.5 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00edtett oldalr\u00f3l kicsi ( f6.1.png ) \u00e9s magas ( f6.2.png ) felbont\u00e1son is. Feladat 6 iMSc - Regisztr\u00e1ci\u00f3 \u0171rlap k\u00f6z\u00e9pre igaz\u00edt\u00e1sa \u00e9s placeholder design \u00b6 Flexbox seg\u00edts\u00e9g\u00e9vel igaz\u00edtsa a regisztr\u00e1ci\u00f3s \u0171rlapot f\u00fcgg\u0151legesen k\u00f6z\u00e9pre. Defini\u00e1lja fel\u00fcl a placeholder sz\u00f6vegek megjelen\u00edt\u00e9s\u00e9t is. Legyen piros d\u0151lt bet\u0171 a placeholder mindenhol. Tipp: ::placeholder iMSc BEADAND\u00d3 (0.5 iMSc pont) Illesszen be az elk\u00e9sz\u00edtett teljes oldalr\u00f3l egy k\u00e9perny\u0151k\u00e9pet, ahol a placeholderek is l\u00e1that\u00f3ak. ( f6.imsc.png )","title":"Labor 10 - Bootstrap"},{"location":"laborok/10-bootstrap/#labor-10-bootstrap","text":"","title":"Labor 10 - Bootstrap"},{"location":"laborok/10-bootstrap/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github .","title":"Bevezet\u00e9s"},{"location":"laborok/10-bootstrap/#git-repository-letrehozasa-es-letoltese","text":"Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/10-bootstrap/#feladat-0-ismerkedes-a-kiindulo-projekttel","text":"A webfejleszt\u00e9sben \u00e1ltal\u00e1nos jelens\u00e9g, hogy a diz\u00e1jnerek csak egy k\u00e9pet k\u00e9sz\u00edtenek el, hogy a fel\u00fcletnek hogyan kell kin\u00e9znie, ami alapj\u00e1n el kell k\u00e9sz\u00edteni a megfelel\u0151 HTML \u00e9s CSS k\u00f3dot a fejleszt\u0151nek. A mai labor alkalm\u00e1val egy ilyen k\u00e9pb\u0151l (\u00e9s egy kicsi HTML v\u00e1z seg\u00edts\u00e9g\u00e9vel) kell az oldalt elk\u00e9sz\u00edteni. A diz\u00e1jnol\u00e1s folyam\u00e1n \u00e1ltal\u00e1ban valamilyen keretrendszerb\u0151l indulunk ki, mely k\u00e9sz megold\u00e1sokat ad a leggyakoribb feladatokra, \u00edgy cs\u00f6kkentve az egyedi CSS mennyis\u00e9g\u00e9t. A Bootstrap k\u00e9t alapvet\u0151 funkci\u00f3t ny\u00fajt: egys\u00e9ges form\u00e1z\u00e1s (gombok, sz\u00ednek) \u00e9s grid alap\u00fa elrendez\u00e9s kiz\u00e1r\u00f3lag CSS-sel, gyakori komponensek (felugr\u00f3 ablakok, k\u00e1rty\u00e1k, nyithat\u00f3-z\u00e1rhat\u00f3 blokkok, kiemel\u00e9sek, panelek) CSS-sel \u00e9s/vagy JavaScriptb\u0151l. A laboron ezekb\u0151l a k\u00e9sz komponensekb\u0151l fogunk megismerni egy p\u00e1rat k\u00f6zelebbr\u0151l is.","title":"Feladat 0. - Ismerked\u00e9s a kiindul\u00f3 projekttel"},{"location":"laborok/10-bootstrap/#bootstrap-hozzaadasa-egy-html-oldalhoz","text":"Nyissuk meg az index.html f\u00e1jlt, amit a labor sor\u00e1n meg fogunk form\u00e1zni. N\u00e9zz\u00fck meg, hogy az oldal head -j\u00e9ben milyen \u00e1llom\u00e1nyokat \u00e9s honnan t\u00f6lt\u00fcnk be. < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > MyBlog </ title > <!-- Bootstrap linkel\u00e9se CDN-r\u0151l --> < link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity = \"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin = \"anonymous\" > <!-- Font awesome 5 CDN-r\u0151l (solid, regular \u00e9s brand is) --> < link rel = \"stylesheet\" href = \"https://use.fontawesome.com/releases/v5.15.1/css/all.css\" crossorigin = \"anonymous\" > <!-- Google font (Muli) let\u00f6lt\u00e9se --> < link href = \"https://fonts.googleapis.com/css?family=Muli\" rel = \"stylesheet\" > <!-- Saj\u00e1t CSS --> < link rel = \"stylesheet\" href = \"assets/css/site.css\" > </ head > Figyelj\u00fck meg, hogy n\u00e9gy k\u00fcl\u00f6nb\u00f6z\u0151 CSS \u00e1llom\u00e1nyt t\u00f6lt\u00fcnk be, egy kiv\u00e9tel\u00e9vel CDN-r\u0151l: Az els\u0151 mag\u00e1t a Bootstrap-et t\u00f6lti be. Ezt k\u00f6vet\u0151en egy gyakran haszn\u00e1lt ikongy\u0171jtem\u00e9nyt, a Font Awesome-ot t\u00f6ltj\u00fck le. Ezen fel\u00fcl, mivel egyedi bet\u0171t\u00edpust haszn\u00e1lunk, azt a Google fonts oldal\u00e1r\u00f3l t\u00f6ltj\u00fck le. A legutols\u00f3 hivatkoz\u00e1s pedig az \u00e1ltalunk k\u00e9sz\u00edtett CSS f\u00e1jlt hivatkozza be. Bet\u00f6lt\u00e9si lehet\u0151s\u00e9gek A CSS \u00e9s JS k\u00f6nyvt\u00e1rakat t\u00f6bbf\u00e9lek\u00e9ppen is be tudjuk t\u00f6lteni: CDN-r\u0151l, publikus webr\u0151l t\u00f6lti le a CSS f\u00e1jlt, amit most is haszn\u00e1lunk, van lehet\u0151s\u00e9g\u00fcnk csomagkezel\u0151t (npm, bower) haszn\u00e1lni let\u00f6lt\u00e9sre \u00e9s magunk kiszolg\u00e1lni a f\u00e1jlt, ak\u00e1r saj\u00e1t magunk k\u00e9zzel is let\u00f6lthetj\u00fck a megfelel\u0151 f\u00e1jlokat, ebben az esetben is a saj\u00e1t webszerver\u00fcnk szolg\u00e1lja ki ezeket a f\u00e1jlokat. Ha az alkalmaz\u00e1s elrendez\u00e9s\u00e9t szeretn\u00e9nk megadni, el\u00e9g sok boilerplate-jelleg\u0171 CSS k\u00f3dot kellene \u00edrnunk. A Bootstrap megk\u00f6zel\u00edt\u00e9se, hogy a gyakori elrendez\u00e9si lehet\u0151s\u00e9geket \u00e9s st\u00edlusoz\u00e1si lehet\u0151s\u00e9geket k\u00e9szen \u00e9s konfigur\u00e1lhat\u00f3an adja nek\u00fcnk. A megval\u00f3s\u00edtand\u00f3 oldal az al\u00e1bbi f\u0151bb r\u00e9szekb\u0151l \u00e1ll: navig\u00e1ci\u00f3s s\u00e1v, oldal k\u00f6zponti eleme, ami blogbejegyz\u00e9sek list\u00e1j\u00e1t tartalmazza, l\u00e1bl\u00e9c.","title":"Bootstrap hozz\u00e1ad\u00e1sa egy HTML oldalhoz"},{"location":"laborok/10-bootstrap/#feladat-1-navigacios-sav","text":"A navig\u00e1ci\u00f3s s\u00e1v fel\u00e9p\u00edt\u00e9se legyen a k\u00f6vetkez\u0151 (a HTML v\u00e1z szerepel a kiindul\u00f3 index.html -ben): bal sz\u00e9len szerepeljen egy a BME AUT logo, ami az assets/img/logo-bme-aut.png \u00fatvonalon \u00e9rhet\u0151 el, ezt k\u00f6vet\u0151en a k\u00e9t navig\u00e1ci\u00f3s link: Home \u00e9s Registration, a s\u00e1v jobb sz\u00e9l\u00e9n pedig egy keres\u00e9s sz\u00f6vegdoboz \u00e9s egy Search felirat\u00fa gomb legyen. A navig\u00e1ci\u00f3s s\u00e1v az al\u00e1bbiak szerint n\u00e9zzen ki magas felbont\u00e1son Mivel a navig\u00e1ci\u00f3 is egy gyakori probl\u00e9ma, a Bootstrap ad r\u00e1 k\u00e9sz komponenst, a **navbar**t. A megval\u00f3s\u00edt\u00e1s el\u0151tt n\u00e9zz\u00fck meg, hogyan \u00e9p\u00fcl fel a Bootstrap navbar komponense. Az oldalon tal\u00e1lunk k\u00e9sz HTML v\u00e1zakat is, amib\u0151l ha a megfelel\u0151t kiv\u00e1lasztva bem\u00e1soljuk a saj\u00e1t k\u00f3dunkba, apr\u00f3 m\u00f3dos\u00edt\u00e1sokkal el tudjuk \u00e9rni a megfelel\u0151 kin\u00e9zetet. A legfontosabb oszt\u00e1lyok, amire a navbar \u00e9p\u00edt: .navbar-brand brand logo megjelen\u00edt\u00e9s\u00e9re. .navbar-nav teljes magass\u00e1g\u00fa egyszer\u0171 navig\u00e1ci\u00f3s elemek megad\u00e1s\u00e1hoz (a leg\u00f6rd\u00fcl\u0151 lista is t\u00e1mogatott). .navbar-toggler mobil n\u00e9zeten el lehessen rejteni a linkeket egy hamburger men\u00fc al\u00e1. .form-inline ha valamilyen form controlt szeretn\u00e9nk a navig\u00e1ci\u00f3s s\u00e1vba tenni. .navbar-text ha f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtott sz\u00f6veget szeretn\u00e9nk haszn\u00e1lni. .collapse.navbar-collapse elemek csoportos elrejt\u00e9s\u00e9re haszn\u00e1lhat\u00f3. Tip \u00c9rdemes keresni a dokument\u00e1ci\u00f3ban egy ahhoz hasonl\u00f3 megjelen\u00e9st amire nek\u00fcnk is sz\u00fcks\u00e9g\u00fcnk van \u00e9s az ott tal\u00e1lhat\u00f3 HTML k\u00f3dot \u00e1talak\u00edtani a saj\u00e1t ig\u00e9nyeinknek megfelel\u0151en. A s\u00f6t\u00e9t h\u00e1tter\u0171 navbarhoz haszn\u00e1ljuk navbar-dark \u00e9s bg-dark oszt\u00e1lyokat. !!! example \"BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtse el a fent ismertetett navig\u00e1ci\u00f3s s\u00e1vot Bootstrap 4 seg\u00edts\u00e9g\u00e9vel. Az elk\u00e9sz\u00fclt navig\u00e1ci\u00f3s s\u00e1vr\u00f3l illesszen be egy k\u00e9perny\u0151k\u00e9pet! ( f1.png )","title":"Feladat 1 - Navig\u00e1ci\u00f3s s\u00e1v"},{"location":"laborok/10-bootstrap/#feladat-2-reszponziv-megjelenes","text":"A navig\u00e1ci\u00f3t is reszponz\u00edvan kell megval\u00f3s\u00edtani, teh\u00e1t ha \u00e1tm\u00e9retezz\u00fck az oldalt, akkor a navig\u00e1ci\u00f3s men\u00fcpontokat el kell rejteni \u00e9s egy \u00fagynevezett hamburger men\u00fct kell megjelen\u00edteni helyette, amire kattintva megjelennek a men\u00fcpontok. M\u00e9g miel\u0151tt nekiesn\u00e9nk az egyedi megold\u00e1s kital\u00e1l\u00e1s\u00e1ra \u00e9rdemes megn\u00e9zni, hogy a Bootstrap t\u00e1mogatja ezt a funkcionalit\u00e1st is, teh\u00e1t csak a megfelel\u0151 HTML v\u00e1zat kell kikeresni a Bootstrap navbar dokument\u00e1ci\u00f3j\u00e1b\u00f3l \u00e9s az alapj\u00e1n kieg\u00e9sz\u00edteni a k\u00f3dunkat. Tipp: navbar-toggler A k\u00e9sz oldalnak \u00edgy kell kin\u00e9znie. Mobil eszk\u00f6z\u00f6n z\u00e1rva. Mobil eszk\u00f6z\u00f6n lenyitva BEADAND\u00d3 (0.5 pont) Tegye reszponz\u00edvv\u00e1 a navig\u00e1ci\u00f3s men\u00fct a fenti k\u00e9peknek megfelel\u0151en. Az elk\u00e9sz\u00fclt teljes oldalr\u00f3l (ne csak a navig\u00e1ci\u00f3s s\u00e1vr\u00f3l) illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet: mobil n\u00e9zeten, ahol nincs lenyitva a hamburger men\u00fc, ( f2.1.png ) mobil n\u00e9zeten, ahol le van nyitva a hamburger men\u00fc, ( f2.2.png ) nem mobil n\u00e9zeten. ( f2.3.png )","title":"Feladat 2 - Reszponz\u00edv megjelen\u00e9s"},{"location":"laborok/10-bootstrap/#feladat-2-imsc-navigacios-savban-szabalyok-feluldefinialasa","text":"A navig\u00e1ci\u00f3s men\u00fcben a linkek feh\u00e9r sz\u00edn\u0171ek, hiszen a Bootstrap erre \u00e1ll\u00edtja be. Defini\u00e1lja fel\u00fcl a Bootstrapben megadott men\u00fcpont sz\u00edneket a site.css-ben \u00fagy, hogy azok z\u00f6ldek legyenek \u00e9s ha egy men\u00fcpont f\u00f6l\u00e9 vissz\u00fck az egeret, akkor v\u00e1ltson s\u00f6t\u00e9tz\u00f6ldre. Az !important kulcssz\u00f3t nem haszn\u00e1lhatja! iMSc BEADAND\u00d3 (1 iMSc pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a b\u00f6ng\u00e9sz\u0151 devTool (F12) ablak\u00e1r\u00f3l, amin l\u00e1that\u00f3, hogy milyen CSS oszt\u00e1ly hat\u00e1rozza meg most az egyes men\u00fcpontok (pl.: Home) bet\u0171sz\u00edn\u00e9t. Tipp: haszn\u00e1lja a Computed tabf\u00fclet. ( f2.imsc1.png ) A k\u00e9sz megold\u00e1sr\u00f3l csatoljon egy k\u00e9perny\u0151k\u00e9pet. ( f2.imsc2.png )","title":"Feladat 2 iMSc - Navig\u00e1ci\u00f3s s\u00e1vban szab\u00e1lyok fel\u00fcldefini\u00e1l\u00e1sa"},{"location":"laborok/10-bootstrap/#feladat-3-egy-kartya-blog-bejegyzes-formazasa","text":"A navig\u00e1ci\u00f3 ut\u00e1n t\u00e9rj\u00fcnk \u00e1t a f\u0151 tartalmi elemre, a blog bejegyz\u00e9sre. El\u0151sz\u00f6r csak egy bejegyz\u00e9st form\u00e1zzunk meg. A blog post HTML v\u00e1za m\u00e1r szerepel az index oldalon, ezt kell kieg\u00e9sz\u00edteni a megfelel\u0151 Bootstrap oszt\u00e1lyokkal \u00e9s helyenk\u00e9nt k\u00e9sz\u00edteni egy-egy CSS szab\u00e1lyt, amivel kieg\u00e9sz\u00edtj\u00fck a Bootstrap-es oszt\u00e1lyokat. A megold\u00e1shoz haszn\u00e1ljuk a Bootstrap card -j\u00e1t. Mivel majd t\u00f6bb k\u00e1rtya ker\u00fcl egym\u00e1s mell\u00e9 a sz\u00e9less\u00e9get a grid oszlopaihoz haszn\u00e1lt col-x seg\u00edts\u00e9g\u00e9vel adjuk meg. A k\u00e9p igaz\u00edt\u00e1s\u00e1hoz haszn\u00e1ljuk a card-img-top oszt\u00e1lyt A sz\u00f6veges r\u00e9sz legyen a k\u00e1rtya t\u00f6rzse card-body A c\u00edmhez a card-title oszt\u00e1lyt haszn\u00e1ljuk Az egy\u00e9b adatok pedig a k\u00e1rtya l\u00e1bl\u00e9c\u00e9ben card-footer jelenjenek meg a l\u00e1bl\u00e9c f\u00f6l\u00f6tti vonal legyen szaggatott, a bet\u0171m\u00e9ret 12px, a h\u00e1tt\u00e9rsz\u00edn \u00e1tl\u00e1tsz\u00f3, a l\u00e1bl\u00e9cben szerepl\u0151 linkek legyenek sz\u00fcrk\u00e9k \u00e9s ha f\u00f6l\u00e9 vissz\u00fck az egeret akkor z\u00f6ldek, de ne legyen al\u00e1h\u00fazva. Az ikonok mindig legyenek z\u00f6ldek. Tipp: A l\u00e1bl\u00e9chez \u00e9rdemes egyedi CSS oszt\u00e1ly(oka)t is defini\u00e1lni. \u00dcgyeljen arra, hogy a marg\u00f3k \u00e9s paddingok hasonl\u00f3ak legyenek. Tipp: haszn\u00e1lja a m-0 , py-2 .... oszt\u00e1lyokat. R\u00e9szletesen a Bootstrap spacing szekci\u00f3ban lehet r\u00f3la olvasni. Az egyes blog bejegyz\u00e9seknek, az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 m\u00f3don kell megjelennie: BEADAND\u00d3 (1 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a teljes oldalr\u00f3l, amin l\u00e1that\u00f3 az elk\u00e9sz\u00edtett blogpost megform\u00e1zva. ( f3.png )","title":"Feladat 3 - Egy k\u00e1rtya (blog bejegyz\u00e9s) form\u00e1z\u00e1sa"},{"location":"laborok/10-bootstrap/#feladat-4-reszponziv-blog-bejegyzes-lista","text":"Eg\u00e9sz\u00edtse ki a HTML k\u00f3dot \u00fagy, hogy az oldalon \u00f6sszesen 6 blogbejegyz\u00e9s jelenjen meg. Az egyes bejegyz\u00e9sek minden adata lehet azonos, csak a k\u00e9peket cser\u00e9lje le. A k\u00e9peket az assets/img k\u00f6nyvt\u00e1rban tal\u00e1lja. Haszn\u00e1lja a Bootstrap \u00e1ltal defini\u00e1lt alap\u00e9rtelmezetten 12 has\u00e1bos grid rendszert . Az oldalt \u00fagy val\u00f3s\u00edtsa meg, hogy magas felbont\u00e1son 3 has\u00e1bos legyen, k\u00f6zepesen 2, kicsin pedig 1 has\u00e1bos. Magas felbont\u00e1son K\u00f6zepes felbont\u00e1son Kicsi felbont\u00e1son BEADAND\u00d3 (1 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet mindh\u00e1rom felbont\u00e1son, a teljes oldalr\u00f3l. ( f4.png )","title":"Feladat 4 - Reszponz\u00edv blog bejegyz\u00e9s lista"},{"location":"laborok/10-bootstrap/#feladat-5-oldal-lablec-elkeszitese","text":"A l\u00e1bl\u00e9c elk\u00e9sz\u00edt\u00e9sekor a footerben egyedi CSS oszt\u00e1lyban adja meg, hogy fekete legyen a h\u00e1tt\u00e9r \u00e9s feh\u00e9r a bet\u0171sz\u00edn. Ezen fel\u00fcl adjon meg megfelel\u0151 m\u00e9ret\u0171 paddingot, amihez haszn\u00e1lhatja a p-4 CSS oszt\u00e1lyt illetve annak egy\u00e9b v\u00e1ltozatait. R\u00e9szletes le\u00edr\u00e1s a Bootstrap spacing fejezetben tal\u00e1lhat\u00f3. A copyright sz\u00f6veg ker\u00fclj\u00f6n balra, az ikonok pedig jobbra. Ehhez a flexboxot haszn\u00e1lja. \u00dcgyeljen arra, hogy az egyes ikonok m\u00e9rete \u00e9s t\u00e1vols\u00e1ga is megfelel\u0151 legyen. BEADAND\u00d3 (0.5 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00edtett l\u00e1bl\u00e9cr\u0151l. ( f5.png )","title":"Feladat 5 - Oldal l\u00e1bl\u00e9c elk\u00e9sz\u00edt\u00e9se"},{"location":"laborok/10-bootstrap/#feladat-5-imsc-lablec-igazitasa-az-oldal-aljara","text":"Dolgozzon ki megold\u00e1st arra, hogy az oldal l\u00e1bl\u00e9ce mindig a l\u00e1that\u00f3 k\u00e9perny\u0151 alj\u00e1n legyen. Akkor is ha az oldalon kev\u00e9s a tartalom \u00e9s akkor is ha scrollozni kell az oldalon Soha ne takarjon ki tartalmi r\u00e9szt. Tipp: a megold\u00e1shoz haszn\u00e1lhatja a calc f\u00fcggv\u00e9nyt a magass\u00e1g sz\u00e1m\u00edt\u00e1s\u00e1hoz, vagy ak\u00e1r a flexboxot is. iMSc BEADAND\u00d3 (0.5 iMSc pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet a teljes oldalr\u00f3l amikor azon kell scrollozni ( f5.imsc1.png ), illetve akkor is, amikor csak kev\u00e9s tartalom van rajta ( f5.imsc2.png ). (A kev\u00e9s tartalomhoz kommentezze ki a k\u00e1rty\u00e1k egy r\u00e9sz\u00e9t.)","title":"Feladat 5 iMSc - L\u00e1bl\u00e9c igaz\u00edt\u00e1sa az oldal alj\u00e1ra"},{"location":"laborok/10-bootstrap/#feladat-6-regisztracios-urlap-letrehozasa","text":"Az elk\u00e9sz\u00edtett oldal tetej\u00e9n tal\u00e1lhat\u00f3 egy Register felirat\u00fa link, ami a register.html oldalra ir\u00e1ny\u00edt. A feladat ennek az oldalnak az elk\u00e9sz\u00edt\u00e9se. Az oldal fejl\u00e9c \u00e9s l\u00e1bl\u00e9c r\u00e9sze v\u00e1ltozatlan, teh\u00e1t azt m\u00e1solja \u00e1t a megl\u00e9v\u0151 index.html oldalr\u00f3l. Csak a navig\u00e1ci\u00f3 ut\u00e1ni r\u00e9sz fog v\u00e1ltozni. Az oldalon egy \u0171rlapot kell k\u00e9sz\u00edteni, ahol a felhaszn\u00e1l\u00f3t\u00f3 bek\u00e9rj\u00fck a k\u00f6vetkez\u0151 al\u00e1bbi adatokat: Email c\u00edm , Password , Address , City , State (Tipp: select ), ZIP . Az \u0171rlap v\u00e9g\u00e9n legyen egy checkbox, hogy elfogadja a felt\u00e9teleket illetve egy Sign in felirat\u00fa gomb, ami elk\u00fcldi az \u0171rlapot. Az inputok l\u00e9trehoz\u00e1s\u00e1n\u00e1l \u00fcgyeljen mindig a megfelel\u0151 t\u00edpus haszn\u00e1lat\u00e1ra. A sz\u00f6vegdobozokba tegyen placeholder sz\u00f6veget is. Az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 elrendez\u00e9st val\u00f3s\u00edtja meg. Ellen\u0151rizze, hogy az oldal kis k\u00e9perny\u0151 m\u00e9reten az al\u00e1bbi elrendez\u00e9sben jelenik-e meg. Ha nem, akkor jav\u00edtsa a k\u00f3dot, hogy az al\u00e1bbi kin\u00e9zetet kapja. BEADAND\u00d3 (1.5 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00edtett oldalr\u00f3l kicsi ( f6.1.png ) \u00e9s magas ( f6.2.png ) felbont\u00e1son is.","title":"Feladat 6 - Regisztr\u00e1ci\u00f3s \u0171rlap l\u00e9trehoz\u00e1sa"},{"location":"laborok/10-bootstrap/#feladat-6-imsc-regisztracio-urlap-kozepre-igazitasa-es-placeholder-design","text":"Flexbox seg\u00edts\u00e9g\u00e9vel igaz\u00edtsa a regisztr\u00e1ci\u00f3s \u0171rlapot f\u00fcgg\u0151legesen k\u00f6z\u00e9pre. Defini\u00e1lja fel\u00fcl a placeholder sz\u00f6vegek megjelen\u00edt\u00e9s\u00e9t is. Legyen piros d\u0151lt bet\u0171 a placeholder mindenhol. Tipp: ::placeholder iMSc BEADAND\u00d3 (0.5 iMSc pont) Illesszen be az elk\u00e9sz\u00edtett teljes oldalr\u00f3l egy k\u00e9perny\u0151k\u00e9pet, ahol a placeholderek is l\u00e1that\u00f3ak. ( f6.imsc.png )","title":"Feladat 6 iMSc - Regisztr\u00e1ci\u00f3 \u0171rlap k\u00f6z\u00e9pre igaz\u00edt\u00e1sa \u00e9s placeholder design"},{"location":"laborok/11-js/","text":"Labor 11 - JavaScript alapok \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A JavaScriptr\u0151l di\u00f3h\u00e9jban A kor\u00e1bban megismert HTML \u00e9s CSS adj\u00e1k a weboldalunk v\u00e1z\u00e1t, alapm\u0171k\u00f6d\u00e9s\u00e9t \u00e9s kin\u00e9zet\u00e9t, viszont a korai dokumentum-alap\u00fa weboldalakt\u00f3l \u00e1tt\u00e9rt\u00fcnk a dinamikus weboldalakra, melyek fut\u00e1s id\u0151ben m\u00f3dos\u00edtj\u00e1k az aktu\u00e1lis dokumentumot (a DOM-ot), \u00edgy interakci\u00f3t kezelhet\u00fcnk, \u00e9s a weboldalunkra (a kliens oldalra) \u00f6n\u00e1ll\u00f3 alkalmaz\u00e1sk\u00e9nt tekint\u00fcnk. Az alkalmaz\u00e1sainkhoz dinamizmust (id\u0151beni v\u00e1ltoz\u00e1st) szkriptel\u00e9ssel rendel\u00fcnk, erre JavaScriptet haszn\u00e1lunk. A JavaScript egy dinamikusan t\u00edpusos, interpret\u00e1lt szkriptnyelv, a hozz\u00e1 tartoz\u00f3 futtat\u00f3k\u00f6rnyezetek v\u00e9grehajt\u00f3 egys\u00e9gei pedig alapvet\u0151en egysz\u00e1l\u00faak, \u00edgy nincsen k\u00f6lcs\u00f6n\u00f6s kiz\u00e1r\u00e1si probl\u00e9m\u00e1nk. \u00c9rdemes tov\u00e1bb\u00e1 megeml\u00edteni a felhaszn\u00e1land\u00f3 t\u00edpusokat ( function , object , string , number , undefined , boolean , symbol ), az ezek k\u00f6z\u00f6tti szabad konverzi\u00f3t \u00e9s a JavaScript esem\u00e9nyhurkot ( event loop ). Az event loop a JavaScriptet folyamatosan befejez\u0151d\u00e9sig futtatja ( \"Run-to-completion\" ), am\u00edg a fut\u00e1s be nem fejez\u0151dik, majd aszinkron esem\u00e9nyre v\u00e1r. Az esem\u00e9nyek bek\u00f6vetkezt\u00e9vel az esem\u00e9nyhez regisztr\u00e1lt esem\u00e9nykezel\u0151k lefutnak. Az esem\u00e9nyek lehetnek: felhaszn\u00e1l\u00f3i interakci\u00f3, id\u0151z\u00edt\u00e9s, IO m\u0171veletek eredm\u00e9nye (pl. AJAX, Websocket). A fontosabb kulcsgondolatok teh\u00e1t r\u00f6viden: interpret\u00e1lt futtat\u00e1s, DOM dinamikus manipul\u00e1ci\u00f3ja, dinamikus t\u00edpusoss\u00e1g \u00e9s t\u00edpuskonverzi\u00f3, egysz\u00e1l\u00fas\u00e1g, event loop \u00e9s aszinkronit\u00e1s. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy a JavaScript (klasszikus \u00e9rtelemben v\u00e9ve) nem objektum-orient\u00e1lt, az oszt\u00e1lyok koncepci\u00f3ja a nyelvben k\u00e9s\u0151bb jelent meg; a nyelv a prototipikus \u00f6r\u00f6kl\u00e9s m\u00f3dszer\u00e9t alkalmazza az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9shez. Ezen k\u00edv\u00fcl k\u00fcl\u00f6n\u00f6s saj\u00e1toss\u00e1gai vannak, a this kulcssz\u00f3 pl. nem az aktu\u00e1lis objektumra , hanem az aktu\u00e1lis f\u00fcggv\u00e9nyre mutat (kiv\u00e9tel az arrow syntax , ami a this -t az eredeti \u00e9rt\u00e9ken hagyja). Az Internet Explorer elh\u00edres\u00fclt arr\u00f3l, hogy a fejleszt\u00e9s r\u00e1 jelent\u0151sen neh\u00e9zkesebb, mint b\u00e1rmely alternat\u00edv\u00e1ra. Ma m\u00e1r a Microsoft is hivatalosan is az \u00faj, Chromium alap\u00fa Edge b\u00f6ng\u00e9sz\u0151t t\u00e1mogatja, amely - a m\u00e1r nem is t\u00e1mogatott - Windows 7 OS-en is m\u0171k\u00f6dik, \u00edgy \u00faj weboldalakat Internet Explorer t\u00e1mogat\u00e1ssal m\u00e1r nem kell k\u00e9sz\u00edten\u00fcnk. Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s! Feladat 1 - Egyszer\u0171 esem\u00e9nykezel\u00e9s \u00b6 A laboron egy egyszer\u0171 \"offline\" To-Do alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk. Az alkalmaz\u00e1s alapjak\u00e9nt egy egyszer\u0171 HTML oldal szolg\u00e1l, amihez a saj\u00e1t JavaScript\u00fcnket \u00edrjuk. A JS k\u00f3dot HTML-ben is elhelyezhetn\u00e9nk, viszont az nem karbantarthat\u00f3 \u00e9s alapvet\u0151en nem best practice, \u00fagyhogy a saj\u00e1t todo.js f\u00e1jlba fogjuk tenni a k\u00f3dot, amit behivatkozunk. A st\u00edlusoz\u00e1st Bootstrappel oldjuk meg. Warning A b\u00f6ng\u00e9sz\u0151 k\u00fcl\u00f6nb\u00f6z\u0151 k\u00f6r\u00fclm\u00e9nyek f\u00fcggv\u00e9ny\u00e9ben cache-elheti a f\u00e1jljainkat , ez\u00e9rt a friss\u00edt\u00e9st ilyenkor k\u00e9zzel kell megoldanunk. Ne felejts\u00fck el menteni a f\u00e1jlt, ezut\u00e1n a b\u00f6ng\u00e9sz\u0151ben \u00e1ll\u00edtsuk be az F12 Developer Tools-ban a Network f\u00fcl\u00f6n az \"Always refresh from server\"/\"Disable cache\" vagy hasonl\u00f3 elnevez\u00e9s\u0171 be\u00e1ll\u00edt\u00e1st! L\u00e1thatjuk, hogy a statikus oldal az al\u00e1bbiakb\u00f3l tev\u0151dik \u00f6ssze: c\u00edm, f\u00fclek az \u00f6sszes, akt\u00edv, inakt\u00edv \u00e9s k\u00e9sz elemek sz\u0171r\u00e9s\u00e9re, a to-do elemek list\u00e1ja, az egyes elemek mellett az \u00e9rtelmezett m\u0171veletek, \u00faj elem hozz\u00e1ad\u00e1sa panel, melyen az \u00faj to-do bejegyz\u00e9s sz\u00f6veg\u00e9t kell megadnunk egy \u0171rlapon. A <body> v\u00e9g\u00e9n egy <script> a todo.js f\u00e1jlra hivatkozik! A szkript az oldal l\u00e9nyegi tartalm\u00e1nak bet\u00f6lt\u0151d\u00e9se ut\u00e1n fut le, \u00edgy nem kell majd v\u00e1rakoznunk a dokumentum teljes bet\u00f6lt\u0151d\u00e9s\u00e9re (a gyakorlatban ez azt jelenti, hogy a szkript fut\u00e1s\u00e1nak kezdet\u00e9n a DOM a HTML-nek megfelel\u0151 \u00e1llapotban m\u00e1r l\u00e9trej\u00f6tt). A gyakorlatban ez v\u00e1ltoz\u00f3, szok\u00e1s a <head> elemben in bet\u00f6lteni JS f\u00e1jlokat amikor kritikus, viszont az g\u00e1tolja a HTML megjelen\u00e9s\u00e9t, am\u00edg a JS f\u00e1jl le nem t\u00f6lt\u0151dik. Az egyes to-do-k modellj\u00e9re \u00e9rdemes saj\u00e1t oszt\u00e1lyt defini\u00e1lnunk. Tip Modern (ES6/ES2015 \u00e9s magasabb) JavaScriptben konstruktor f\u00fcggv\u00e9ny helyett haszn\u00e1lhatunk val\u00f3s oszt\u00e1lyokat is, a gyakorlaton ezt fogjuk l\u00e1tni. JavaScriptben egy (nem oszt\u00e1ly) f\u00fcggv\u00e9ny konstruktorf\u00fcggv\u00e9ny, ha a this v\u00e1ltoz\u00f3n tulajdons\u00e1gokat helyez el \u00e9s nem t\u00e9r vissza semmivel. Ekkor a new kulcssz\u00f3val megh\u00edvva a f\u00fcggv\u00e9nyt az konstruktork\u00e9nt funkcion\u00e1l \u00e9s a this (tulajdons\u00e1gokkal \"felaggatott\") \u00e9rt\u00e9k\u00e9t kapjuk vissza. Ezen fel\u00fcl az instanceof kulcssz\u00f3val megvizsg\u00e1lhatjuk, hogy egy adott f\u00fcggv\u00e9ny konstruktora \u00e1ltal k\u00e9sz\u00edtett objektumr\u00f3l van-e sz\u00f3, teh\u00e1t szinte m\u00e1r oszt\u00e1lyp\u00e9ld\u00e1nyk\u00e9nt kezelhetj\u00fck az objektumot. A f\u00fclek lehets\u00e9ges \u00e1llapotai az \"all\", \"active\", \"inactive\" \u00e9s \"done\", az \"all\" kiv\u00e9tel\u00e9vel ezeket az \u00e1llapotokat veheti fel egy to-do elem is. A todo.js elej\u00e9re vegy\u00fck fel a Todo oszt\u00e1lyt, annak konstruktorf\u00fcggv\u00e9ny\u00e9t \u00e9s a konkr\u00e9t p\u00e9ld\u00e1nyokat t\u00e1rol\u00f3 (\u00fcres) t\u00f6mb\u00f6t, valamint a lehets\u00e9ges \u00e1llapotokat: class Todo { constructor ( name , state ) { this . name = name ; this . state = state ; } } const todos = []; const states = [ \"active\" , \"inactive\" , \"done\" ]; const tabs = [ \"all\" ]. concat ( states ); console . log ( tabs ); JavaScript v\u00e1ltoz\u00f3k JavaScriptben h\u00e1rom kulcssz\u00f3val deklar\u00e1lhatunk lok\u00e1lis v\u00e1ltoz\u00f3t: var : az \"eredeti\" m\u00f3dja a v\u00e1ltoz\u00f3 deklar\u00e1ci\u00f3j\u00e1nak, modern JS-ben \u00e9rdemes ker\u00fclni. Engedi ugyanazon v\u00e1ltoz\u00f3 \u00fajradeklar\u00e1ci\u00f3j\u00e1t, s\u0151t, nem k\u00f6ti scope-hoz a v\u00e1ltoz\u00f3t. let : scope-hoz k\u00f6ti a v\u00e1ltoz\u00f3t, ez\u00e9rt nem deklar\u00e1lhat\u00f3 \u00fajra \u00e9s nem is \"sziv\u00e1rog\" \u00e1t a scope-ok k\u00f6z\u00f6tt. const : konstans \u00e9rt\u00e9k\u0171/referenci\u00e1j\u00fa \"v\u00e1ltoz\u00f3t\" (\u00e9rdekes v\u00e1ltoz\u00f3nak nevezni, ha nem v\u00e1ltozhat) t\u00e1rol. A v\u00e1ltoz\u00f3 nem kaphat \u00faj \u00e9rt\u00e9ket (teh\u00e1t ha referenciat\u00edpus, pl. objektum vagy t\u00f6mb, akkor nem lehet \u00faj objektumot/\u00e9rt\u00e9ket adni a v\u00e1ltoz\u00f3nak), de ha objektumot t\u00e1rol, annak tagjai (vagy a t\u00f6mb elemei) \u00e9rtelemszer\u0171en v\u00e1ltozhatnak. A legnyilv\u00e1nval\u00f3bb (ha nem is a legrobusztusabb) m\u00f3dja a hibakeres\u00e9snek az, ha a konzolra \u00edrunk. Az F12 seg\u00edts\u00e9g\u00e9vel a Console f\u00fcl\u00f6n l\u00e1thatjuk a kimenetet. Iratkozzunk fel a form submit esem\u00e9ny\u00e9re \u00e9s kezelj\u00fck az \u00faj to-do elem l\u00e9trehoz\u00e1s\u00e1t! A feliratkoz\u00e1st megtehetj\u00fck HTML-b\u0151l \u00e9s JavaScriptb\u0151l is, most az ut\u00f3bbit alkalmazzuk! Illessz\u00fck be az al\u00e1bbi k\u00f3dr\u00e9szletet a kor\u00e1bbi k\u00f3dr\u00e9szletek ut\u00e1n! const form = document . getElementById ( \"new-todo-form\" ); const input = document . getElementById ( \"new-todo-title\" ); form . onsubmit = event => { event . preventDefault (); // megg\u00e1toljuk az alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9st, ami friss\u00edten\u00e9 az oldalt if ( input ? . value ? . length ) { // ha \u00e9rv\u00e9nyes \u00e9rt\u00e9k van benne -- ekvivalens ezzel: if (input && input.value && input.value.length) vagy if (input != null && input.value != null && input.value.length > 0) todos . push ( new Todo ( input . value , \"active\" )); // \u00faj to-do-t akt\u00edv \u00e1llapotban hozunk l\u00e9tre input . value = \"\" ; // ki\u00fcr\u00edtj\u00fck az inputot // TODO: \u00fajrarajzolni a list\u00e1t } } Defini\u00e1lnunk kell m\u00e9g a gombokat, amiket a Todo-hoz fogunk rendelni. Nem volna sz\u00fcks\u00e9g a modellek defini\u00e1l\u00e1s\u00e1ra, elv\u00e9gre is a JS egy dinamikus nyelv, de strukt\u00far\u00e1t ad a k\u00f3dnak, objektum-orient\u00e1ltabban kezelhet\u0151. Info A VS Code-ban val\u00f3sz\u00edn\u0171leg az IntelliSense nyom\u00e1ra tudunk bukkanni a JS k\u00f3d \u00edr\u00e1sa k\u00f6zben. Ennek az oka nem a JavaScript, hanem a h\u00e1tt\u00e9rben fut\u00f3 TypeScript ford\u00edt\u00f3. Mivel minden JavaScript egyben TypeScript k\u00f3d is, ez\u00e9rt a t\u00edpusinform\u00e1ci\u00f3k kinyerhet\u0151k a k\u00f3db\u00f3l. Ez a TypeScript nagy el\u0151nye a JS-sel szemben. Ford\u00edt\u00e1si hib\u00e1ink nem lesznek JavaScriptben, de az IntelliSense seg\u00edts\u00e9g\u00e9t ki lehet \u00edgy haszn\u00e1lni. class Button { constructor ( action , icon , type , title ) { this . action = action ; // a m\u0171velet, amit a gomb v\u00e9gez this . icon = icon ; // a FontAwesome ikon neve (class=\"fas fa-*\") this . type = type ; // a gomb Bootstrapbeni t\u00edpusa (\"secondary\", \"danger\" stb.) this . title = title ; // a gomb tooltip sz\u00f6vege } } const buttons = [ // a gombokat reprezent\u00e1l\u00f3 modell objektumok t\u00f6mbje new Button ( \"done\" , \"check\" , \"success\" , \"Mark as done\" ), new Button ( \"active\" , \"plus\" , \"secondary\" , \"Mark as active\" ), // az objektumot dinamikusan is kezelhetj\u00fck, ekkor nem a konstruktorral p\u00e9ld\u00e1nyos\u00edtjuk: { action : \"inactive\" , icon : \"minus\" , type : \"secondary\" , title : \"Mark as inactive\" }, new Button ( \"remove\" , \"trash\" , \"danger\" , \"Remove\" ), ]; \u00cdgy m\u00e1r gyakorlatilag fel tudunk venni \u00faj elemet, viszont ez nem l\u00e1tszik a fel\u00fcleten, ugyanis csak mem\u00f3ri\u00e1ban dolgoztunk, \u00e9s nem m\u00f3dos\u00edtottuk megfelel\u0151en a DOM-ot. \u00cdrjunk egy f\u00fcggv\u00e9nyt, ami az \u00f6sszes to-do elemet kirajzolja a fel\u00fcletre! A jelenlegi sablon alapj\u00e1n k\u00f3db\u00f3l \u00f6ssze\u00e1ll\u00edtjuk a DOM-r\u00e9szletet. El\u0151sz\u00f6ris k\u00e9sz\u00edts\u00fcnk egy seg\u00e9df\u00fcggv\u00e9nyt, aminek \u00e1tadhatunk tetsz\u0151leges HTML stringet, \u00e9s \u0151 elk\u00e9sz\u00edt nek\u00fcnk mem\u00f3ri\u00e1ban egy virtu\u00e1lis DOM elemet: function createElementFromHTML ( html ) { const virtualElement = document . createElement ( \"div\" ); virtualElement . innerHTML = html ; return virtualElement . childElementCount == 1 ? virtualElement . firstChild : virtualElement . children ; } Erre az\u00e9rt van sz\u00fcks\u00e9g, mert nincs arra nat\u00edv JavaScript API (jelenleg), hogy stringb\u0151l HTML elemet hozzunk l\u00e9tre, viszont b\u00e1rmely (ak\u00e1r virtu\u00e1lis, teh\u00e1t az aktu\u00e1lis DOM-ban nem, de mem\u00f3ri\u00e1ban l\u00e9tez\u0151) DOM elem innerHTML-j\u00e9nek be\u00e1ll\u00edt\u00e1s\u00e1val a DOM elem(ek) t\u00e9nylegesen l\u00e9trej\u00f6n/nek. Alternat\u00edv megold\u00e1sk\u00e9nt megtehetn\u00e9nk, hogy l\u00e9trehozzuk a createElement seg\u00edts\u00e9g\u00e9vel az elemet, majd egyes\u00e9vel be\u00e1ll\u00edtjuk az attrib\u00fatumait, de az j\u00f3val k\u00f6r\u00fclm\u00e9nyesebb, k\u00f3dol\u00f3sabb megold\u00e1st eredm\u00e9nyez. function renderTodos () { const todoList = document . getElementById ( \"todo-list\" ); // megkeress\u00fck a kont\u00e9nert, ahov\u00e1 az elemeket tessz\u00fck todoList . innerHTML = \"\" ; // a jelenleg a DOM-ban lev\u0151 to-do elemeket t\u00f6r\u00f6lj\u00fck todos . forEach ( todo => { // bej\u00e1rjuk a jelenlegi todo elemeket (alternat\u00edv, funkcion\u00e1lis bej\u00e1r\u00e1ssal) const row = createElementFromHTML ( `<div class=\"row\"> <div class=\"col d-flex p-0\"> <a class=\"list-group-item flex-grow-1\" href=\"#\"> ${ todo . name } </a> <div class=\"btn-group action-buttons\"></div> </div> </div>` ); buttons . forEach ( button => { // a gomb modellek alapj\u00e1n legy\u00e1rtjuk a DOM gombokat const btn = createElementFromHTML ( `<button class=\"btn btn-outline- ${ button . type } fas fa- ${ button . icon } \" title=\" ${ button . title } \"></button>` ); if ( todo . state === button . action ) // azt a gombot letiljuk, amilyen \u00e1llapotban van egy elem btn . disabled = true ; // TODO: a gomb klikk esem\u00e9ny\u00e9nek kezel\u00e9se row . querySelector ( \".action-buttons\" ). appendChild ( btn ); // a virtu\u00e1lis elem gomb kont\u00e9ner\u00e9be beletessz\u00fck a gombot }); todoList . appendChild ( row ); // az \u00f6ssze\u00e1ll\u00edtott HTML-t a DOM-ban lev\u0151 #todo-list elemhez f\u0171zz\u00fck }); } renderTodos (); // kezdeti \u00e1llapot kirajzol\u00e1sa Tip A querySelector()/querySelectorAll() API-kkal egy CSS szelektort adhatunk meg a document-en vagy egy elemen, \u00e9s az illeszked\u0151 els\u0151/\u00f6sszes elemet kapjuk vissza. Most m\u00e1r l\u00e1tjuk, hogy mi fog ker\u00fclni a // TODO komment hely\u00e9re a form elk\u00fcld\u00e9sekor: renderTodos (); Warning Ha abba a hib\u00e1ba esn\u00e9nk, hogy a DOM elemeket egyes\u00e9vel szeretn\u00e9nk elt\u00e1vol\u00edtani a DOM-b\u00f3l a #todo-list elem children tulajdons\u00e1g\u00e1nak seg\u00edts\u00e9g\u00e9vel, vigy\u00e1znunk kell, ugyanis ez egy \"\u00e9l\u0151\" kollekci\u00f3: mik\u00f6zben az elemeket t\u00f6r\u00f6lj\u00fck, a kollekci\u00f3 length tulajdons\u00e1ga is v\u00e1ltozik! Persze egy egyszer\u0171 for ciklussal megoldhat\u00f3, de mindenk\u00e9ppen a v\u00e9g\u00e9t\u0151l indulva j\u00e1rjuk be a kollekci\u00f3t, am\u00edg az ki nem \u00fcr\u00fcl! BEADAND\u00d3 (1 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny hozz\u00e1adott tennival\u00f3r\u00f3l! ( f1.png ) Feladat 2 - \u00c1llapotok \u00b6 A DOM elemekre kattintva be tudjuk \u00e1ll\u00edtani az aktu\u00e1lis \u00e1llapotot, ezt a DOM elemhez esem\u00e9nykezel\u0151 rendel\u00e9s\u00e9vel tehetj\u00fck meg. Esem\u00e9nykezel\u0151t a HTML-ben az on\\* attrib\u00fatumok megad\u00e1s\u00e1val tudunk k\u00f6tni, JavaScriptben a DOM API-t haszn\u00e1lva pl. az elem referenci\u00e1j\u00e1t megszerezve az .addEventListener(\"esem\u00e9nyn\u00e9v\", callbackF\u00fcggv\u00e9ny) f\u00fcggv\u00e9ny megh\u00edv\u00e1s\u00e1val vagy a megfelel\u0151 feliratkoztat\u00f3 f\u00fcggv\u00e9ny be\u00e1ll\u00edt\u00e1s\u00e1val (pl. onclick = callbackF\u00fcggv\u00e9ny ). A JS k\u00f3dot az al\u00e1bbival eg\u00e9sz\u00edts\u00fck ki: let currentTab ; // a jelenleg kiv\u00e1lasztott f\u00fcl function selectTab ( type ) { currentTab = type ; // elt\u00e1roljuk a jelenlegi f\u00fcl \u00e9rt\u00e9ket for ( let tab of document . getElementsByClassName ( \"todo-tab\" )) { tab . classList . remove ( \"active\" ); // az \u00f6sszes f\u00fclr\u0151l levessz\u00fck az .active oszt\u00e1lyt if ( tab . getAttribute ( \"data-tab-name\" ) == type ) // ha ez a f\u00fcl van \u00e9pp kiv\u00e1lasztva tab . classList . add ( \"active\" ); // erre az egyre visszatessz\u00fck az .active oszt\u00e1lyt } renderTodos (); // \u00fajrarajzolunk mindent } selectTab ( \"all\" ); // app indul\u00e1sakor kiv\u00e1lasztjuk az \"all\" f\u00fclet self-invoking function declaration A fenti minta, amikor egy f\u00fcggv\u00e9nyt a defini\u00e1l\u00e1sa ut\u00e1n k\u00f6zvetlen\u00fcl megh\u00edvunk, egy \"cs\u00fany\u00e1bb\", de elterjedt alternat\u00edv\u00e1val szokt\u00e1k alkalmazni, ez az \u00fan. self-invoking function declaration , aminek sok v\u00e1ltozata ismeretes, ez az egyik: ( const selectTab = function ( type ) { /* ... */ })( \"all\" ); A selectTab f\u00fcggv\u00e9ny h\u00edv\u00e1s\u00e1t a HTML-b\u0151l k\u00f6ss\u00fck a klikk esem\u00e9nyre (megtehetn\u00e9nk k\u00f3db\u00f3l is, de l\u00e1ssunk erre is p\u00e9ld\u00e1t), cser\u00e9lj\u00fck le a tabok tartalm\u00e1t: < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"all\" href = \"#all\" onclick = \"selectTab('all')\" > All < span class = \"badge bg-secondary\" > 1 </ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"active\" href = \"#active\" onclick = \"selectTab('active')\" > Active < span class = \"badge bg-secondary\" > 1 </ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"inactive\" href = \"#inactive\" onclick = \"selectTab('inactive')\" > Inactive < span class = \"badge bg-secondary\" ></ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"done\" href = \"#done\" onclick = \"selectTab('done')\" > Done < span class = \"badge bg-secondary\" ></ span > </ a > </ li > Az elemhez adatt\u00e1rol\u00f3 attrib\u00fatumot is rendelt\u00fcnk, ezt az attrib\u00fatumot a data- el\u0151taggal l\u00e1ttuk el jelezv\u00e9n, hogy az attrib\u00fatum kiz\u00e1r\u00f3lag adathordoz\u00e1sra szolg\u00e1l. Az elemek \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1s\u00e1t hasonl\u00f3k\u00e9ppen kezelhetj\u00fck, amikor a gombokat gy\u00e1rtjuk a renderTodos() f\u00fcggv\u00e9nyben, az esem\u00e9nykezel\u0151ket ott helyben fel tudjuk regisztr\u00e1lni (a // TODO komment hely\u00e9re ker\u00fclj\u00f6n): btn . onclick = () => { // klikk esem\u00e9nyre if ( button . action === \"remove\" ) { // ha t\u00f6rl\u00e9s if ( confirm ( \"Are you sure you want to delete the todo titled '\" + todo . name + \"'?\" )) { // meger\u0151s\u00edt\u00e9s ut\u00e1n todos . splice ( todos . indexOf ( todo ), 1 ); // kivesz\u00fcnk a 'todo'-adik elemt\u0151l 1 elemet a todos t\u00f6mbb\u0151l renderTodos (); } } else { // ha nem t\u00f6rl\u00e9s todo . state = button . action ; // \u00e1t\u00e1ll\u00edtjuk a kiv\u00e1lasztott todo \u00e1llapot\u00e1t a gomb \u00e1llapot\u00e1ra renderTodos (); } } Tip \u00c9rdekess\u00e9g a confirm() f\u00fcggv\u00e9ny, amely b\u00f6ng\u00e9sz\u0151ben nat\u00edvan implement\u00e1lt: a felhaszn\u00e1l\u00f3nak egy egyszer\u0171 meger\u0151s\u00edt\u0151 ablakot dob fel a megadott sz\u00f6veggel, \u00e9s blokkolva v\u00e1rakozik a v\u00e1laszra. A v\u00e1lasz egy boolean \u00e9rt\u00e9k, \u00edgy az if t\u00f6rzse csak akkor fut le, ha a felhaszn\u00e1l\u00f3 OK-val v\u00e1laszol. Hasonl\u00f3 az alert() , az viszont csak egy OK-zhat\u00f3 figyelmeztet\u00e9st dob fel, ami nem t\u00e9r vissza semmivel, ill. a prompt() , amivel stringet k\u00e9rhet\u00fcnk be. Ezeket ritk\u00e1n, lehet\u0151leg soha nem haszn\u00e1ljuk, helyett\u00fck nem blokkol\u00f3, aszinkron egyedi megold\u00e1st k\u00e9sz\u00edt\u00fcnk. Ha for (var ... in ...) ciklust \u00e9s function -t haszn\u00e1ln\u00e1nk a buttons \u00e9s todos t\u00f6mb\u00f6k\u00f6n, akkor a klikk esem\u00e9nykezel\u0151 ebben a form\u00e1ban hib\u00e1s lesz, mert az iter\u00e1ci\u00f3k \u00fajrahasznos\u00edtan\u00e1k a todo \u00e9s button v\u00e1ltoz\u00f3kat. Az arrow function viszont ezeket a v\u00e1ltoz\u00f3kat \u00fan. \"closure\"-be helyezi, technikailag a v\u00e1ltoz\u00f3kb\u00f3l egy lok\u00e1lis m\u00e1solat k\u00e9sz\u00fcl, \u00edgy a f\u00fcggv\u00e9ny helyesen fog lefutni. Eg\u00e9sz\u00edts\u00fck ki a renderTodos() f\u00fcggv\u00e9nyt, hogy friss\u00edtse a f\u00fclek mellett tal\u00e1lhat\u00f3 badge-ben megjelen\u0151 sz\u00e1m\u00e9rt\u00e9keket: document . querySelector ( \".todo-tab[data-tab-name='all'] .badge\" ). innerHTML = todos . length || \"\" ; for ( let state of states ) document . querySelector ( `.todo-tab[data-tab-name=' ${ state } '] .badge` ). innerHTML = todos . filter ( t => t . state === state ). length || \"\" ; Info A filter() f\u00fcggv\u00e9nynek egy callbacket adunk \u00e1t, ez fog ki\u00e9rt\u00e9kel\u0151dni minden elemre: ha a felt\u00e9tel igaz, akkor az elemet visszakapjuk, k\u00fcl\u00f6nben nem. Magyarul: azokra az elemekre sz\u0171r\u00fcnk, amelyek \u00e1llapota az aktu\u00e1lisan bej\u00e1rt \u00e1llapot (\"active\", \"inactive\", \"done\"), teh\u00e1t megsz\u00e1moljuk, h\u00e1ny elem van az adott st\u00e1tuszban. Ezen fel\u00fcl, ha az \u00e9rt\u00e9k falsey , teh\u00e1t eset\u00fcnkben 0, helyette \u00fcres stringet adunk vissza, \u00edgy nem fog megjelenni a badge. Utols\u00f3 l\u00e9p\u00e9sk\u00e9nt logikus, hogy az aktu\u00e1lis f\u00fcl alapj\u00e1n sz\u0171rj\u00fck le az elemeket, ne mindig az \u00f6sszes l\u00e1tsz\u00f3djon. Ezt a renderTodos() apr\u00f3 m\u00f3dos\u00edt\u00e1s\u00e1val tudjuk megtenni, a todos.forEach(todo => helyett \u00edrjuk az al\u00e1bbit: todos . filter ( todo => [ \"all\" , todo . state ]. includes ( currentTab )). forEach ( todo => { Tip Kicsit b\u0151besz\u00e9d\u0171bb, de ekvivalens megold\u00e1s az al\u00e1bbi: const filtered = todos . filter ( function ( todo ){ return todo . state === currentTab || currentTab === \"all\" ; }); filtered . forEach ( function ( todo ) { // ... Teh\u00e1t az eredeti todos t\u00f6mb\u00f6t a filter seg\u00edts\u00e9g\u00e9vel sz\u0171rj\u00fck \u00fagy, hogy csak azok az elemek maradjanak a sz\u0171rt t\u00f6mbben, ami az aktu\u00e1lis f\u00fclnek megfelel VAGY az \"all\" f\u00fcl\u00f6n gyunk (teh\u00e1t l\u00e1tsz\u00f3djon minden). Szint\u00e9n alternat\u00edv megold\u00e1sk\u00e9nt, valamivel optim\u00e1lisabban fut\u00f3, a f\u00fcl vizsg\u00e1latot kiszervezhetj\u00fck: ( currentTab === 'all' ? todos : todos . filter ( todo => todo . state === currentTab )). forEach ( todo => { BEADAND\u00d3 (1 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet ( f2.1.png , f2.2.png , f2.3.png ) a tennival\u00f3k \u00e1llapotainak v\u00e1ltoztat\u00e1s\u00e1r\u00f3l, a k\u00fcl\u00f6nb\u00f6z\u0151 oldalakon t\u00f6rt\u00e9n\u0151 megjelen\u00e9s\u00fckr\u0151l! Feladat 3 (\u00d6n\u00e1ll\u00f3) - Sorrendez\u00e9s \u00b6 Legyenek fel-le mozgathat\u00f3k a to-do elemek az all list\u00e1ban! Hozzon l\u00e9tre k\u00e9t \u00faj gombot, amely a felfel\u00e9 \u00e9s lefel\u00e9 mozgat\u00e1st jelzik az elemn\u00e9l! Haszn\u00e1lja a fas fa-arrow-up \u00e9s fas fa-arrow-down oszt\u00e1lyokat az ikonokhoz! A gombok csak az all f\u00fcl\u00f6n legyenek l\u00e1that\u00f3k! A gomb legyen letiltva, ha nem mozgathat\u00f3 a megadott ir\u00e1nyba az elem! A gombra kattintva az elem ker\u00fclj\u00f6n el\u0151r\u00e9bb/h\u00e1tr\u00e9bb az elemek list\u00e1j\u00e1ban! BEADAND\u00d3 (1.5 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny tennival\u00f3r\u00f3l sorrendez\u00e9s el\u0151tt \u00e9s ut\u00e1n! ( f3.1.png , f3.2.png ) Feladat 4 (\u00d6n\u00e1ll\u00f3) - Perziszt\u00e1l\u00e1s \u00b6 Egy to-do list\u00e1nak nem sok \u00e9rtelme van, ha nem menthet\u0151k el az adataink. A ment\u00e9sre egy\u00e9rtelm\u0171 lehet\u0151s\u00e9get biztos\u00edt a localStorage \u00e9s a sessionStorage . Mindkett\u0151 kulcs-\u00e9rt\u00e9k t\u00e1rol\u00f3, a kulcsok \u00e9s \u00e9rt\u00e9kek egyar\u00e1nt string t\u00edpus\u00faak. A k\u00fcl\u00f6nbs\u00e9g a kett\u0151 k\u00f6z\u00f6tt az \u00e9lettartamuk: m\u00edg a localStorage - b\u00e1r korl\u00e1tos m\u00e9ret\u0171 - a b\u00f6ng\u00e9sz\u0151t \u00fajraind\u00edtva is megtartja \u00e1llapot\u00e1t, a sessionStorage a b\u00f6ng\u00e9sz\u0151t/f\u00fclet bez\u00e1rva elv\u00e9sz. A sessionStorage adatokat mem\u00f3ri\u00e1ban, a localStorage adatokat viszont perzisztensen, f\u00e1jlban t\u00e1rolja a b\u00f6ng\u00e9sz\u0151. A t\u00e1rol\u00e1shoz minden renderel\u00e9si ciklus elej\u00e9n volna \u00e9rdemes menten\u00fcnk. B\u00e1r az alkalmaz\u00e1sunk renderTodos() f\u00fcggv\u00e9nye nev\u00e9b\u0151l fakad\u00f3an a DOM-ot manipul\u00e1lja, ez az a pont, ahol b\u00e1rmilyen v\u00e1ltoz\u00e1sr\u00f3l \u00e9rtes\u00fcl\u00fcnk. Fontos, hogy tartsuk be a separation of concerns elvet: mindenki a saj\u00e1t feladat\u00e1val foglalkozzon! Ez\u00e9rt ne itt val\u00f3s\u00edtsuk meg a perziszt\u00e1l\u00e1st, hanem egy saj\u00e1t f\u00fcggv\u00e9nyben, amit megh\u00edvunk minden v\u00e1ltoz\u00e1st induk\u00e1l\u00f3 ponton a k\u00f3dban: elem \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1sa, elem l\u00e9trehoz\u00e1sa, elem t\u00f6rl\u00e9se. ! note V\u00e1ltoz\u00e1sdetekt\u00e1l\u00e1s Komplexebb alkalmaz\u00e1sfejleszt\u0151 keretrendszerekben is probl\u00e9m\u00e1t okoz a v\u00e1ltoz\u00e1sokr\u00f3l t\u00f6rt\u00e9n\u0151 \u00e9rtes\u00fcl\u00e9s, a React, az AngularJS \u00e9s az Angular mind m\u00e1s \u00e9s m\u00e1s m\u00f3dszereket alkalmaznak a v\u00e1ltoz\u00e1sok detekt\u00e1l\u00e1s\u00e1ra. A t\u00e1rol\u00e1shoz a localStorage.setItem(key, value) f\u00fcggv\u00e9nyt haszn\u00e1ljuk. A soros\u00edtand\u00f3 objektumot egyszer\u0171en JSON-be soros\u00edthatjuk: JSON.stringify(object) , illetve visszafejthetj\u00fck: JSON.parse(string) . Objektum soros\u00edt\u00e1s Fontos, hogy a JSON.parse() \u00e1ltal visszafejtett objektumok egyszer\u0171 objektumok, ha a forr\u00e1s objektumunkon pl. f\u00fcggv\u00e9nyek is szerepeltek, azok a deszerializ\u00e1lt objektumon nem lesznek el\u00e9rhet\u0151k! A r\u00e9szfeladatok teh\u00e1t: k\u00e9sz\u00edtsen egy f\u00fcggv\u00e9nyt, ami elmenti a teljes todos t\u00f6mb tartalm\u00e1t localStorage -ba, b\u00e1rmilyen v\u00e1ltoz\u00e1s hat\u00e1s\u00e1ra (elem \u00e1llapotv\u00e1ltoz\u00e1sa, l\u00e9trej\u00f6tte, t\u00f6rl\u00e9se) mentse el a f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel az elemeket, alkalmaz\u00e1s indul\u00e1sakor egyetlen alkalommal t\u00f6ltse vissza az \u00f6sszes elt\u00e1rolt todo elemet, \u00e9s ez legyen a todos v\u00e1ltoz\u00f3 kiindul\u00f3 tartalma! Storage debuggol\u00e1s A storage tartalm\u00e1t b\u00f6ng\u00e9sz\u0151t\u0151l f\u00fcgg\u0151en k\u00fcl\u00f6nb\u00f6z\u0151 helyen tudjuk megvizsg\u00e1lni, jellemz\u0151en a Storage vagy Debugger f\u00fcl\u00f6n tal\u00e1lhat\u00f3. BEADAND\u00d3 (1.5 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a lok\u00e1lis t\u00e1rol\u00f3ban (localStorage) tal\u00e1lhat\u00f3 perziszt\u00e1lt to-do elemekr\u0151l! ( f4.png )","title":"Labor 11 - JavaScript alapok"},{"location":"laborok/11-js/#labor-11-javascript-alapok","text":"","title":"Labor 11 - JavaScript alapok"},{"location":"laborok/11-js/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. A JavaScriptr\u0151l di\u00f3h\u00e9jban A kor\u00e1bban megismert HTML \u00e9s CSS adj\u00e1k a weboldalunk v\u00e1z\u00e1t, alapm\u0171k\u00f6d\u00e9s\u00e9t \u00e9s kin\u00e9zet\u00e9t, viszont a korai dokumentum-alap\u00fa weboldalakt\u00f3l \u00e1tt\u00e9rt\u00fcnk a dinamikus weboldalakra, melyek fut\u00e1s id\u0151ben m\u00f3dos\u00edtj\u00e1k az aktu\u00e1lis dokumentumot (a DOM-ot), \u00edgy interakci\u00f3t kezelhet\u00fcnk, \u00e9s a weboldalunkra (a kliens oldalra) \u00f6n\u00e1ll\u00f3 alkalmaz\u00e1sk\u00e9nt tekint\u00fcnk. Az alkalmaz\u00e1sainkhoz dinamizmust (id\u0151beni v\u00e1ltoz\u00e1st) szkriptel\u00e9ssel rendel\u00fcnk, erre JavaScriptet haszn\u00e1lunk. A JavaScript egy dinamikusan t\u00edpusos, interpret\u00e1lt szkriptnyelv, a hozz\u00e1 tartoz\u00f3 futtat\u00f3k\u00f6rnyezetek v\u00e9grehajt\u00f3 egys\u00e9gei pedig alapvet\u0151en egysz\u00e1l\u00faak, \u00edgy nincsen k\u00f6lcs\u00f6n\u00f6s kiz\u00e1r\u00e1si probl\u00e9m\u00e1nk. \u00c9rdemes tov\u00e1bb\u00e1 megeml\u00edteni a felhaszn\u00e1land\u00f3 t\u00edpusokat ( function , object , string , number , undefined , boolean , symbol ), az ezek k\u00f6z\u00f6tti szabad konverzi\u00f3t \u00e9s a JavaScript esem\u00e9nyhurkot ( event loop ). Az event loop a JavaScriptet folyamatosan befejez\u0151d\u00e9sig futtatja ( \"Run-to-completion\" ), am\u00edg a fut\u00e1s be nem fejez\u0151dik, majd aszinkron esem\u00e9nyre v\u00e1r. Az esem\u00e9nyek bek\u00f6vetkezt\u00e9vel az esem\u00e9nyhez regisztr\u00e1lt esem\u00e9nykezel\u0151k lefutnak. Az esem\u00e9nyek lehetnek: felhaszn\u00e1l\u00f3i interakci\u00f3, id\u0151z\u00edt\u00e9s, IO m\u0171veletek eredm\u00e9nye (pl. AJAX, Websocket). A fontosabb kulcsgondolatok teh\u00e1t r\u00f6viden: interpret\u00e1lt futtat\u00e1s, DOM dinamikus manipul\u00e1ci\u00f3ja, dinamikus t\u00edpusoss\u00e1g \u00e9s t\u00edpuskonverzi\u00f3, egysz\u00e1l\u00fas\u00e1g, event loop \u00e9s aszinkronit\u00e1s. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy a JavaScript (klasszikus \u00e9rtelemben v\u00e9ve) nem objektum-orient\u00e1lt, az oszt\u00e1lyok koncepci\u00f3ja a nyelvben k\u00e9s\u0151bb jelent meg; a nyelv a prototipikus \u00f6r\u00f6kl\u00e9s m\u00f3dszer\u00e9t alkalmazza az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9shez. Ezen k\u00edv\u00fcl k\u00fcl\u00f6n\u00f6s saj\u00e1toss\u00e1gai vannak, a this kulcssz\u00f3 pl. nem az aktu\u00e1lis objektumra , hanem az aktu\u00e1lis f\u00fcggv\u00e9nyre mutat (kiv\u00e9tel az arrow syntax , ami a this -t az eredeti \u00e9rt\u00e9ken hagyja). Az Internet Explorer elh\u00edres\u00fclt arr\u00f3l, hogy a fejleszt\u00e9s r\u00e1 jelent\u0151sen neh\u00e9zkesebb, mint b\u00e1rmely alternat\u00edv\u00e1ra. Ma m\u00e1r a Microsoft is hivatalosan is az \u00faj, Chromium alap\u00fa Edge b\u00f6ng\u00e9sz\u0151t t\u00e1mogatja, amely - a m\u00e1r nem is t\u00e1mogatott - Windows 7 OS-en is m\u0171k\u00f6dik, \u00edgy \u00faj weboldalakat Internet Explorer t\u00e1mogat\u00e1ssal m\u00e1r nem kell k\u00e9sz\u00edten\u00fcnk.","title":"Bevezet\u00e9s"},{"location":"laborok/11-js/#git-repository-letrehozasa-es-letoltese","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/11-js/#feladat-1-egyszeru-esemenykezeles","text":"A laboron egy egyszer\u0171 \"offline\" To-Do alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk. Az alkalmaz\u00e1s alapjak\u00e9nt egy egyszer\u0171 HTML oldal szolg\u00e1l, amihez a saj\u00e1t JavaScript\u00fcnket \u00edrjuk. A JS k\u00f3dot HTML-ben is elhelyezhetn\u00e9nk, viszont az nem karbantarthat\u00f3 \u00e9s alapvet\u0151en nem best practice, \u00fagyhogy a saj\u00e1t todo.js f\u00e1jlba fogjuk tenni a k\u00f3dot, amit behivatkozunk. A st\u00edlusoz\u00e1st Bootstrappel oldjuk meg. Warning A b\u00f6ng\u00e9sz\u0151 k\u00fcl\u00f6nb\u00f6z\u0151 k\u00f6r\u00fclm\u00e9nyek f\u00fcggv\u00e9ny\u00e9ben cache-elheti a f\u00e1jljainkat , ez\u00e9rt a friss\u00edt\u00e9st ilyenkor k\u00e9zzel kell megoldanunk. Ne felejts\u00fck el menteni a f\u00e1jlt, ezut\u00e1n a b\u00f6ng\u00e9sz\u0151ben \u00e1ll\u00edtsuk be az F12 Developer Tools-ban a Network f\u00fcl\u00f6n az \"Always refresh from server\"/\"Disable cache\" vagy hasonl\u00f3 elnevez\u00e9s\u0171 be\u00e1ll\u00edt\u00e1st! L\u00e1thatjuk, hogy a statikus oldal az al\u00e1bbiakb\u00f3l tev\u0151dik \u00f6ssze: c\u00edm, f\u00fclek az \u00f6sszes, akt\u00edv, inakt\u00edv \u00e9s k\u00e9sz elemek sz\u0171r\u00e9s\u00e9re, a to-do elemek list\u00e1ja, az egyes elemek mellett az \u00e9rtelmezett m\u0171veletek, \u00faj elem hozz\u00e1ad\u00e1sa panel, melyen az \u00faj to-do bejegyz\u00e9s sz\u00f6veg\u00e9t kell megadnunk egy \u0171rlapon. A <body> v\u00e9g\u00e9n egy <script> a todo.js f\u00e1jlra hivatkozik! A szkript az oldal l\u00e9nyegi tartalm\u00e1nak bet\u00f6lt\u0151d\u00e9se ut\u00e1n fut le, \u00edgy nem kell majd v\u00e1rakoznunk a dokumentum teljes bet\u00f6lt\u0151d\u00e9s\u00e9re (a gyakorlatban ez azt jelenti, hogy a szkript fut\u00e1s\u00e1nak kezdet\u00e9n a DOM a HTML-nek megfelel\u0151 \u00e1llapotban m\u00e1r l\u00e9trej\u00f6tt). A gyakorlatban ez v\u00e1ltoz\u00f3, szok\u00e1s a <head> elemben in bet\u00f6lteni JS f\u00e1jlokat amikor kritikus, viszont az g\u00e1tolja a HTML megjelen\u00e9s\u00e9t, am\u00edg a JS f\u00e1jl le nem t\u00f6lt\u0151dik. Az egyes to-do-k modellj\u00e9re \u00e9rdemes saj\u00e1t oszt\u00e1lyt defini\u00e1lnunk. Tip Modern (ES6/ES2015 \u00e9s magasabb) JavaScriptben konstruktor f\u00fcggv\u00e9ny helyett haszn\u00e1lhatunk val\u00f3s oszt\u00e1lyokat is, a gyakorlaton ezt fogjuk l\u00e1tni. JavaScriptben egy (nem oszt\u00e1ly) f\u00fcggv\u00e9ny konstruktorf\u00fcggv\u00e9ny, ha a this v\u00e1ltoz\u00f3n tulajdons\u00e1gokat helyez el \u00e9s nem t\u00e9r vissza semmivel. Ekkor a new kulcssz\u00f3val megh\u00edvva a f\u00fcggv\u00e9nyt az konstruktork\u00e9nt funkcion\u00e1l \u00e9s a this (tulajdons\u00e1gokkal \"felaggatott\") \u00e9rt\u00e9k\u00e9t kapjuk vissza. Ezen fel\u00fcl az instanceof kulcssz\u00f3val megvizsg\u00e1lhatjuk, hogy egy adott f\u00fcggv\u00e9ny konstruktora \u00e1ltal k\u00e9sz\u00edtett objektumr\u00f3l van-e sz\u00f3, teh\u00e1t szinte m\u00e1r oszt\u00e1lyp\u00e9ld\u00e1nyk\u00e9nt kezelhetj\u00fck az objektumot. A f\u00fclek lehets\u00e9ges \u00e1llapotai az \"all\", \"active\", \"inactive\" \u00e9s \"done\", az \"all\" kiv\u00e9tel\u00e9vel ezeket az \u00e1llapotokat veheti fel egy to-do elem is. A todo.js elej\u00e9re vegy\u00fck fel a Todo oszt\u00e1lyt, annak konstruktorf\u00fcggv\u00e9ny\u00e9t \u00e9s a konkr\u00e9t p\u00e9ld\u00e1nyokat t\u00e1rol\u00f3 (\u00fcres) t\u00f6mb\u00f6t, valamint a lehets\u00e9ges \u00e1llapotokat: class Todo { constructor ( name , state ) { this . name = name ; this . state = state ; } } const todos = []; const states = [ \"active\" , \"inactive\" , \"done\" ]; const tabs = [ \"all\" ]. concat ( states ); console . log ( tabs ); JavaScript v\u00e1ltoz\u00f3k JavaScriptben h\u00e1rom kulcssz\u00f3val deklar\u00e1lhatunk lok\u00e1lis v\u00e1ltoz\u00f3t: var : az \"eredeti\" m\u00f3dja a v\u00e1ltoz\u00f3 deklar\u00e1ci\u00f3j\u00e1nak, modern JS-ben \u00e9rdemes ker\u00fclni. Engedi ugyanazon v\u00e1ltoz\u00f3 \u00fajradeklar\u00e1ci\u00f3j\u00e1t, s\u0151t, nem k\u00f6ti scope-hoz a v\u00e1ltoz\u00f3t. let : scope-hoz k\u00f6ti a v\u00e1ltoz\u00f3t, ez\u00e9rt nem deklar\u00e1lhat\u00f3 \u00fajra \u00e9s nem is \"sziv\u00e1rog\" \u00e1t a scope-ok k\u00f6z\u00f6tt. const : konstans \u00e9rt\u00e9k\u0171/referenci\u00e1j\u00fa \"v\u00e1ltoz\u00f3t\" (\u00e9rdekes v\u00e1ltoz\u00f3nak nevezni, ha nem v\u00e1ltozhat) t\u00e1rol. A v\u00e1ltoz\u00f3 nem kaphat \u00faj \u00e9rt\u00e9ket (teh\u00e1t ha referenciat\u00edpus, pl. objektum vagy t\u00f6mb, akkor nem lehet \u00faj objektumot/\u00e9rt\u00e9ket adni a v\u00e1ltoz\u00f3nak), de ha objektumot t\u00e1rol, annak tagjai (vagy a t\u00f6mb elemei) \u00e9rtelemszer\u0171en v\u00e1ltozhatnak. A legnyilv\u00e1nval\u00f3bb (ha nem is a legrobusztusabb) m\u00f3dja a hibakeres\u00e9snek az, ha a konzolra \u00edrunk. Az F12 seg\u00edts\u00e9g\u00e9vel a Console f\u00fcl\u00f6n l\u00e1thatjuk a kimenetet. Iratkozzunk fel a form submit esem\u00e9ny\u00e9re \u00e9s kezelj\u00fck az \u00faj to-do elem l\u00e9trehoz\u00e1s\u00e1t! A feliratkoz\u00e1st megtehetj\u00fck HTML-b\u0151l \u00e9s JavaScriptb\u0151l is, most az ut\u00f3bbit alkalmazzuk! Illessz\u00fck be az al\u00e1bbi k\u00f3dr\u00e9szletet a kor\u00e1bbi k\u00f3dr\u00e9szletek ut\u00e1n! const form = document . getElementById ( \"new-todo-form\" ); const input = document . getElementById ( \"new-todo-title\" ); form . onsubmit = event => { event . preventDefault (); // megg\u00e1toljuk az alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9st, ami friss\u00edten\u00e9 az oldalt if ( input ? . value ? . length ) { // ha \u00e9rv\u00e9nyes \u00e9rt\u00e9k van benne -- ekvivalens ezzel: if (input && input.value && input.value.length) vagy if (input != null && input.value != null && input.value.length > 0) todos . push ( new Todo ( input . value , \"active\" )); // \u00faj to-do-t akt\u00edv \u00e1llapotban hozunk l\u00e9tre input . value = \"\" ; // ki\u00fcr\u00edtj\u00fck az inputot // TODO: \u00fajrarajzolni a list\u00e1t } } Defini\u00e1lnunk kell m\u00e9g a gombokat, amiket a Todo-hoz fogunk rendelni. Nem volna sz\u00fcks\u00e9g a modellek defini\u00e1l\u00e1s\u00e1ra, elv\u00e9gre is a JS egy dinamikus nyelv, de strukt\u00far\u00e1t ad a k\u00f3dnak, objektum-orient\u00e1ltabban kezelhet\u0151. Info A VS Code-ban val\u00f3sz\u00edn\u0171leg az IntelliSense nyom\u00e1ra tudunk bukkanni a JS k\u00f3d \u00edr\u00e1sa k\u00f6zben. Ennek az oka nem a JavaScript, hanem a h\u00e1tt\u00e9rben fut\u00f3 TypeScript ford\u00edt\u00f3. Mivel minden JavaScript egyben TypeScript k\u00f3d is, ez\u00e9rt a t\u00edpusinform\u00e1ci\u00f3k kinyerhet\u0151k a k\u00f3db\u00f3l. Ez a TypeScript nagy el\u0151nye a JS-sel szemben. Ford\u00edt\u00e1si hib\u00e1ink nem lesznek JavaScriptben, de az IntelliSense seg\u00edts\u00e9g\u00e9t ki lehet \u00edgy haszn\u00e1lni. class Button { constructor ( action , icon , type , title ) { this . action = action ; // a m\u0171velet, amit a gomb v\u00e9gez this . icon = icon ; // a FontAwesome ikon neve (class=\"fas fa-*\") this . type = type ; // a gomb Bootstrapbeni t\u00edpusa (\"secondary\", \"danger\" stb.) this . title = title ; // a gomb tooltip sz\u00f6vege } } const buttons = [ // a gombokat reprezent\u00e1l\u00f3 modell objektumok t\u00f6mbje new Button ( \"done\" , \"check\" , \"success\" , \"Mark as done\" ), new Button ( \"active\" , \"plus\" , \"secondary\" , \"Mark as active\" ), // az objektumot dinamikusan is kezelhetj\u00fck, ekkor nem a konstruktorral p\u00e9ld\u00e1nyos\u00edtjuk: { action : \"inactive\" , icon : \"minus\" , type : \"secondary\" , title : \"Mark as inactive\" }, new Button ( \"remove\" , \"trash\" , \"danger\" , \"Remove\" ), ]; \u00cdgy m\u00e1r gyakorlatilag fel tudunk venni \u00faj elemet, viszont ez nem l\u00e1tszik a fel\u00fcleten, ugyanis csak mem\u00f3ri\u00e1ban dolgoztunk, \u00e9s nem m\u00f3dos\u00edtottuk megfelel\u0151en a DOM-ot. \u00cdrjunk egy f\u00fcggv\u00e9nyt, ami az \u00f6sszes to-do elemet kirajzolja a fel\u00fcletre! A jelenlegi sablon alapj\u00e1n k\u00f3db\u00f3l \u00f6ssze\u00e1ll\u00edtjuk a DOM-r\u00e9szletet. El\u0151sz\u00f6ris k\u00e9sz\u00edts\u00fcnk egy seg\u00e9df\u00fcggv\u00e9nyt, aminek \u00e1tadhatunk tetsz\u0151leges HTML stringet, \u00e9s \u0151 elk\u00e9sz\u00edt nek\u00fcnk mem\u00f3ri\u00e1ban egy virtu\u00e1lis DOM elemet: function createElementFromHTML ( html ) { const virtualElement = document . createElement ( \"div\" ); virtualElement . innerHTML = html ; return virtualElement . childElementCount == 1 ? virtualElement . firstChild : virtualElement . children ; } Erre az\u00e9rt van sz\u00fcks\u00e9g, mert nincs arra nat\u00edv JavaScript API (jelenleg), hogy stringb\u0151l HTML elemet hozzunk l\u00e9tre, viszont b\u00e1rmely (ak\u00e1r virtu\u00e1lis, teh\u00e1t az aktu\u00e1lis DOM-ban nem, de mem\u00f3ri\u00e1ban l\u00e9tez\u0151) DOM elem innerHTML-j\u00e9nek be\u00e1ll\u00edt\u00e1s\u00e1val a DOM elem(ek) t\u00e9nylegesen l\u00e9trej\u00f6n/nek. Alternat\u00edv megold\u00e1sk\u00e9nt megtehetn\u00e9nk, hogy l\u00e9trehozzuk a createElement seg\u00edts\u00e9g\u00e9vel az elemet, majd egyes\u00e9vel be\u00e1ll\u00edtjuk az attrib\u00fatumait, de az j\u00f3val k\u00f6r\u00fclm\u00e9nyesebb, k\u00f3dol\u00f3sabb megold\u00e1st eredm\u00e9nyez. function renderTodos () { const todoList = document . getElementById ( \"todo-list\" ); // megkeress\u00fck a kont\u00e9nert, ahov\u00e1 az elemeket tessz\u00fck todoList . innerHTML = \"\" ; // a jelenleg a DOM-ban lev\u0151 to-do elemeket t\u00f6r\u00f6lj\u00fck todos . forEach ( todo => { // bej\u00e1rjuk a jelenlegi todo elemeket (alternat\u00edv, funkcion\u00e1lis bej\u00e1r\u00e1ssal) const row = createElementFromHTML ( `<div class=\"row\"> <div class=\"col d-flex p-0\"> <a class=\"list-group-item flex-grow-1\" href=\"#\"> ${ todo . name } </a> <div class=\"btn-group action-buttons\"></div> </div> </div>` ); buttons . forEach ( button => { // a gomb modellek alapj\u00e1n legy\u00e1rtjuk a DOM gombokat const btn = createElementFromHTML ( `<button class=\"btn btn-outline- ${ button . type } fas fa- ${ button . icon } \" title=\" ${ button . title } \"></button>` ); if ( todo . state === button . action ) // azt a gombot letiljuk, amilyen \u00e1llapotban van egy elem btn . disabled = true ; // TODO: a gomb klikk esem\u00e9ny\u00e9nek kezel\u00e9se row . querySelector ( \".action-buttons\" ). appendChild ( btn ); // a virtu\u00e1lis elem gomb kont\u00e9ner\u00e9be beletessz\u00fck a gombot }); todoList . appendChild ( row ); // az \u00f6ssze\u00e1ll\u00edtott HTML-t a DOM-ban lev\u0151 #todo-list elemhez f\u0171zz\u00fck }); } renderTodos (); // kezdeti \u00e1llapot kirajzol\u00e1sa Tip A querySelector()/querySelectorAll() API-kkal egy CSS szelektort adhatunk meg a document-en vagy egy elemen, \u00e9s az illeszked\u0151 els\u0151/\u00f6sszes elemet kapjuk vissza. Most m\u00e1r l\u00e1tjuk, hogy mi fog ker\u00fclni a // TODO komment hely\u00e9re a form elk\u00fcld\u00e9sekor: renderTodos (); Warning Ha abba a hib\u00e1ba esn\u00e9nk, hogy a DOM elemeket egyes\u00e9vel szeretn\u00e9nk elt\u00e1vol\u00edtani a DOM-b\u00f3l a #todo-list elem children tulajdons\u00e1g\u00e1nak seg\u00edts\u00e9g\u00e9vel, vigy\u00e1znunk kell, ugyanis ez egy \"\u00e9l\u0151\" kollekci\u00f3: mik\u00f6zben az elemeket t\u00f6r\u00f6lj\u00fck, a kollekci\u00f3 length tulajdons\u00e1ga is v\u00e1ltozik! Persze egy egyszer\u0171 for ciklussal megoldhat\u00f3, de mindenk\u00e9ppen a v\u00e9g\u00e9t\u0151l indulva j\u00e1rjuk be a kollekci\u00f3t, am\u00edg az ki nem \u00fcr\u00fcl! BEADAND\u00d3 (1 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny hozz\u00e1adott tennival\u00f3r\u00f3l! ( f1.png )","title":"Feladat 1 - Egyszer\u0171 esem\u00e9nykezel\u00e9s"},{"location":"laborok/11-js/#feladat-2-allapotok","text":"A DOM elemekre kattintva be tudjuk \u00e1ll\u00edtani az aktu\u00e1lis \u00e1llapotot, ezt a DOM elemhez esem\u00e9nykezel\u0151 rendel\u00e9s\u00e9vel tehetj\u00fck meg. Esem\u00e9nykezel\u0151t a HTML-ben az on\\* attrib\u00fatumok megad\u00e1s\u00e1val tudunk k\u00f6tni, JavaScriptben a DOM API-t haszn\u00e1lva pl. az elem referenci\u00e1j\u00e1t megszerezve az .addEventListener(\"esem\u00e9nyn\u00e9v\", callbackF\u00fcggv\u00e9ny) f\u00fcggv\u00e9ny megh\u00edv\u00e1s\u00e1val vagy a megfelel\u0151 feliratkoztat\u00f3 f\u00fcggv\u00e9ny be\u00e1ll\u00edt\u00e1s\u00e1val (pl. onclick = callbackF\u00fcggv\u00e9ny ). A JS k\u00f3dot az al\u00e1bbival eg\u00e9sz\u00edts\u00fck ki: let currentTab ; // a jelenleg kiv\u00e1lasztott f\u00fcl function selectTab ( type ) { currentTab = type ; // elt\u00e1roljuk a jelenlegi f\u00fcl \u00e9rt\u00e9ket for ( let tab of document . getElementsByClassName ( \"todo-tab\" )) { tab . classList . remove ( \"active\" ); // az \u00f6sszes f\u00fclr\u0151l levessz\u00fck az .active oszt\u00e1lyt if ( tab . getAttribute ( \"data-tab-name\" ) == type ) // ha ez a f\u00fcl van \u00e9pp kiv\u00e1lasztva tab . classList . add ( \"active\" ); // erre az egyre visszatessz\u00fck az .active oszt\u00e1lyt } renderTodos (); // \u00fajrarajzolunk mindent } selectTab ( \"all\" ); // app indul\u00e1sakor kiv\u00e1lasztjuk az \"all\" f\u00fclet self-invoking function declaration A fenti minta, amikor egy f\u00fcggv\u00e9nyt a defini\u00e1l\u00e1sa ut\u00e1n k\u00f6zvetlen\u00fcl megh\u00edvunk, egy \"cs\u00fany\u00e1bb\", de elterjedt alternat\u00edv\u00e1val szokt\u00e1k alkalmazni, ez az \u00fan. self-invoking function declaration , aminek sok v\u00e1ltozata ismeretes, ez az egyik: ( const selectTab = function ( type ) { /* ... */ })( \"all\" ); A selectTab f\u00fcggv\u00e9ny h\u00edv\u00e1s\u00e1t a HTML-b\u0151l k\u00f6ss\u00fck a klikk esem\u00e9nyre (megtehetn\u00e9nk k\u00f3db\u00f3l is, de l\u00e1ssunk erre is p\u00e9ld\u00e1t), cser\u00e9lj\u00fck le a tabok tartalm\u00e1t: < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"all\" href = \"#all\" onclick = \"selectTab('all')\" > All < span class = \"badge bg-secondary\" > 1 </ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"active\" href = \"#active\" onclick = \"selectTab('active')\" > Active < span class = \"badge bg-secondary\" > 1 </ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"inactive\" href = \"#inactive\" onclick = \"selectTab('inactive')\" > Inactive < span class = \"badge bg-secondary\" ></ span > </ a > </ li > < li class = \"nav-item\" > < a class = \"todo-tab nav-link\" data-tab-name = \"done\" href = \"#done\" onclick = \"selectTab('done')\" > Done < span class = \"badge bg-secondary\" ></ span > </ a > </ li > Az elemhez adatt\u00e1rol\u00f3 attrib\u00fatumot is rendelt\u00fcnk, ezt az attrib\u00fatumot a data- el\u0151taggal l\u00e1ttuk el jelezv\u00e9n, hogy az attrib\u00fatum kiz\u00e1r\u00f3lag adathordoz\u00e1sra szolg\u00e1l. Az elemek \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1s\u00e1t hasonl\u00f3k\u00e9ppen kezelhetj\u00fck, amikor a gombokat gy\u00e1rtjuk a renderTodos() f\u00fcggv\u00e9nyben, az esem\u00e9nykezel\u0151ket ott helyben fel tudjuk regisztr\u00e1lni (a // TODO komment hely\u00e9re ker\u00fclj\u00f6n): btn . onclick = () => { // klikk esem\u00e9nyre if ( button . action === \"remove\" ) { // ha t\u00f6rl\u00e9s if ( confirm ( \"Are you sure you want to delete the todo titled '\" + todo . name + \"'?\" )) { // meger\u0151s\u00edt\u00e9s ut\u00e1n todos . splice ( todos . indexOf ( todo ), 1 ); // kivesz\u00fcnk a 'todo'-adik elemt\u0151l 1 elemet a todos t\u00f6mbb\u0151l renderTodos (); } } else { // ha nem t\u00f6rl\u00e9s todo . state = button . action ; // \u00e1t\u00e1ll\u00edtjuk a kiv\u00e1lasztott todo \u00e1llapot\u00e1t a gomb \u00e1llapot\u00e1ra renderTodos (); } } Tip \u00c9rdekess\u00e9g a confirm() f\u00fcggv\u00e9ny, amely b\u00f6ng\u00e9sz\u0151ben nat\u00edvan implement\u00e1lt: a felhaszn\u00e1l\u00f3nak egy egyszer\u0171 meger\u0151s\u00edt\u0151 ablakot dob fel a megadott sz\u00f6veggel, \u00e9s blokkolva v\u00e1rakozik a v\u00e1laszra. A v\u00e1lasz egy boolean \u00e9rt\u00e9k, \u00edgy az if t\u00f6rzse csak akkor fut le, ha a felhaszn\u00e1l\u00f3 OK-val v\u00e1laszol. Hasonl\u00f3 az alert() , az viszont csak egy OK-zhat\u00f3 figyelmeztet\u00e9st dob fel, ami nem t\u00e9r vissza semmivel, ill. a prompt() , amivel stringet k\u00e9rhet\u00fcnk be. Ezeket ritk\u00e1n, lehet\u0151leg soha nem haszn\u00e1ljuk, helyett\u00fck nem blokkol\u00f3, aszinkron egyedi megold\u00e1st k\u00e9sz\u00edt\u00fcnk. Ha for (var ... in ...) ciklust \u00e9s function -t haszn\u00e1ln\u00e1nk a buttons \u00e9s todos t\u00f6mb\u00f6k\u00f6n, akkor a klikk esem\u00e9nykezel\u0151 ebben a form\u00e1ban hib\u00e1s lesz, mert az iter\u00e1ci\u00f3k \u00fajrahasznos\u00edtan\u00e1k a todo \u00e9s button v\u00e1ltoz\u00f3kat. Az arrow function viszont ezeket a v\u00e1ltoz\u00f3kat \u00fan. \"closure\"-be helyezi, technikailag a v\u00e1ltoz\u00f3kb\u00f3l egy lok\u00e1lis m\u00e1solat k\u00e9sz\u00fcl, \u00edgy a f\u00fcggv\u00e9ny helyesen fog lefutni. Eg\u00e9sz\u00edts\u00fck ki a renderTodos() f\u00fcggv\u00e9nyt, hogy friss\u00edtse a f\u00fclek mellett tal\u00e1lhat\u00f3 badge-ben megjelen\u0151 sz\u00e1m\u00e9rt\u00e9keket: document . querySelector ( \".todo-tab[data-tab-name='all'] .badge\" ). innerHTML = todos . length || \"\" ; for ( let state of states ) document . querySelector ( `.todo-tab[data-tab-name=' ${ state } '] .badge` ). innerHTML = todos . filter ( t => t . state === state ). length || \"\" ; Info A filter() f\u00fcggv\u00e9nynek egy callbacket adunk \u00e1t, ez fog ki\u00e9rt\u00e9kel\u0151dni minden elemre: ha a felt\u00e9tel igaz, akkor az elemet visszakapjuk, k\u00fcl\u00f6nben nem. Magyarul: azokra az elemekre sz\u0171r\u00fcnk, amelyek \u00e1llapota az aktu\u00e1lisan bej\u00e1rt \u00e1llapot (\"active\", \"inactive\", \"done\"), teh\u00e1t megsz\u00e1moljuk, h\u00e1ny elem van az adott st\u00e1tuszban. Ezen fel\u00fcl, ha az \u00e9rt\u00e9k falsey , teh\u00e1t eset\u00fcnkben 0, helyette \u00fcres stringet adunk vissza, \u00edgy nem fog megjelenni a badge. Utols\u00f3 l\u00e9p\u00e9sk\u00e9nt logikus, hogy az aktu\u00e1lis f\u00fcl alapj\u00e1n sz\u0171rj\u00fck le az elemeket, ne mindig az \u00f6sszes l\u00e1tsz\u00f3djon. Ezt a renderTodos() apr\u00f3 m\u00f3dos\u00edt\u00e1s\u00e1val tudjuk megtenni, a todos.forEach(todo => helyett \u00edrjuk az al\u00e1bbit: todos . filter ( todo => [ \"all\" , todo . state ]. includes ( currentTab )). forEach ( todo => { Tip Kicsit b\u0151besz\u00e9d\u0171bb, de ekvivalens megold\u00e1s az al\u00e1bbi: const filtered = todos . filter ( function ( todo ){ return todo . state === currentTab || currentTab === \"all\" ; }); filtered . forEach ( function ( todo ) { // ... Teh\u00e1t az eredeti todos t\u00f6mb\u00f6t a filter seg\u00edts\u00e9g\u00e9vel sz\u0171rj\u00fck \u00fagy, hogy csak azok az elemek maradjanak a sz\u0171rt t\u00f6mbben, ami az aktu\u00e1lis f\u00fclnek megfelel VAGY az \"all\" f\u00fcl\u00f6n gyunk (teh\u00e1t l\u00e1tsz\u00f3djon minden). Szint\u00e9n alternat\u00edv megold\u00e1sk\u00e9nt, valamivel optim\u00e1lisabban fut\u00f3, a f\u00fcl vizsg\u00e1latot kiszervezhetj\u00fck: ( currentTab === 'all' ? todos : todos . filter ( todo => todo . state === currentTab )). forEach ( todo => { BEADAND\u00d3 (1 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet ( f2.1.png , f2.2.png , f2.3.png ) a tennival\u00f3k \u00e1llapotainak v\u00e1ltoztat\u00e1s\u00e1r\u00f3l, a k\u00fcl\u00f6nb\u00f6z\u0151 oldalakon t\u00f6rt\u00e9n\u0151 megjelen\u00e9s\u00fckr\u0151l!","title":"Feladat 2 - \u00c1llapotok"},{"location":"laborok/11-js/#feladat-3-onallo-sorrendezes","text":"Legyenek fel-le mozgathat\u00f3k a to-do elemek az all list\u00e1ban! Hozzon l\u00e9tre k\u00e9t \u00faj gombot, amely a felfel\u00e9 \u00e9s lefel\u00e9 mozgat\u00e1st jelzik az elemn\u00e9l! Haszn\u00e1lja a fas fa-arrow-up \u00e9s fas fa-arrow-down oszt\u00e1lyokat az ikonokhoz! A gombok csak az all f\u00fcl\u00f6n legyenek l\u00e1that\u00f3k! A gomb legyen letiltva, ha nem mozgathat\u00f3 a megadott ir\u00e1nyba az elem! A gombra kattintva az elem ker\u00fclj\u00f6n el\u0151r\u00e9bb/h\u00e1tr\u00e9bb az elemek list\u00e1j\u00e1ban! BEADAND\u00d3 (1.5 pont) Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny tennival\u00f3r\u00f3l sorrendez\u00e9s el\u0151tt \u00e9s ut\u00e1n! ( f3.1.png , f3.2.png )","title":"Feladat 3 (\u00d6n\u00e1ll\u00f3) - Sorrendez\u00e9s"},{"location":"laborok/11-js/#feladat-4-onallo-perzisztalas","text":"Egy to-do list\u00e1nak nem sok \u00e9rtelme van, ha nem menthet\u0151k el az adataink. A ment\u00e9sre egy\u00e9rtelm\u0171 lehet\u0151s\u00e9get biztos\u00edt a localStorage \u00e9s a sessionStorage . Mindkett\u0151 kulcs-\u00e9rt\u00e9k t\u00e1rol\u00f3, a kulcsok \u00e9s \u00e9rt\u00e9kek egyar\u00e1nt string t\u00edpus\u00faak. A k\u00fcl\u00f6nbs\u00e9g a kett\u0151 k\u00f6z\u00f6tt az \u00e9lettartamuk: m\u00edg a localStorage - b\u00e1r korl\u00e1tos m\u00e9ret\u0171 - a b\u00f6ng\u00e9sz\u0151t \u00fajraind\u00edtva is megtartja \u00e1llapot\u00e1t, a sessionStorage a b\u00f6ng\u00e9sz\u0151t/f\u00fclet bez\u00e1rva elv\u00e9sz. A sessionStorage adatokat mem\u00f3ri\u00e1ban, a localStorage adatokat viszont perzisztensen, f\u00e1jlban t\u00e1rolja a b\u00f6ng\u00e9sz\u0151. A t\u00e1rol\u00e1shoz minden renderel\u00e9si ciklus elej\u00e9n volna \u00e9rdemes menten\u00fcnk. B\u00e1r az alkalmaz\u00e1sunk renderTodos() f\u00fcggv\u00e9nye nev\u00e9b\u0151l fakad\u00f3an a DOM-ot manipul\u00e1lja, ez az a pont, ahol b\u00e1rmilyen v\u00e1ltoz\u00e1sr\u00f3l \u00e9rtes\u00fcl\u00fcnk. Fontos, hogy tartsuk be a separation of concerns elvet: mindenki a saj\u00e1t feladat\u00e1val foglalkozzon! Ez\u00e9rt ne itt val\u00f3s\u00edtsuk meg a perziszt\u00e1l\u00e1st, hanem egy saj\u00e1t f\u00fcggv\u00e9nyben, amit megh\u00edvunk minden v\u00e1ltoz\u00e1st induk\u00e1l\u00f3 ponton a k\u00f3dban: elem \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1sa, elem l\u00e9trehoz\u00e1sa, elem t\u00f6rl\u00e9se. ! note V\u00e1ltoz\u00e1sdetekt\u00e1l\u00e1s Komplexebb alkalmaz\u00e1sfejleszt\u0151 keretrendszerekben is probl\u00e9m\u00e1t okoz a v\u00e1ltoz\u00e1sokr\u00f3l t\u00f6rt\u00e9n\u0151 \u00e9rtes\u00fcl\u00e9s, a React, az AngularJS \u00e9s az Angular mind m\u00e1s \u00e9s m\u00e1s m\u00f3dszereket alkalmaznak a v\u00e1ltoz\u00e1sok detekt\u00e1l\u00e1s\u00e1ra. A t\u00e1rol\u00e1shoz a localStorage.setItem(key, value) f\u00fcggv\u00e9nyt haszn\u00e1ljuk. A soros\u00edtand\u00f3 objektumot egyszer\u0171en JSON-be soros\u00edthatjuk: JSON.stringify(object) , illetve visszafejthetj\u00fck: JSON.parse(string) . Objektum soros\u00edt\u00e1s Fontos, hogy a JSON.parse() \u00e1ltal visszafejtett objektumok egyszer\u0171 objektumok, ha a forr\u00e1s objektumunkon pl. f\u00fcggv\u00e9nyek is szerepeltek, azok a deszerializ\u00e1lt objektumon nem lesznek el\u00e9rhet\u0151k! A r\u00e9szfeladatok teh\u00e1t: k\u00e9sz\u00edtsen egy f\u00fcggv\u00e9nyt, ami elmenti a teljes todos t\u00f6mb tartalm\u00e1t localStorage -ba, b\u00e1rmilyen v\u00e1ltoz\u00e1s hat\u00e1s\u00e1ra (elem \u00e1llapotv\u00e1ltoz\u00e1sa, l\u00e9trej\u00f6tte, t\u00f6rl\u00e9se) mentse el a f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel az elemeket, alkalmaz\u00e1s indul\u00e1sakor egyetlen alkalommal t\u00f6ltse vissza az \u00f6sszes elt\u00e1rolt todo elemet, \u00e9s ez legyen a todos v\u00e1ltoz\u00f3 kiindul\u00f3 tartalma! Storage debuggol\u00e1s A storage tartalm\u00e1t b\u00f6ng\u00e9sz\u0151t\u0151l f\u00fcgg\u0151en k\u00fcl\u00f6nb\u00f6z\u0151 helyen tudjuk megvizsg\u00e1lni, jellemz\u0151en a Storage vagy Debugger f\u00fcl\u00f6n tal\u00e1lhat\u00f3. BEADAND\u00d3 (1.5 pont) Illesszen be egy k\u00e9perny\u0151k\u00e9pet a lok\u00e1lis t\u00e1rol\u00f3ban (localStorage) tal\u00e1lhat\u00f3 perziszt\u00e1lt to-do elemekr\u0151l! ( f4.png )","title":"Feladat 4 (\u00d6n\u00e1ll\u00f3) - Perziszt\u00e1l\u00e1s"},{"location":"laborok/12-jquery/","text":"Labor 12 - jQuery \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. Eml\u00e9keztet\u0151k\u00e9nt n\u00e9h\u00e1ny gondolat a jQuery-r\u0151l A jQuery \u00b6 A jQuery egy \"sv\u00e1jcibicska-szer\u0171\" JavaScript library. Jelent\u0151s\u00e9ge napjainkban az alkalmaz\u00e1sfejleszt\u0151 keretrendszerek jav\u00e1ra egyre cs\u00f6kken, viszont az alapkoncepci\u00f3k meg\u00e9rt\u00e9s\u00e9re tov\u00e1bbra is hasznos eszk\u00f6z. Els\u0151sorban kieg\u00e9sz\u00edt\u00e9sk\u00e9ppen haszn\u00e1lj\u00e1k k\u00fcl\u00f6nf\u00e9le dinamikusan gener\u00e1lt HTML tartalmakhoz t\u00f6rt\u00e9n\u0151 dinamizmus hozz\u00e1rendel\u00e9s\u00e9vel, nem pedig teljes, \u00f6n\u00e1ll\u00f3, kliensoldali alkalmaz\u00e1s fejleszt\u00e9s\u00e9re (de ut\u00f3bbira is haszn\u00e1lhat\u00f3). A jQuery API a $ (\u00e9s ritk\u00e1bban a jQuery ) glob\u00e1lis v\u00e1ltoz\u00f3n kereszt\u00fcl \u00e9rhet\u0151 el, alapvet\u0151en az al\u00e1bbi m\u00f3dokon: const elements = $('ul li.active') : a megadott CSS selectornak megfelel\u0151 DOM elemeket v\u00e1lasztja ki, \u00e9s visszaadja egy jQuery objektumban . A b\u00e1rmilyen m\u00f3don szerzett jQuery objektum hivatkoz\u00e1sokon az al\u00e1bbihoz hasonl\u00f3 lehet\u0151s\u00e9geink vannak: A jQuery objektum p\u00e9ld\u00e1nyai egyben t\u00f6mb\u00f6k, amik tartalmazz\u00e1k a megtal\u00e1lt nat\u00edv DOM elemeket (teh\u00e1t iter\u00e1lhatunk rajta), ill. a jQuery p\u00e9ld\u00e1nyf\u00fcggv\u00e9nyeit tartalmazz\u00e1k, amelyek el\u00e9rik az illesztett DOM elemeket. .show() , .hide() , .toggle() : az illesztett elemeket megjelen\u00edti vagy elrejti az\u00e1ltal, hogy az elemre inline display: none st\u00edlust helyezi, .append(e) , .appendTo(e) , .before(e) , .after(e) , az elemhez/el\u00e9/ut\u00e1n sz\u00far be \u00fajabb elemeket (jQuery szelektorral el\u00e9rt elemeket, DOM elemeket vagy HTML tartalmat), .attr() : gyakori, hogy egy f\u00fcggv\u00e9ny getter-setterk\u00e9nt m\u0171k\u00f6dik, ilyen az attr is. Ha egy param\u00e9tert adunk \u00e1t, az adott attrib\u00fatum \u00e9rt\u00e9k\u00e9t kapjuk vissza, ha kett\u0151t, a m\u00e1sodik param\u00e9ter az els\u0151 n\u00e9ven adott attrib\u00fatum \u00e9rt\u00e9ke lesz (minden illesztett elemre). .on() : esem\u00e9nykezel\u0151 feliratkoztat\u00e1sa az adott n\u00e9vvel. K\u00e9t param\u00e9ter eset\u00e9n ha a m\u00e1sodik param\u00e9ter a callback, \u00fagy az h\u00edv\u00f3dik meg az adott elemen; ha a callback el\u0151tt egy szelektort is megadunk, az \"\u00e9l\u0151\" feliratkoz\u00e1s lesz az illesztett elemen bel\u00fcli lesz\u00e1rmazott gyerekekre. P\u00e1rja az .off() , amellyel esem\u00e9nykezel\u0151t iratkoztathatunk le, ez\u00e1ltal elker\u00fclve az esetleges mem\u00f3riasziv\u00e1rg\u00e1st. .click() , .submit() stb.: az adott JavaScript esem\u00e9nyek els\u00fct\u00e9se (param\u00e9ter n\u00e9lk\u00fcl) vagy feliratkoz\u00e1s az esem\u00e9nyre (callback megad\u00e1s\u00e1val) az illesztett elemeken. Elavult, ehelyett a fentebb le\u00edrt .on() -t haszn\u00e1ljuk feliratkoz\u00e1sra, a .trigger() -t pedig els\u00fct\u00e9sre. .data(name) : a DOM elem data-{name} attrib\u00fatum\u00e1ban szerepl\u0151 \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1s\u00e1ra \u00e9s lek\u00e9rdez\u00e9s\u00e9re haszn\u00e1lhatjuk. A lek\u00e9rdez\u00e9s gyakorlatilag ekvivalens azzal, mintha az al\u00e1bbit haszn\u00e1ln\u00e1nk: .attr(\"data-name\").val() . Eml\u00e9keztet\u0151k\u00e9nt, a CSS-ben attrib\u00fatum alapj\u00e1n lek\u00e9rdezni elemet az al\u00e1bbi m\u00f3don tudunk: $(\"elem[data-my-value='value']\") . A data- attrib\u00fatumok tetsz\u0151leges kulcs-\u00e9rt\u00e9k p\u00e1rok t\u00e1rol\u00e1s\u00e1ra szolg\u00e1lnak a DOM-ban. Nagyon gyakori, hogy az egyes elemeken v\u00e9gzett m\u0171veleteket l\u00e1ncoljuk az al\u00e1bbihoz hasonl\u00f3 m\u00f3don: $(\".button\").before(spinner).attr(\"disabled\", true) . $(function () { /*...*/ }) : az \u00edgy megadott f\u00fcggv\u00e9ny a dokumentum bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en fut le. Ekvivalens a $(document).ready(function () { /*...*/} ) h\u00edv\u00e1ssal. $.ajax() , $.get() , $.post() stb.: a glob\u00e1lis jQuery objektumon el\u00e9rhet\u0151 statikus f\u00fcggv\u00e9nyek f\u00fcggetlenek az egyes DOM elemekt\u0151l, ezek pl. aszinkron AJAX k\u00e9r\u00e9sek v\u00e9grehajt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3k. jQuery pluginek \u00b6 A jQuery kieg\u00e9sz\u00edt\u00e9sek\u00e9ppen egyszer\u0171bb \u00e9s bonyolultabb plugineket haszn\u00e1lhatunk. Ezek a pluginek jellemz\u0151en a jQuery objektumra \u00fajabb f\u00fcggv\u00e9nyeket helyeznek el, amelyek seg\u00edts\u00e9g\u00e9vel a kieg\u00e9sz\u00edt\u0151 funkcionalit\u00e1s el\u00e9rhet\u0151. A Boostrap k\u00e9tf\u00e9le m\u00f3don teszi el\u00e9rhet\u0151v\u00e9 a plugineket: data-attib\u00fatumok form\u00e1j\u00e1ban \u00e9s a jQuery API-n kereszt\u00fcl. A fontosabbak pl.: .modal() .dropdown() , .tooltip() , .alert() , .collapse() . B\u0151vebben a Bootstrap jQuery pluginekr\u0151l itt olvashat. Gyakran haszn\u00e1lt pluginokat ad m\u00e9g pl. a jQuery UI , amiben d\u00e1tum- \u00e9s id\u0151v\u00e1laszt\u00f3, dial\u00f3gusablak, progressbar stb. \"widgetek\" tal\u00e1lhat\u00f3k. Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se \u00b6 A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s! Kiindul\u00f3 \u00e1ttekint\u00e9se \u00b6 A laboron k\u00e9sz\u00fcl\u0151 alkalmaz\u00e1s egy egyszer\u0171 kv\u00edzj\u00e1t\u00e9k, amely az Open Trivia Database publikus, ingyenesen el\u00e9rhet\u0151 API-j\u00e1t haszn\u00e1lja. A j\u00e1t\u00e9k menete az al\u00e1bbi lesz: A j\u00e1t\u00e9k opci\u00f3inak megad\u00e1sa a Let's play! gombra kattintva lehets\u00e9ges. Az opci\u00f3kn\u00e1l megadhat\u00f3 a k\u00e9rd\u00e9sek sz\u00e1ma (1 \u00e9s 50 k\u00f6z\u00f6tt), a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja \u00e9s neh\u00e9zs\u00e9ge. Ezt k\u00f6vet\u0151en a j\u00e1t\u00e9k a Go! felirat\u00fa gombra kattintva ind\u00edthat\u00f3. A j\u00e1t\u00e9k sor\u00e1n a t\u00e1voli API-t\u00f3l lek\u00e9rdezett k\u00e9rd\u00e9sek fognak k\u00f6vetkezni. Az aktu\u00e1lis k\u00e9rd\u00e9s sorsz\u00e1ma \u00e9s az \u00f6sszes k\u00e9rd\u00e9s sz\u00e1ma l\u00e1that\u00f3 a k\u00e9rd\u00e9s oldal\u00e1n, a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja, a k\u00e9rd\u00e9s sz\u00f6vege, valamint a 4 v\u00e1laszlehet\u0151s\u00e9g, amelyek k\u00f6z\u00fcl mindig pontosan egy lesz helyes. A 4 v\u00e1laszlehet\u0151s\u00e9g egyik\u00e9re kattintva visszajelz\u00e9s \u00e9rkezik a v\u00e1lasz helyess\u00e9g\u00e9r\u0151l. Ha a v\u00e1lasz helytelen volt, a helyes v\u00e1laszt is jelzi az alkalmaz\u00e1s. A k\u00e9rd\u00e9sek v\u00e9g\u00e9re \u00e9rve az alkalmaz\u00e1s jelzi, h\u00e1ny pontot \u00e9rt\u00fcnk el a maximumb\u00f3l, majd \u00faj j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra van lehet\u0151s\u00e9g. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy TypeScript t\u00e1mogat\u00e1ssal a JavaScript k\u00f3dunkban IntelliSense-t fogunk kapni (Visual Studio Code vagy Visual Studio haszn\u00e1lat\u00e1val) a jQuery k\u00f6nyvt\u00e1rhoz is! Az alkalmaz\u00e1s kiindul\u00f3 k\u00f3dj\u00e1t megvizsg\u00e1lva az al\u00e1bbi f\u00e1jlokat tal\u00e1ljuk: index.html : a kiindul\u00f3 HTML. A f\u00e1jlt a feladatok megold\u00e1s\u00e1hoz nem sz\u00fcks\u00e9ges m\u00f3dos\u00edtani. Ha a f\u00e1jlban m\u00f3dos\u00edt, dokument\u00e1lja a m\u00f3dos\u00edt\u00e1s\u00e1t! node_modules mappa : az npm csomagkezel\u0151vel let\u00f6lt\u00f6tt jQuery t\u00edpusdefin\u00edci\u00f3s f\u00e1jlok JavaScript (TypeScript) IntelliSense t\u00e1mogat\u00e1shoz tal\u00e1lhat\u00f3k itt. triviaut.js : egy \u00fcres JavaScript f\u00e1jl, amely az index.html <head> r\u00e9sz\u00e9ben ker\u00fclt hivatkoz\u00e1sra. Az alkalmaz\u00e1s forr\u00e1sk\u00f3dj\u00e1t ebbe a f\u00e1jlba sz\u00fcks\u00e9ges helyezni. start-game-form-contents.html : egy r\u00e9szleges HTML f\u00e1jl, amelyben a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges opci\u00f3k le\u00edr\u00e1sa tal\u00e1lhat\u00f3. opentriviadb-logo.png : \u00e9rtelemszer\u0171en a fentebb hivatkozott API log\u00f3ja. node_modules A node_modules mapp\u00e1t nem szok\u00e1s felcommitolni a repositoryba mert tipikusan nagyon nagyra n\u0151het. Most csak az\u00e9rt ker\u00fclt bele a kiindul\u00f3 projektbe, hogy ne az \u00f3r\u00e1n kelljen az npm install parancsot kiadni. Vizsg\u00e1ljuk meg az index.html tartalm\u00e1t! A f\u00e1jlban l\u00e1that\u00f3, hogy be vannak hivatkozva az al\u00e1bbiak: a saj\u00e1t JavaScript f\u00e1jlunk, a triviaut.js , a Bootstrap CSS \u00e9s JavaScript f\u00e1jljai, a FontAwesome ikonk\u00e9szlet CSS f\u00e1jlja, a jQuery oszt\u00e1lyk\u00f6nyvt\u00e1r JS f\u00e1jlja. Fontos, hogy a JavaScript f\u00e1jl bet\u00f6lt\u0151d\u00e9sekor az addig a pontig elk\u00e9sz\u00fclt DOM-on k\u00e9pes manipul\u00e1ci\u00f3t v\u00e9gezni. Ezen k\u00edv\u00fcl l\u00e1thatjuk, hogy a HTML f\u00e1jlunkban egy <header> \u00e9s egy <main> elem tal\u00e1lhat\u00f3. A <header> tartalma sz\u00e1munkra statikus. A <main> -ben h\u00e1rom db <section> elemet l\u00e1thatunk az al\u00e1bbi ID-kkal ell\u00e1tva: lets-play-section : a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra (az opci\u00f3k megjelen\u00edt\u00e9s\u00e9re) sz\u00e1nt gomb, start-game-form-section : a j\u00e1t\u00e9k opci\u00f3it tartalmaz\u00f3 <form> , amely a Loading... sz\u00f6veget tartalmazza - egyel\u0151re el van rejtve a style attrib\u00fatum display: none \u00e9rt\u00e9ke alapj\u00e1n, game-section : maga a j\u00e1t\u00e9kt\u00e9r, ahol a k\u00e9rd\u00e9sek tal\u00e1lhat\u00f3k, szint\u00e9n elrejtve tal\u00e1lhat\u00f3 a DOM-ban. Feladat 1 - J\u00e1t\u00e9k ind\u00edt\u00e1sa \u00b6 jQuery \u00e9s AJAX kipr\u00f3b\u00e1l\u00e1sa \u00b6 Pr\u00f3b\u00e1ljuk ki a jQuery k\u00f6nyvt\u00e1rat az al\u00e1bbi m\u00f3don: a szerver ind\u00edt\u00e1s\u00e1t k\u00f6vet\u0151en navig\u00e1ljunk a b\u00f6ng\u00e9sz\u0151ben az oldalra! Az F12 eszk\u00f6zt\u00e1ron nyissuk meg a Console-t, \u00e9s futtassuk az al\u00e1bbi parancsokat egyes\u00e9vel, sorrendben (k\u00f6zben figyelj\u00fck, mi t\u00f6rt\u00e9nik a fel\u00fcleten): $ ( \"#lets-play-section\" ). hide (); $ ( \"#start-game-form-section\" ). show (); $ ( \"#start-game-form-section, #game-section\" ). toggle (); L\u00e1thatjuk, hogy a .hide() , .show() \u00e9s .toggle() f\u00fcggv\u00e9nyek \u00e9rtelemszer\u0171en a CSS selector \u00e1ltal illesztett \u00f6sszes DOM elem display: none CSS tulajdons\u00e1g\u00e1t teszik fel a DOM elemre, vagy veszik azt le r\u00f3la. Tesztelj\u00fck a t\u00e1voli API-t! A triviaut.js f\u00e1jlba \u00edrjuk az al\u00e1bbi k\u00f3dot: $ . get ( \"https://opentdb.com/api.php?amount=10\" ). then ( function ( q ) { console . log ( q ); $ ( \"body\" ). text ( JSON . stringify ( q , '\\n' )); }); Ha mindent j\u00f3l csin\u00e1ltunk, az al\u00e1bbi (vagy nagyon hasonl\u00f3) hib\u00e1t l\u00e1tjuk a konzolon az oldal bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en: Uncaught ReferenceError: $ is not defined A JavaScript f\u00e1jlok bet\u00f6lt\u00e9si sorrendje kiemelten fontos! A bet\u00f6lt\u0151d\u00e9s sorrendje implik\u00e1lja a f\u00fcgg\u0151s\u00e9gi sorrendet is, ugyanis v\u00e9grehajt\u00e1suk a b\u00f6ng\u00e9sz\u0151ben alap\u00e9rtelmezetten az import\u00e1l\u00e1s sorrendj\u00e9vel megegyezik. Ha a saj\u00e1t f\u00e1jlunkat el\u0151bb hivatkozzuk, mint a jQuery-t, \u00fagy az ott fut\u00f3 k\u00f3d $ v\u00e1ltoz\u00f3ra t\u00f6rt\u00e9n\u0151 (szinkron) hivatkoz\u00e1sa hib\u00e1t dob (mert ekkor m\u00e9g nem futott le a jQuery $ objektumot defini\u00e1l\u00f3 k\u00f3d). A megold\u00e1s, hogy \u00e1t kell mozgatnunk a saj\u00e1t JS f\u00e1jlunk hivatkoz\u00e1s\u00e1t a HTML <head> elemben a jQuery hivatkoz\u00e1s ut\u00e1n (\u00e9rdemes minden k\u00fcls\u0151 f\u00fcgg\u0151s\u00e9g hivatkoz\u00e1sa ut\u00e1nra, teh\u00e1t a <head> v\u00e9g\u00e9re tenni). A $.get statikus f\u00fcggv\u00e9ny a $.ajax h\u00edv\u00e1s r\u00f6vid\u00edt\u00e9se, ahol a HTTP ige fixen a HTTP GET. Visszat\u00e9r\u00e9se egy Promise objektum, melyre a .then h\u00edv\u00e1ssal iratkozunk fel, ami 3 callback param\u00e9tert v\u00e1r (mindh\u00e1rom opcion\u00e1lis): a sikeres teljes\u00fcl\u00e9st, a hiba\u00e1gat, \u00e9s mindet. A fenti h\u00edv\u00e1s teh\u00e1t beh\u00edv a megadott URL-re, a kapott v\u00e1laszt a konzolon megjelen\u00edti, majd a <body> elem tartalm\u00e1t sz\u00f6vegesen lecser\u00e9li a kapott tartalmat string form\u00e1ra konvert\u00e1lva (a v\u00e1lasz ugyanis egy JSON objektum). Az al\u00e1bbi form\u00e1tum\u00fa v\u00e1lasz \u00e9rkezik a t\u00e1voli API-t\u00f3l: { \"response_code\" : 0 , \"results\" : [ { \"category\" : \"Entertainment: Film\" , \"type\" : \"multiple\" , \"difficulty\" : \"hard\" , \"question\" : \"In the 1976 film 'Taxi Driver', how many guns did Travis buy from the salesman?\" , \"correct_answer\" : \"4\" , \"incorrect_answers\" : [ \"2\" , \"6\" , \"1\" ] }, ... ] } J\u00e1t\u00e9k ind\u00edt\u00e1s logika \u00b6 Ind\u00edtsuk el a j\u00e1t\u00e9kot! A triviaut.js f\u00e1jl tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira: $ ( \"#lets-play-button\" ). on ( \"click\" , function ( e ) { $ ( e . target ). toggle (); $ ( \"#start-game-form\" ). toggle (); }); A fenti k\u00f3dr\u00e9szlettel elvileg a gombra kattintva elrejtj\u00fck a gombot \u00e9s megjelen\u00edtj\u00fck a j\u00e1t\u00e9k opci\u00f3s \u0171rlapj\u00e1t. A k\u00f3d viszont nem m\u0171k\u00f6dik. Ha ut\u00e1naj\u00e1runk, \u00fagy t\u0171nik, hogy nem t\u00f6rt\u00e9nik feliratkoz\u00e1s. Futtassuk le el\u0151tte az al\u00e1bbi k\u00f3dot is (a JS f\u00e1jl elej\u00e9n): console . log ( $ ( \"#lets-play-button\" ). length ); A konzolon a 0 \u00e9rt\u00e9k jelenik meg, teh\u00e1t ilyen nincsen a DOM-ban. A probl\u00e9ma, hogy a JS f\u00e1jlunk kor\u00e1bban fut, mint a DOM bet\u00f6lt\u0151dne! Fontos teh\u00e1t megv\u00e1rnunk, am\u00edg ez megt\u00f6rt\u00e9nik. A klasszikus m\u00f3dja ennek az al\u00e1bbi megad\u00e1s: $ ( document ). ready ( function () { // itt m\u00e1r elk\u00e9sz\u00fclt a DOM! }) A fenti teh\u00e1t kiv\u00e1lasztja a document elemet a DOM-b\u00f3l, teh\u00e1t a teljes DOM gy\u00f6ker\u00e9t, aminek feliratkozik a ready pszeudo-esem\u00e9ny\u00e9re (ilyen konkr\u00e9t DOM esem\u00e9ny ugyanis nincsen). A fentivel ekvivalens megad\u00e1s az al\u00e1bbi, ahol arrow function -t haszn\u00e1lunk: $ (() => { // itt m\u00e1r elk\u00e9sz\u00fclt a DOM! }); Arrow function A fenti szintaxisban a () => {} k\u00f3dr\u00e9szlet szint\u00e9n egy f\u00fcggv\u00e9ny deklar\u00e1ci\u00f3ja, melynek neve arrow function . Az arrow function szintaxis t\u00f6m\u00f6rebb, szint\u00e9n param\u00e9terezhet\u0151 ( a => a + 10 vagy (a, b) => { return a * b + 2; } ). Tov\u00e1bbi \u00e9rdekess\u00e9ge, hogy a function kulcssz\u00f3val megadott f\u00fcggv\u00e9nyekkel ellent\u00e9tben nem v\u00e1ltoztatja meg a this v\u00e1ltoz\u00f3 \u00e1ltal reprezent\u00e1lt f\u00fcggv\u00e9nyt (objektumot) sem. A kezdeti m\u0171k\u00f6d\u00e9s\u00fcnket teh\u00e1t el\u00e9rhetj\u00fck az al\u00e1bbi m\u00f3don: $ (() => { $ ( \"#lets-play-button\" ). on ( \"click\" , () => { $ ( \"#lets-play-section, #start-game-form-section\" ). toggle (); }); }); Teh\u00e1t a gombot tartalmaz\u00f3 \u00e9s a j\u00e1t\u00e9k opci\u00f3kat tartalmaz\u00f3 szekci\u00f3kat megjelen\u00edtj\u00fck/elrejtj\u00fck. Eg\u00e9sz\u00edts\u00fck ki tov\u00e1bb\u00e1 a fenti k\u00f3dot (a megfelel\u0151 helyen) azzal, hogy a formot reprezent\u00e1l\u00f3 HTML r\u00e9szletet let\u00f6ltj\u00fck a szervert\u0151l \u00e9s a megfelel\u0151 helyre sz\u00farjuk a DOM-ban: $ . get ( \"start-game-form-contents.html\" ) . then ( html => $ ( \"#start-game-form\" ). html ( html )); BEADAND\u00d3 (2 pont) M\u00e1soljon be egy teljes k\u00e9perny\u0151s k\u00e9perny\u0151k\u00e9pet az opci\u00f3k kezdeti \u00e1llapot\u00e1r\u00f3l, ahol el van rejtve az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb! ( f1.png ) Feladat 2 - Szerveroldali API haszn\u00e1lata \u00b6 T\u00f6lts\u00fck le a param\u00e9tereknek megfelel\u0151 elemeket a t\u00e1voli API-r\u00f3l! Ehhez szint\u00e9n a $.get f\u00fcggv\u00e9nyt tudjuk haszn\u00e1lni: // a glob\u00e1lis n\u00e9vt\u00e9rben deklar\u00e1ljuk az al\u00e1bbi v\u00e1ltoz\u00f3kat \u00e9s f\u00fcggv\u00e9nyt: let remainingQuestions , totalQuestions , currentQuestion , correctAnswerIndex ; function getNextQuestion () { } //... $ . get ( \"start-game-form-contents.html\" ). then ( html => $ ( \"#start-game-form\" ). html ( html ) . on ( \"submit\" , e => { // k\u00f6zvetlen\u00fcl a HTML besz\u00far\u00e1sa ut\u00e1n l\u00e1colhatjuk a 'submit' esem\u00e9nyre t\u00f6rt\u00e9n\u0151 feliratkoz\u00e1st e . preventDefault (); // a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9s\u00e9t meg\u00e1ll\u00edtjuk, amivel \u00fajrat\u00f6lten\u00e9 az oldalt $ ( \"#start-game-form button[type='submit']\" ). attr ( \"disabled\" , true ); // a Go! gombot letiltjuk, hogy ne lehessen \u00fajra API k\u00e9r\u00e9st ind\u00edtani, am\u00edg meg nem \u00e9rkezett a v\u00e1lasz $ . get ( \"https://opentdb.com/api.php?type=multiple&encode=base64&amount=\" + $ ( \"[name='trivia_amount']\" ). val ()). then ( data => { remainingQuestions = data . results ; console . log ( remainingQuestions ); currentQuestion = 0 ; totalQuestions = remainingQuestions . length ; $ ( \"#total-questions\" ). text ( totalQuestions ); $ ( \"#start-game-form button[type='submit']\" ). removeAttr ( \"disabled\" ); getNextQuestion (); }); })); BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a konzolon l\u00e1that\u00f3 \u00e9rkezett v\u00e1laszokr\u00f3l! ( f2.png ) Legyen l\u00e1that\u00f3, hogy h\u00e1ny v\u00e1lasz \u00e9rkezett, \u00e9s ez a sz\u00e1m ne az alap\u00e9rtelmezett 10 legyen! Feladat 3 (\u00d6n\u00e1ll\u00f3) - Difficulty \u00e9s Category \u00b6 K\u00e9sz\u00edtse el a marad\u00e9k k\u00e9t param\u00e9ter elk\u00fcld\u00e9s\u00e9t is a difficulty \u00e9s category relev\u00e1ns \u00e9rt\u00e9keinek megad\u00e1s\u00e1val! Haszn\u00e1lhatja a $().serializeArray() f\u00fcggv\u00e9nyt is! BEADAND\u00d3 (0.5 pont) Az \u00e9rkez\u0151 v\u00e1laszr\u00f3l a konzolon k\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet! ( f3.png ) Feladat 4 - A j\u00e1t\u00e9k menete \u00b6 A meg\u00e9rkezett v\u00e1lasz kezel\u00e9s\u00e9hez a megfelel\u0151 mez\u0151ket ki kell t\u00f6lten\u00fcnk a HTML dokumentumban. A getNextQuestion() f\u00fcggv\u00e9ny k\u00f3dj\u00e1nak kezdem\u00e9nye az al\u00e1bbi lehet: currentQuestion ++ ; const question = remainingQuestions . pop (); if ( question === undefined ) { // TODO: nincs t\u00f6bb k\u00e9rd\u00e9s! return ; } correctAnswerIndex = Math . floor ( Math . random () * 4 ); const answers = question . incorrect_answers . slice (); answers . splice ( correctAnswerIndex , 0 , question . correct_answer ); $ ( \".answer .correct, .answer .incorrect, #next-question\" ). hide (); A f\u00fcggv\u00e9ny tov\u00e1bbi r\u00e9sz\u00e9t az al\u00e1bbi m\u00f3don implement\u00e1lja: rejtse el az opci\u00f3s \u0171rlapot, jelen\u00edtse meg a j\u00e1t\u00e9kteret, t\u00f6ltse ki a jelenlegi j\u00e1t\u00e9k sz\u00e1ml\u00e1l\u00f3j\u00e1t, t\u00f6ltse ki a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1j\u00e1t ( atob(question.category) ), t\u00f6ltse ki a k\u00e9rd\u00e9s sz\u00f6veg\u00e9t (szint\u00e9n haszn\u00e1lja az atob() f\u00fcggv\u00e9nyt a base64 sz\u00f6veg dek\u00f3dol\u00e1s\u00e1hoz), vegye le az \u00f6sszes v\u00e1laszlehet\u0151s\u00e9gr\u0151l ( .answer ) a disabled attrib\u00fatumot (tipp: $().removeAttr() ), minden v\u00e1laszlehet\u0151s\u00e9g sz\u00f6veg\u00e9nek hely\u0151rz\u0151j\u00e9ben helyezze el a v\u00e1lasz sz\u00f6veg\u00e9t (\u00fcgyeljen r\u00e1, hogy ne t\u00f6r\u00f6lje ki a helyes/helytelen ikonokat, \u00e9s itt is haszn\u00e1lja az atob() konverzi\u00f3t)! BEADAND\u00d3 (1 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a j\u00e1t\u00e9kt\u00e9ren megjelen\u0151 k\u00e9rd\u00e9sr\u0151l, v\u00e1laszlehet\u0151s\u00e9gekr\u0151l! ( f4.png ) Feladat 5 (\u00d6n\u00e1ll\u00f3) - Tov\u00e1bbi j\u00e1t\u00e9klogika \u00b6 A tanultak gyakorl\u00e1sak\u00e9pp k\u00e9sz\u00edtse el az al\u00e1bbi funkci\u00f3kat: A v\u00e1laszlehet\u0151s\u00e9gre kattintva a rendszer a v\u00e1lasz mellett tal\u00e1lhat\u00f3 pipa ikonnal jelzi, hogy helyes v\u00e1lasz \u00e9rkezett, vagy x-szel, ha helytelen. Ut\u00f3bbi esetben a helyes v\u00e1lasz mellett egy pipa is megjelenik. A feliratkoz\u00e1shoz haszn\u00e1lja az $(\".answer\").on(\"click\", e => { /* */ }) kezel\u0151t! A helyes v\u00e1laszok sz\u00e1m\u00e1t tartsa nyilv\u00e1n! Jelen\u00edtse meg a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gombot, ha a felhaszn\u00e1l\u00f3 v\u00e1laszt adott! Arra kattintva jelenjen meg a k\u00f6vetkez\u0151 k\u00e9rd\u00e9s! A j\u00e1t\u00e9k befejezt\u00e9vel, amikor elfogynak az aktu\u00e1lis k\u00e9rd\u00e9sek, jelen\u00edtse meg, h\u00e1ny pontot \u00e9rt el a felhaszn\u00e1l\u00f3 a maximumb\u00f3l! A j\u00e1t\u00e9k befejezt\u00e9vel lehessen \u00fajrat\u00f6lt\u00e9s (F5) n\u00e9lk\u00fcl \u00faj j\u00e1t\u00e9kot ind\u00edtani! Hozhat l\u00e9tre \u00faj gombot, vagy \u00e1t\u00edrhatja a k\u00f6vetkez\u0151 k\u00e9rd\u00e9sre szolg\u00e1l\u00f3 gomb sz\u00f6veg\u00e9t (ekkor viszont \u00fcgyeljen r\u00e1, hogy ezt k\u00f6vet\u0151en ne felejtse vissza\u00e1ll\u00edtani azt)! A legfelhaszn\u00e1l\u00f3bar\u00e1tabb \u00e9lm\u00e9ny\u00e9rt haszn\u00e1lhatja a Bootstrap modal megold\u00e1st is! BEADAND\u00d3 (1 pont) K\u00e9perny\u0151k\u00e9pekkel \u00e9s a relev\u00e1ns k\u00f3dr\u00e9szletekkel demonstr\u00e1lja az al\u00e1bbi eseteket: a j\u00e1t\u00e9kos helyesen v\u00e1laszolt a k\u00e9rd\u00e9sre, ( f5.1.png ) a j\u00e1t\u00e9kos helytelen\u00fcl v\u00e1laszolt a k\u00e9rd\u00e9sre, ( f5.2.png ) a v\u00e1laszad\u00e1s el\u0151tt nem, ut\u00e1na l\u00e1that\u00f3 a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gomb, ( f5.3.png ) az aktu\u00e1lis k\u00e9rd\u00e9s sz\u00e1ml\u00e1l\u00f3ja n\u00f6vekszik, ( f5.4.png ) megjelenik a felhaszn\u00e1l\u00f3 \u00e1ltal el\u00e9rt pontsz\u00e1m! ( f5.5.png )","title":"Labor 12 - jQuery"},{"location":"laborok/12-jquery/#labor-12-jquery","text":"","title":"Labor 12 - jQuery"},{"location":"laborok/12-jquery/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. Eml\u00e9keztet\u0151k\u00e9nt n\u00e9h\u00e1ny gondolat a jQuery-r\u0151l","title":"Bevezet\u00e9s"},{"location":"laborok/12-jquery/#a-jquery","text":"A jQuery egy \"sv\u00e1jcibicska-szer\u0171\" JavaScript library. Jelent\u0151s\u00e9ge napjainkban az alkalmaz\u00e1sfejleszt\u0151 keretrendszerek jav\u00e1ra egyre cs\u00f6kken, viszont az alapkoncepci\u00f3k meg\u00e9rt\u00e9s\u00e9re tov\u00e1bbra is hasznos eszk\u00f6z. Els\u0151sorban kieg\u00e9sz\u00edt\u00e9sk\u00e9ppen haszn\u00e1lj\u00e1k k\u00fcl\u00f6nf\u00e9le dinamikusan gener\u00e1lt HTML tartalmakhoz t\u00f6rt\u00e9n\u0151 dinamizmus hozz\u00e1rendel\u00e9s\u00e9vel, nem pedig teljes, \u00f6n\u00e1ll\u00f3, kliensoldali alkalmaz\u00e1s fejleszt\u00e9s\u00e9re (de ut\u00f3bbira is haszn\u00e1lhat\u00f3). A jQuery API a $ (\u00e9s ritk\u00e1bban a jQuery ) glob\u00e1lis v\u00e1ltoz\u00f3n kereszt\u00fcl \u00e9rhet\u0151 el, alapvet\u0151en az al\u00e1bbi m\u00f3dokon: const elements = $('ul li.active') : a megadott CSS selectornak megfelel\u0151 DOM elemeket v\u00e1lasztja ki, \u00e9s visszaadja egy jQuery objektumban . A b\u00e1rmilyen m\u00f3don szerzett jQuery objektum hivatkoz\u00e1sokon az al\u00e1bbihoz hasonl\u00f3 lehet\u0151s\u00e9geink vannak: A jQuery objektum p\u00e9ld\u00e1nyai egyben t\u00f6mb\u00f6k, amik tartalmazz\u00e1k a megtal\u00e1lt nat\u00edv DOM elemeket (teh\u00e1t iter\u00e1lhatunk rajta), ill. a jQuery p\u00e9ld\u00e1nyf\u00fcggv\u00e9nyeit tartalmazz\u00e1k, amelyek el\u00e9rik az illesztett DOM elemeket. .show() , .hide() , .toggle() : az illesztett elemeket megjelen\u00edti vagy elrejti az\u00e1ltal, hogy az elemre inline display: none st\u00edlust helyezi, .append(e) , .appendTo(e) , .before(e) , .after(e) , az elemhez/el\u00e9/ut\u00e1n sz\u00far be \u00fajabb elemeket (jQuery szelektorral el\u00e9rt elemeket, DOM elemeket vagy HTML tartalmat), .attr() : gyakori, hogy egy f\u00fcggv\u00e9ny getter-setterk\u00e9nt m\u0171k\u00f6dik, ilyen az attr is. Ha egy param\u00e9tert adunk \u00e1t, az adott attrib\u00fatum \u00e9rt\u00e9k\u00e9t kapjuk vissza, ha kett\u0151t, a m\u00e1sodik param\u00e9ter az els\u0151 n\u00e9ven adott attrib\u00fatum \u00e9rt\u00e9ke lesz (minden illesztett elemre). .on() : esem\u00e9nykezel\u0151 feliratkoztat\u00e1sa az adott n\u00e9vvel. K\u00e9t param\u00e9ter eset\u00e9n ha a m\u00e1sodik param\u00e9ter a callback, \u00fagy az h\u00edv\u00f3dik meg az adott elemen; ha a callback el\u0151tt egy szelektort is megadunk, az \"\u00e9l\u0151\" feliratkoz\u00e1s lesz az illesztett elemen bel\u00fcli lesz\u00e1rmazott gyerekekre. P\u00e1rja az .off() , amellyel esem\u00e9nykezel\u0151t iratkoztathatunk le, ez\u00e1ltal elker\u00fclve az esetleges mem\u00f3riasziv\u00e1rg\u00e1st. .click() , .submit() stb.: az adott JavaScript esem\u00e9nyek els\u00fct\u00e9se (param\u00e9ter n\u00e9lk\u00fcl) vagy feliratkoz\u00e1s az esem\u00e9nyre (callback megad\u00e1s\u00e1val) az illesztett elemeken. Elavult, ehelyett a fentebb le\u00edrt .on() -t haszn\u00e1ljuk feliratkoz\u00e1sra, a .trigger() -t pedig els\u00fct\u00e9sre. .data(name) : a DOM elem data-{name} attrib\u00fatum\u00e1ban szerepl\u0151 \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1s\u00e1ra \u00e9s lek\u00e9rdez\u00e9s\u00e9re haszn\u00e1lhatjuk. A lek\u00e9rdez\u00e9s gyakorlatilag ekvivalens azzal, mintha az al\u00e1bbit haszn\u00e1ln\u00e1nk: .attr(\"data-name\").val() . Eml\u00e9keztet\u0151k\u00e9nt, a CSS-ben attrib\u00fatum alapj\u00e1n lek\u00e9rdezni elemet az al\u00e1bbi m\u00f3don tudunk: $(\"elem[data-my-value='value']\") . A data- attrib\u00fatumok tetsz\u0151leges kulcs-\u00e9rt\u00e9k p\u00e1rok t\u00e1rol\u00e1s\u00e1ra szolg\u00e1lnak a DOM-ban. Nagyon gyakori, hogy az egyes elemeken v\u00e9gzett m\u0171veleteket l\u00e1ncoljuk az al\u00e1bbihoz hasonl\u00f3 m\u00f3don: $(\".button\").before(spinner).attr(\"disabled\", true) . $(function () { /*...*/ }) : az \u00edgy megadott f\u00fcggv\u00e9ny a dokumentum bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en fut le. Ekvivalens a $(document).ready(function () { /*...*/} ) h\u00edv\u00e1ssal. $.ajax() , $.get() , $.post() stb.: a glob\u00e1lis jQuery objektumon el\u00e9rhet\u0151 statikus f\u00fcggv\u00e9nyek f\u00fcggetlenek az egyes DOM elemekt\u0151l, ezek pl. aszinkron AJAX k\u00e9r\u00e9sek v\u00e9grehajt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3k.","title":"A jQuery"},{"location":"laborok/12-jquery/#jquery-pluginek","text":"A jQuery kieg\u00e9sz\u00edt\u00e9sek\u00e9ppen egyszer\u0171bb \u00e9s bonyolultabb plugineket haszn\u00e1lhatunk. Ezek a pluginek jellemz\u0151en a jQuery objektumra \u00fajabb f\u00fcggv\u00e9nyeket helyeznek el, amelyek seg\u00edts\u00e9g\u00e9vel a kieg\u00e9sz\u00edt\u0151 funkcionalit\u00e1s el\u00e9rhet\u0151. A Boostrap k\u00e9tf\u00e9le m\u00f3don teszi el\u00e9rhet\u0151v\u00e9 a plugineket: data-attib\u00fatumok form\u00e1j\u00e1ban \u00e9s a jQuery API-n kereszt\u00fcl. A fontosabbak pl.: .modal() .dropdown() , .tooltip() , .alert() , .collapse() . B\u0151vebben a Bootstrap jQuery pluginekr\u0151l itt olvashat. Gyakran haszn\u00e1lt pluginokat ad m\u00e9g pl. a jQuery UI , amiben d\u00e1tum- \u00e9s id\u0151v\u00e1laszt\u00f3, dial\u00f3gusablak, progressbar stb. \"widgetek\" tal\u00e1lhat\u00f3k.","title":"jQuery pluginek"},{"location":"laborok/12-jquery/#git-repository-letrehozasa-es-letoltese","text":"A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository feladat mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: http-server (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az index.html megnyit\u00e1sa ut\u00e1n, vagy F1 > \"Live Server: Open with Live Server\")! Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se"},{"location":"laborok/12-jquery/#kiindulo-attekintese","text":"A laboron k\u00e9sz\u00fcl\u0151 alkalmaz\u00e1s egy egyszer\u0171 kv\u00edzj\u00e1t\u00e9k, amely az Open Trivia Database publikus, ingyenesen el\u00e9rhet\u0151 API-j\u00e1t haszn\u00e1lja. A j\u00e1t\u00e9k menete az al\u00e1bbi lesz: A j\u00e1t\u00e9k opci\u00f3inak megad\u00e1sa a Let's play! gombra kattintva lehets\u00e9ges. Az opci\u00f3kn\u00e1l megadhat\u00f3 a k\u00e9rd\u00e9sek sz\u00e1ma (1 \u00e9s 50 k\u00f6z\u00f6tt), a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja \u00e9s neh\u00e9zs\u00e9ge. Ezt k\u00f6vet\u0151en a j\u00e1t\u00e9k a Go! felirat\u00fa gombra kattintva ind\u00edthat\u00f3. A j\u00e1t\u00e9k sor\u00e1n a t\u00e1voli API-t\u00f3l lek\u00e9rdezett k\u00e9rd\u00e9sek fognak k\u00f6vetkezni. Az aktu\u00e1lis k\u00e9rd\u00e9s sorsz\u00e1ma \u00e9s az \u00f6sszes k\u00e9rd\u00e9s sz\u00e1ma l\u00e1that\u00f3 a k\u00e9rd\u00e9s oldal\u00e1n, a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja, a k\u00e9rd\u00e9s sz\u00f6vege, valamint a 4 v\u00e1laszlehet\u0151s\u00e9g, amelyek k\u00f6z\u00fcl mindig pontosan egy lesz helyes. A 4 v\u00e1laszlehet\u0151s\u00e9g egyik\u00e9re kattintva visszajelz\u00e9s \u00e9rkezik a v\u00e1lasz helyess\u00e9g\u00e9r\u0151l. Ha a v\u00e1lasz helytelen volt, a helyes v\u00e1laszt is jelzi az alkalmaz\u00e1s. A k\u00e9rd\u00e9sek v\u00e9g\u00e9re \u00e9rve az alkalmaz\u00e1s jelzi, h\u00e1ny pontot \u00e9rt\u00fcnk el a maximumb\u00f3l, majd \u00faj j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra van lehet\u0151s\u00e9g. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy TypeScript t\u00e1mogat\u00e1ssal a JavaScript k\u00f3dunkban IntelliSense-t fogunk kapni (Visual Studio Code vagy Visual Studio haszn\u00e1lat\u00e1val) a jQuery k\u00f6nyvt\u00e1rhoz is! Az alkalmaz\u00e1s kiindul\u00f3 k\u00f3dj\u00e1t megvizsg\u00e1lva az al\u00e1bbi f\u00e1jlokat tal\u00e1ljuk: index.html : a kiindul\u00f3 HTML. A f\u00e1jlt a feladatok megold\u00e1s\u00e1hoz nem sz\u00fcks\u00e9ges m\u00f3dos\u00edtani. Ha a f\u00e1jlban m\u00f3dos\u00edt, dokument\u00e1lja a m\u00f3dos\u00edt\u00e1s\u00e1t! node_modules mappa : az npm csomagkezel\u0151vel let\u00f6lt\u00f6tt jQuery t\u00edpusdefin\u00edci\u00f3s f\u00e1jlok JavaScript (TypeScript) IntelliSense t\u00e1mogat\u00e1shoz tal\u00e1lhat\u00f3k itt. triviaut.js : egy \u00fcres JavaScript f\u00e1jl, amely az index.html <head> r\u00e9sz\u00e9ben ker\u00fclt hivatkoz\u00e1sra. Az alkalmaz\u00e1s forr\u00e1sk\u00f3dj\u00e1t ebbe a f\u00e1jlba sz\u00fcks\u00e9ges helyezni. start-game-form-contents.html : egy r\u00e9szleges HTML f\u00e1jl, amelyben a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges opci\u00f3k le\u00edr\u00e1sa tal\u00e1lhat\u00f3. opentriviadb-logo.png : \u00e9rtelemszer\u0171en a fentebb hivatkozott API log\u00f3ja. node_modules A node_modules mapp\u00e1t nem szok\u00e1s felcommitolni a repositoryba mert tipikusan nagyon nagyra n\u0151het. Most csak az\u00e9rt ker\u00fclt bele a kiindul\u00f3 projektbe, hogy ne az \u00f3r\u00e1n kelljen az npm install parancsot kiadni. Vizsg\u00e1ljuk meg az index.html tartalm\u00e1t! A f\u00e1jlban l\u00e1that\u00f3, hogy be vannak hivatkozva az al\u00e1bbiak: a saj\u00e1t JavaScript f\u00e1jlunk, a triviaut.js , a Bootstrap CSS \u00e9s JavaScript f\u00e1jljai, a FontAwesome ikonk\u00e9szlet CSS f\u00e1jlja, a jQuery oszt\u00e1lyk\u00f6nyvt\u00e1r JS f\u00e1jlja. Fontos, hogy a JavaScript f\u00e1jl bet\u00f6lt\u0151d\u00e9sekor az addig a pontig elk\u00e9sz\u00fclt DOM-on k\u00e9pes manipul\u00e1ci\u00f3t v\u00e9gezni. Ezen k\u00edv\u00fcl l\u00e1thatjuk, hogy a HTML f\u00e1jlunkban egy <header> \u00e9s egy <main> elem tal\u00e1lhat\u00f3. A <header> tartalma sz\u00e1munkra statikus. A <main> -ben h\u00e1rom db <section> elemet l\u00e1thatunk az al\u00e1bbi ID-kkal ell\u00e1tva: lets-play-section : a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra (az opci\u00f3k megjelen\u00edt\u00e9s\u00e9re) sz\u00e1nt gomb, start-game-form-section : a j\u00e1t\u00e9k opci\u00f3it tartalmaz\u00f3 <form> , amely a Loading... sz\u00f6veget tartalmazza - egyel\u0151re el van rejtve a style attrib\u00fatum display: none \u00e9rt\u00e9ke alapj\u00e1n, game-section : maga a j\u00e1t\u00e9kt\u00e9r, ahol a k\u00e9rd\u00e9sek tal\u00e1lhat\u00f3k, szint\u00e9n elrejtve tal\u00e1lhat\u00f3 a DOM-ban.","title":"Kiindul\u00f3 \u00e1ttekint\u00e9se"},{"location":"laborok/12-jquery/#feladat-1-jatek-inditasa","text":"","title":"Feladat 1 - J\u00e1t\u00e9k ind\u00edt\u00e1sa"},{"location":"laborok/12-jquery/#jquery-es-ajax-kiprobalasa","text":"Pr\u00f3b\u00e1ljuk ki a jQuery k\u00f6nyvt\u00e1rat az al\u00e1bbi m\u00f3don: a szerver ind\u00edt\u00e1s\u00e1t k\u00f6vet\u0151en navig\u00e1ljunk a b\u00f6ng\u00e9sz\u0151ben az oldalra! Az F12 eszk\u00f6zt\u00e1ron nyissuk meg a Console-t, \u00e9s futtassuk az al\u00e1bbi parancsokat egyes\u00e9vel, sorrendben (k\u00f6zben figyelj\u00fck, mi t\u00f6rt\u00e9nik a fel\u00fcleten): $ ( \"#lets-play-section\" ). hide (); $ ( \"#start-game-form-section\" ). show (); $ ( \"#start-game-form-section, #game-section\" ). toggle (); L\u00e1thatjuk, hogy a .hide() , .show() \u00e9s .toggle() f\u00fcggv\u00e9nyek \u00e9rtelemszer\u0171en a CSS selector \u00e1ltal illesztett \u00f6sszes DOM elem display: none CSS tulajdons\u00e1g\u00e1t teszik fel a DOM elemre, vagy veszik azt le r\u00f3la. Tesztelj\u00fck a t\u00e1voli API-t! A triviaut.js f\u00e1jlba \u00edrjuk az al\u00e1bbi k\u00f3dot: $ . get ( \"https://opentdb.com/api.php?amount=10\" ). then ( function ( q ) { console . log ( q ); $ ( \"body\" ). text ( JSON . stringify ( q , '\\n' )); }); Ha mindent j\u00f3l csin\u00e1ltunk, az al\u00e1bbi (vagy nagyon hasonl\u00f3) hib\u00e1t l\u00e1tjuk a konzolon az oldal bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en: Uncaught ReferenceError: $ is not defined A JavaScript f\u00e1jlok bet\u00f6lt\u00e9si sorrendje kiemelten fontos! A bet\u00f6lt\u0151d\u00e9s sorrendje implik\u00e1lja a f\u00fcgg\u0151s\u00e9gi sorrendet is, ugyanis v\u00e9grehajt\u00e1suk a b\u00f6ng\u00e9sz\u0151ben alap\u00e9rtelmezetten az import\u00e1l\u00e1s sorrendj\u00e9vel megegyezik. Ha a saj\u00e1t f\u00e1jlunkat el\u0151bb hivatkozzuk, mint a jQuery-t, \u00fagy az ott fut\u00f3 k\u00f3d $ v\u00e1ltoz\u00f3ra t\u00f6rt\u00e9n\u0151 (szinkron) hivatkoz\u00e1sa hib\u00e1t dob (mert ekkor m\u00e9g nem futott le a jQuery $ objektumot defini\u00e1l\u00f3 k\u00f3d). A megold\u00e1s, hogy \u00e1t kell mozgatnunk a saj\u00e1t JS f\u00e1jlunk hivatkoz\u00e1s\u00e1t a HTML <head> elemben a jQuery hivatkoz\u00e1s ut\u00e1n (\u00e9rdemes minden k\u00fcls\u0151 f\u00fcgg\u0151s\u00e9g hivatkoz\u00e1sa ut\u00e1nra, teh\u00e1t a <head> v\u00e9g\u00e9re tenni). A $.get statikus f\u00fcggv\u00e9ny a $.ajax h\u00edv\u00e1s r\u00f6vid\u00edt\u00e9se, ahol a HTTP ige fixen a HTTP GET. Visszat\u00e9r\u00e9se egy Promise objektum, melyre a .then h\u00edv\u00e1ssal iratkozunk fel, ami 3 callback param\u00e9tert v\u00e1r (mindh\u00e1rom opcion\u00e1lis): a sikeres teljes\u00fcl\u00e9st, a hiba\u00e1gat, \u00e9s mindet. A fenti h\u00edv\u00e1s teh\u00e1t beh\u00edv a megadott URL-re, a kapott v\u00e1laszt a konzolon megjelen\u00edti, majd a <body> elem tartalm\u00e1t sz\u00f6vegesen lecser\u00e9li a kapott tartalmat string form\u00e1ra konvert\u00e1lva (a v\u00e1lasz ugyanis egy JSON objektum). Az al\u00e1bbi form\u00e1tum\u00fa v\u00e1lasz \u00e9rkezik a t\u00e1voli API-t\u00f3l: { \"response_code\" : 0 , \"results\" : [ { \"category\" : \"Entertainment: Film\" , \"type\" : \"multiple\" , \"difficulty\" : \"hard\" , \"question\" : \"In the 1976 film 'Taxi Driver', how many guns did Travis buy from the salesman?\" , \"correct_answer\" : \"4\" , \"incorrect_answers\" : [ \"2\" , \"6\" , \"1\" ] }, ... ] }","title":"jQuery \u00e9s AJAX kipr\u00f3b\u00e1l\u00e1sa"},{"location":"laborok/12-jquery/#jatek-inditas-logika","text":"Ind\u00edtsuk el a j\u00e1t\u00e9kot! A triviaut.js f\u00e1jl tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira: $ ( \"#lets-play-button\" ). on ( \"click\" , function ( e ) { $ ( e . target ). toggle (); $ ( \"#start-game-form\" ). toggle (); }); A fenti k\u00f3dr\u00e9szlettel elvileg a gombra kattintva elrejtj\u00fck a gombot \u00e9s megjelen\u00edtj\u00fck a j\u00e1t\u00e9k opci\u00f3s \u0171rlapj\u00e1t. A k\u00f3d viszont nem m\u0171k\u00f6dik. Ha ut\u00e1naj\u00e1runk, \u00fagy t\u0171nik, hogy nem t\u00f6rt\u00e9nik feliratkoz\u00e1s. Futtassuk le el\u0151tte az al\u00e1bbi k\u00f3dot is (a JS f\u00e1jl elej\u00e9n): console . log ( $ ( \"#lets-play-button\" ). length ); A konzolon a 0 \u00e9rt\u00e9k jelenik meg, teh\u00e1t ilyen nincsen a DOM-ban. A probl\u00e9ma, hogy a JS f\u00e1jlunk kor\u00e1bban fut, mint a DOM bet\u00f6lt\u0151dne! Fontos teh\u00e1t megv\u00e1rnunk, am\u00edg ez megt\u00f6rt\u00e9nik. A klasszikus m\u00f3dja ennek az al\u00e1bbi megad\u00e1s: $ ( document ). ready ( function () { // itt m\u00e1r elk\u00e9sz\u00fclt a DOM! }) A fenti teh\u00e1t kiv\u00e1lasztja a document elemet a DOM-b\u00f3l, teh\u00e1t a teljes DOM gy\u00f6ker\u00e9t, aminek feliratkozik a ready pszeudo-esem\u00e9ny\u00e9re (ilyen konkr\u00e9t DOM esem\u00e9ny ugyanis nincsen). A fentivel ekvivalens megad\u00e1s az al\u00e1bbi, ahol arrow function -t haszn\u00e1lunk: $ (() => { // itt m\u00e1r elk\u00e9sz\u00fclt a DOM! }); Arrow function A fenti szintaxisban a () => {} k\u00f3dr\u00e9szlet szint\u00e9n egy f\u00fcggv\u00e9ny deklar\u00e1ci\u00f3ja, melynek neve arrow function . Az arrow function szintaxis t\u00f6m\u00f6rebb, szint\u00e9n param\u00e9terezhet\u0151 ( a => a + 10 vagy (a, b) => { return a * b + 2; } ). Tov\u00e1bbi \u00e9rdekess\u00e9ge, hogy a function kulcssz\u00f3val megadott f\u00fcggv\u00e9nyekkel ellent\u00e9tben nem v\u00e1ltoztatja meg a this v\u00e1ltoz\u00f3 \u00e1ltal reprezent\u00e1lt f\u00fcggv\u00e9nyt (objektumot) sem. A kezdeti m\u0171k\u00f6d\u00e9s\u00fcnket teh\u00e1t el\u00e9rhetj\u00fck az al\u00e1bbi m\u00f3don: $ (() => { $ ( \"#lets-play-button\" ). on ( \"click\" , () => { $ ( \"#lets-play-section, #start-game-form-section\" ). toggle (); }); }); Teh\u00e1t a gombot tartalmaz\u00f3 \u00e9s a j\u00e1t\u00e9k opci\u00f3kat tartalmaz\u00f3 szekci\u00f3kat megjelen\u00edtj\u00fck/elrejtj\u00fck. Eg\u00e9sz\u00edts\u00fck ki tov\u00e1bb\u00e1 a fenti k\u00f3dot (a megfelel\u0151 helyen) azzal, hogy a formot reprezent\u00e1l\u00f3 HTML r\u00e9szletet let\u00f6ltj\u00fck a szervert\u0151l \u00e9s a megfelel\u0151 helyre sz\u00farjuk a DOM-ban: $ . get ( \"start-game-form-contents.html\" ) . then ( html => $ ( \"#start-game-form\" ). html ( html )); BEADAND\u00d3 (2 pont) M\u00e1soljon be egy teljes k\u00e9perny\u0151s k\u00e9perny\u0151k\u00e9pet az opci\u00f3k kezdeti \u00e1llapot\u00e1r\u00f3l, ahol el van rejtve az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb! ( f1.png )","title":"J\u00e1t\u00e9k ind\u00edt\u00e1s logika"},{"location":"laborok/12-jquery/#feladat-2-szerveroldali-api-hasznalata","text":"T\u00f6lts\u00fck le a param\u00e9tereknek megfelel\u0151 elemeket a t\u00e1voli API-r\u00f3l! Ehhez szint\u00e9n a $.get f\u00fcggv\u00e9nyt tudjuk haszn\u00e1lni: // a glob\u00e1lis n\u00e9vt\u00e9rben deklar\u00e1ljuk az al\u00e1bbi v\u00e1ltoz\u00f3kat \u00e9s f\u00fcggv\u00e9nyt: let remainingQuestions , totalQuestions , currentQuestion , correctAnswerIndex ; function getNextQuestion () { } //... $ . get ( \"start-game-form-contents.html\" ). then ( html => $ ( \"#start-game-form\" ). html ( html ) . on ( \"submit\" , e => { // k\u00f6zvetlen\u00fcl a HTML besz\u00far\u00e1sa ut\u00e1n l\u00e1colhatjuk a 'submit' esem\u00e9nyre t\u00f6rt\u00e9n\u0151 feliratkoz\u00e1st e . preventDefault (); // a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9s\u00e9t meg\u00e1ll\u00edtjuk, amivel \u00fajrat\u00f6lten\u00e9 az oldalt $ ( \"#start-game-form button[type='submit']\" ). attr ( \"disabled\" , true ); // a Go! gombot letiltjuk, hogy ne lehessen \u00fajra API k\u00e9r\u00e9st ind\u00edtani, am\u00edg meg nem \u00e9rkezett a v\u00e1lasz $ . get ( \"https://opentdb.com/api.php?type=multiple&encode=base64&amount=\" + $ ( \"[name='trivia_amount']\" ). val ()). then ( data => { remainingQuestions = data . results ; console . log ( remainingQuestions ); currentQuestion = 0 ; totalQuestions = remainingQuestions . length ; $ ( \"#total-questions\" ). text ( totalQuestions ); $ ( \"#start-game-form button[type='submit']\" ). removeAttr ( \"disabled\" ); getNextQuestion (); }); })); BEADAND\u00d3 (0.5 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a konzolon l\u00e1that\u00f3 \u00e9rkezett v\u00e1laszokr\u00f3l! ( f2.png ) Legyen l\u00e1that\u00f3, hogy h\u00e1ny v\u00e1lasz \u00e9rkezett, \u00e9s ez a sz\u00e1m ne az alap\u00e9rtelmezett 10 legyen!","title":"Feladat 2 - Szerveroldali API haszn\u00e1lata"},{"location":"laborok/12-jquery/#feladat-3-onallo-difficulty-es-category","text":"K\u00e9sz\u00edtse el a marad\u00e9k k\u00e9t param\u00e9ter elk\u00fcld\u00e9s\u00e9t is a difficulty \u00e9s category relev\u00e1ns \u00e9rt\u00e9keinek megad\u00e1s\u00e1val! Haszn\u00e1lhatja a $().serializeArray() f\u00fcggv\u00e9nyt is! BEADAND\u00d3 (0.5 pont) Az \u00e9rkez\u0151 v\u00e1laszr\u00f3l a konzolon k\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet! ( f3.png )","title":"Feladat 3 (\u00d6n\u00e1ll\u00f3) - Difficulty \u00e9s Category"},{"location":"laborok/12-jquery/#feladat-4-a-jatek-menete","text":"A meg\u00e9rkezett v\u00e1lasz kezel\u00e9s\u00e9hez a megfelel\u0151 mez\u0151ket ki kell t\u00f6lten\u00fcnk a HTML dokumentumban. A getNextQuestion() f\u00fcggv\u00e9ny k\u00f3dj\u00e1nak kezdem\u00e9nye az al\u00e1bbi lehet: currentQuestion ++ ; const question = remainingQuestions . pop (); if ( question === undefined ) { // TODO: nincs t\u00f6bb k\u00e9rd\u00e9s! return ; } correctAnswerIndex = Math . floor ( Math . random () * 4 ); const answers = question . incorrect_answers . slice (); answers . splice ( correctAnswerIndex , 0 , question . correct_answer ); $ ( \".answer .correct, .answer .incorrect, #next-question\" ). hide (); A f\u00fcggv\u00e9ny tov\u00e1bbi r\u00e9sz\u00e9t az al\u00e1bbi m\u00f3don implement\u00e1lja: rejtse el az opci\u00f3s \u0171rlapot, jelen\u00edtse meg a j\u00e1t\u00e9kteret, t\u00f6ltse ki a jelenlegi j\u00e1t\u00e9k sz\u00e1ml\u00e1l\u00f3j\u00e1t, t\u00f6ltse ki a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1j\u00e1t ( atob(question.category) ), t\u00f6ltse ki a k\u00e9rd\u00e9s sz\u00f6veg\u00e9t (szint\u00e9n haszn\u00e1lja az atob() f\u00fcggv\u00e9nyt a base64 sz\u00f6veg dek\u00f3dol\u00e1s\u00e1hoz), vegye le az \u00f6sszes v\u00e1laszlehet\u0151s\u00e9gr\u0151l ( .answer ) a disabled attrib\u00fatumot (tipp: $().removeAttr() ), minden v\u00e1laszlehet\u0151s\u00e9g sz\u00f6veg\u00e9nek hely\u0151rz\u0151j\u00e9ben helyezze el a v\u00e1lasz sz\u00f6veg\u00e9t (\u00fcgyeljen r\u00e1, hogy ne t\u00f6r\u00f6lje ki a helyes/helytelen ikonokat, \u00e9s itt is haszn\u00e1lja az atob() konverzi\u00f3t)! BEADAND\u00d3 (1 pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a j\u00e1t\u00e9kt\u00e9ren megjelen\u0151 k\u00e9rd\u00e9sr\u0151l, v\u00e1laszlehet\u0151s\u00e9gekr\u0151l! ( f4.png )","title":"Feladat 4 - A j\u00e1t\u00e9k menete"},{"location":"laborok/12-jquery/#feladat-5-onallo-tovabbi-jateklogika","text":"A tanultak gyakorl\u00e1sak\u00e9pp k\u00e9sz\u00edtse el az al\u00e1bbi funkci\u00f3kat: A v\u00e1laszlehet\u0151s\u00e9gre kattintva a rendszer a v\u00e1lasz mellett tal\u00e1lhat\u00f3 pipa ikonnal jelzi, hogy helyes v\u00e1lasz \u00e9rkezett, vagy x-szel, ha helytelen. Ut\u00f3bbi esetben a helyes v\u00e1lasz mellett egy pipa is megjelenik. A feliratkoz\u00e1shoz haszn\u00e1lja az $(\".answer\").on(\"click\", e => { /* */ }) kezel\u0151t! A helyes v\u00e1laszok sz\u00e1m\u00e1t tartsa nyilv\u00e1n! Jelen\u00edtse meg a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gombot, ha a felhaszn\u00e1l\u00f3 v\u00e1laszt adott! Arra kattintva jelenjen meg a k\u00f6vetkez\u0151 k\u00e9rd\u00e9s! A j\u00e1t\u00e9k befejezt\u00e9vel, amikor elfogynak az aktu\u00e1lis k\u00e9rd\u00e9sek, jelen\u00edtse meg, h\u00e1ny pontot \u00e9rt el a felhaszn\u00e1l\u00f3 a maximumb\u00f3l! A j\u00e1t\u00e9k befejezt\u00e9vel lehessen \u00fajrat\u00f6lt\u00e9s (F5) n\u00e9lk\u00fcl \u00faj j\u00e1t\u00e9kot ind\u00edtani! Hozhat l\u00e9tre \u00faj gombot, vagy \u00e1t\u00edrhatja a k\u00f6vetkez\u0151 k\u00e9rd\u00e9sre szolg\u00e1l\u00f3 gomb sz\u00f6veg\u00e9t (ekkor viszont \u00fcgyeljen r\u00e1, hogy ezt k\u00f6vet\u0151en ne felejtse vissza\u00e1ll\u00edtani azt)! A legfelhaszn\u00e1l\u00f3bar\u00e1tabb \u00e9lm\u00e9ny\u00e9rt haszn\u00e1lhatja a Bootstrap modal megold\u00e1st is! BEADAND\u00d3 (1 pont) K\u00e9perny\u0151k\u00e9pekkel \u00e9s a relev\u00e1ns k\u00f3dr\u00e9szletekkel demonstr\u00e1lja az al\u00e1bbi eseteket: a j\u00e1t\u00e9kos helyesen v\u00e1laszolt a k\u00e9rd\u00e9sre, ( f5.1.png ) a j\u00e1t\u00e9kos helytelen\u00fcl v\u00e1laszolt a k\u00e9rd\u00e9sre, ( f5.2.png ) a v\u00e1laszad\u00e1s el\u0151tt nem, ut\u00e1na l\u00e1that\u00f3 a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gomb, ( f5.3.png ) az aktu\u00e1lis k\u00e9rd\u00e9s sz\u00e1ml\u00e1l\u00f3ja n\u00f6vekszik, ( f5.4.png ) megjelenik a felhaszn\u00e1l\u00f3 \u00e1ltal el\u00e9rt pontsz\u00e1m! ( f5.5.png )","title":"Feladat 5 (\u00d6n\u00e1ll\u00f3) - Tov\u00e1bbi j\u00e1t\u00e9klogika"},{"location":"laborok/13-js-advanced/","text":"Labor 13 - Halad\u00f3 JavaScript \u00b6 Bevezet\u00e9s \u00b6 A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben. Modern JavaScript funkci\u00f3k \u00e9s eszk\u00f6z\u00f6k \u00b6 A JavaScript nyelv napjainkban rohamosan (tal\u00e1n lassan cs\u00f6kken\u0151 \u00fctemben) fejl\u0151dik, de a b\u00f6ng\u00e9sz\u0151gy\u00e1rt\u00f3k lassan felvett\u00e9k az iramot ECMAScript szabv\u00e1nyos\u00edt\u00e1si folyamattal. A manaps\u00e1g t\u00e1mogatand\u00f3 b\u00f6ng\u00e9sz\u0151k legt\u00f6bbje szinte az \u00f6sszes ECMAScript 5 \u00e9s 6 funkci\u00f3t t\u00e1mogatja. Az Internet Explorer egy elavult, manaps\u00e1g ker\u00fclend\u0151 b\u00f6ng\u00e9sz\u0151, ami t\u00e1mogat bizonyos ES5 funkci\u00f3kat, de \u00faj funkci\u00f3friss\u00edt\u00e9seket nem kap. Kev\u00e9s \u00e9rv maradt a haszn\u00e1lata mellett, ugyanis a Microsoft Edge b\u00f6ng\u00e9sz\u0151 eset\u00e9ben is \u00e1tt\u00e9rt a Chromium motorra, ami m\u00e9g Windows 7 OS-en is el\u00e9rhet\u0151. Kir\u00edv\u00f3 eset gyakran n\u00e9h\u00e1ny kev\u00e9sb\u00e9 elterjedt mobil b\u00f6ng\u00e9sz\u0151 (pl. Opera Mini), valamint a Safari iOS \u00e9s Mac verzi\u00f3i is hagynak n\u00e9mi k\u00edv\u00e1nni val\u00f3t maguk ut\u00e1n (a k\u00fcl\u00f6nf\u00e9le JavaScript funkci\u00f3k t\u00e1mogat\u00e1sa ter\u00e9n). Ezzel azt mondhatjuk, hogy modern JavaScript alap\u00fa alkalmaz\u00e1sok fejleszt\u00e9sekor elegend\u0151 az \u00fan. \"\u00f6r\u00f6kz\u00f6ld\" b\u00f6ng\u00e9sz\u0151ket t\u00e1mogatnunk, amik naprak\u00e9szen tartj\u00e1k magukat folyamatos friss\u00edt\u00e9sekkel. Az \u00faj nyelvi funkci\u00f3k jelent\u0151s r\u00e9sze megfeleltethet\u0151 kor\u00e1bban alkalmazott programoz\u00e1si mint\u00e1knak, ez\u00e1ltal az \u00fajabb funkci\u00f3kat (\u00faj ECMAScript verzi\u00f3kban megjelen\u0151 szabv\u00e1nyos elemeket) leford\u00edthatjuk szabv\u00e1nyos kor\u00e1bbi ES verzi\u00f3ra (jellemz\u0151en ES5-re). A babel ford\u00edt\u00f3 a \"modern\" forr\u00e1sunkat k\u00e9pes \u00e1tford\u00edtani er\u0151sen kompatibilis JavaScriptt\u00e9. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g a TypeScript , ami a JavaScript nyelvre \u00e9p\u00fcl, kib\u0151v\u00edtve azt k\u00fcl\u00f6nf\u00e9le funkci\u00f3kkal, els\u0151sorban a t\u00edpusinform\u00e1ci\u00f3k rendszer\u00e9vel. Typescript A TypeScript nyelv a fenti ford\u00edt\u00e1si folyamatot annyival eg\u00e9sz\u00edti ki, hogy ford\u00edt\u00e1si id\u0151ben k\u00fcl\u00f6nf\u00e9le vizsg\u00e1latokat v\u00e9gez a k\u00f3don, \u00edgy a hib\u00e1ink ak\u00e1r m\u00e1r ford\u00edt\u00e1si id\u0151ben is kider\u00fclhetnek. Els\u0151sorban ehhez t\u00edpusvizsg\u00e1latokat \u00e9s statikus k\u00f3danal\u00edzist hajt v\u00e9gre. A VS Code az anal\u00edzist TypeScript seg\u00edts\u00e9g\u00e9vel a norm\u00e1l JavaScript f\u00e1jlokon is elv\u00e9gzi, ez\u00e9rt kapunk IntelliSense-t, s\u0151t, ez\u00e9rt jelennek meg esetenk\u00e9nt v\u00e1ltoz\u00f3k, param\u00e9terek t\u00edpusai is a seg\u00edts\u00e9gben. Fontosabb modern JS k\u00e9pess\u00e9gek: arrow function : function (param) { return param + 1; } helyett \u00edrhatjuk a r\u00f6videbb param => param + 1; k\u00f3dot. Ezen fel\u00fcl az arrow function nem rendel k\u00fcl\u00f6n \u00e9rt\u00e9ket a this v\u00e1ltoz\u00f3nak, \u00edgy a this ilyen esetekben a k\u00fcls\u0151 f\u00fcggv\u00e9nyre mutat (a f\u00fcggv\u00e9nyen bel\u00fcl ugyanaz a this , mint a h\u00edv\u00f3 f\u00e9l sz\u00e1m\u00e1ra). string interpolation : a string interpol\u00e1ci\u00f3 sablonoz\u00e1st, \"template-ez\u00e9st\" jelent, a string-ben k\u00fcl\u00f6nb\u00f6z\u0151 hely\u0151rz\u0151ket helyezhet\u00fcnk el, amelyek ki\u00e9rt\u00e9kel\u0151dnek: `Hello, I'm ${ this . getName () } !` const \u00e9s let : a var \"univerz\u00e1lis\" v\u00e1ltoz\u00f3deklar\u00e1ci\u00f3 helyett \u00e9rdemesebb haszn\u00e1lni a let \u00e9s const kulcsszavakat: el\u0151bbi v\u00e1ltoztathat \u00e9rt\u00e9ket, ut\u00f3bbi pedig nem. El\u0151ny\u00fck, hogy val\u00f3ban blokkszint\u0171ek, a var k\u00e9pes blokkok k\u00f6z\u00f6tt is \u00e9rv\u00e9nyes\u00fclni (sajnos). class : haszn\u00e1lhatjuk az objektum-orient\u00e1lt class kulcssz\u00f3t, amelyet kor\u00e1bban c\u00edmk\u00e9zetlen, k\u00f6z\u00f6ns\u00e9ges konstruktorf\u00fcggv\u00e9nyekkel pr\u00f3b\u00e1ltunk k\u00f6r\u00fcl\u00edrni: class Dog { constructor ( name ) { this . getName = () => name ; } bark () { alert ( `Hello, I'm ${ this . getName () } !` ); } } const spot = new Dog ( \"Spot\" ); spot . bark (); import / export : f\u00e1jljainkban v\u00e1ltoz\u00f3kat, oszt\u00e1lyokat deklar\u00e1lhatunk, melyeket k\u00edv\u00fclr\u0151l haszn\u00e1lhatnak (kv\u00e1zi, mint a publikus l\u00e1that\u00f3s\u00e1g), ezeket az export kulcssz\u00f3val l\u00e1tjuk el. A m\u00e1sik oldalon, ahol haszn\u00e1lni szeretn\u00e9nk a f\u00e1jlb\u00f3l egy publik\u00e1lt szimb\u00f3lumot, az import kulcssz\u00f3val tehetj\u00fck ezt meg, a f\u00e1jl el\u00e9r\u00e9si \u00fatj\u00e1t megadva: dog.js export class Dog { bark () => console . log ( `Woof! I'm ${ this . name } !` ) } barks.js import { Dog } from './dog' ; export function makeNewDogAndBark ( name ) { const dog = new Dog ( name ); dog . bark (); return dog ; } Babel n\u00e9lk\u00fcl Az itt bemutatott JavaScript funkci\u00f3k mindegyike el\u00e9rhet\u0151 m\u00e1r a b\u00f6ng\u00e9sz\u0151ben, \u00edgy haszn\u00e1lhatjuk \u0151ket babel \u00e9s webpack n\u00e9lk\u00fcl is, de erre az \u00fatmutat\u00f3 r\u00e9szletes utas\u00edt\u00e1st nem ad. Ha valaki webpack n\u00e9lk\u00fcl szeretn\u00e9 elk\u00e9sz\u00edteni a labort, \u00fagy: a ClientApp helyett k\u00f6zvetlen\u00fcl a wwwroot -ba dolgozzon, az import { X } from 'x' helyett minden\u00fctt import { X } from 'x.js' szintaxist haszn\u00e1ljon, Bootstrap belinkel\u00e9se t\u00f6rt\u00e9nhet k\u00f6zvetlen\u00fcl CDN-r\u0151l: <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"> , a kiindul\u00f3 JavaScript f\u00e1jl a belinkelt guessgame.js lesz a client-start.js helyett (az ut\u00f3bbi f\u00e1jlra nem lesz sz\u00fcks\u00e9g), a guessgame.js hivatkoz\u00e1sakor arra module -k\u00e9nt kell hivatkozni (k\u00fcl\u00f6nben az import utas\u00edt\u00e1sok nem fognak m\u0171k\u00f6dni), teh\u00e1t a kiindul\u00f3 <script> elem lecser\u00e9lend\u0151: <script src=\"guessgame.js\" type=\"module\"> . A m\u0171k\u00f6d\u00e9s ebben az esetben alapvet\u0151en m\u00e1s: a webpack seg\u00edts\u00e9g\u00e9vel az \u00f6sszes .js f\u00e1jlunkb\u00f3l egyetlen, \u00f6sszecsomagolt f\u00e1jl k\u00e9sz\u00fclne, a k\u00f6zvetlen modulbet\u00f6lt\u00e9ssel viszont minden hivatkozott .js f\u00e1jl k\u00fcl\u00f6n-k\u00fcl\u00f6n HTTP k\u00e9r\u00e9sekkel jut el a b\u00f6ng\u00e9sz\u0151be. Ez fejleszt\u00e9si id\u0151ben nem gond, de \u00e9les alkalmaz\u00e1sn\u00e1l mindenk\u00e9ppen valamif\u00e9le build folyamat, SPA CLI eszk\u00f6z vagy modulcsomagol\u00f3 haszn\u00e1lata javasolt. Feladat 1 - El\u0151k\u00e9sz\u00edt\u00e9s \u00b6 A laboron k\u00e9sz\u00edtend\u0151 alkalmaz\u00e1s egy kisebb/nagyobb bark\u00f3ba lesz. A \"g\u00e9p\" gondol egy sz\u00e1mra, majd a felhaszn\u00e1l\u00f3 dolga kital\u00e1lni a sz\u00e1mot. A tippre a v\u00e1lasz mindig \"kisebb\", \"nagyobb\" vagy \"tal\u00e1lt\". A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal a repository feladat\\ClientApp mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsokat Figyelem! El\u0151z\u0151 laborokhoz k\u00e9pest v\u00e1ltoz\u00e1s! npm install npm run start NPM cache Fontos! A laborg\u00e9peken nem vagy nem mindig \u00e9rhet\u0151 el megfelel\u0151en az NPM lok\u00e1lis cache p\u00e9ld\u00e1nya, ez\u00e9rt haszn\u00e1ljuk helyette itt az npm install --cache .cache parancsot, ami az aktu\u00e1lis mapp\u00e1ban egy .cache nev\u0171 mapp\u00e1t haszn\u00e1l a k\u00f6zponti gyors\u00edt\u00f3t\u00e1r helyett. Lok\u00e1lis g\u00e9pen is haszn\u00e1lhatjuk ezt a parancsot, de ott elegend\u0151 (kell, hogy legyen) az npm install is. Ez a .cache mappa NE KER\u00dcLJ\u00d6N commuttol\u00e1sra! Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st b\u00f6ng\u00e9sz\u0151ben! BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet az alkalmaz\u00e1s kezd\u0151k\u00e9perny\u0151j\u00e9r\u0151l! ( f1.png ) Kiindul\u00f3 bemutat\u00e1sa \u00b6 NPM \u00b6 A jelenlegi kliens alkalmaz\u00e1sunk egy node.js \u00e9s npm alap\u00fa fejleszt\u00e9si eszk\u00f6zk\u00e9szletet haszn\u00e1l, amely jelenleg a legelterjedtebb JS alap\u00fa munkafolyamat az iparban is. Ennek az alap konfigur\u00e1ci\u00f3ja (amelyet ak\u00e1r projektf\u00e1jlnak is tekinthet\u00fcnk) a package.json f\u00e1jlban tal\u00e1lhat\u00f3, amelynek a legfontosabb elemei: Projekt metaadatok: tartalmazz\u00e1k a projekt tulajdons\u00e1gait (n\u00e9v, szerz\u0151, verzi\u00f3, stb.) F\u00fcgg\u0151s\u00e9gek: kliensoldali JavaScript f\u00fcgg\u0151s\u00e9geket ( dependencies ) \u00e9s fejleszt\u00e9s idej\u0171 eszk\u00f6z\u00f6ket ( devDependencies ) defini\u00e1lhatunk az NPM csomagkezel\u0151b\u0151l, amelyeket az npm install parancs t\u00f6lt le a node_modules mapp\u00e1ba. Ebben a projektben kliens oldalon haszn\u00e1ljuk a Bootstrapet \u00e9s a jQueryt, fejleszt\u00e9s id\u0151ben pedig a Webpacket \u00e9s Babelt. Parancsok : a scripts tulajdons\u00e1gban el\u0151re defini\u00e1lt parancsokat vehet\u00fcnk fel, amelyeket az npm-en kereszt\u00fcl tudunk futtatni npm run <parancs neve> form\u00e1ban. Eset\u00fcnkben a start az \u00e9rdekes, mivel az lefuttatja a webpack ford\u00edt\u00e1si folyamat\u00e1t, majd nyit egy fejleszt\u00e9s idej\u0171 szervert adott porton (mint el\u0151z\u0151 \u00f3r\u00e1kon a http-server ) serve --port XXXX , \u00e9s megnyitja a b\u00f6ng\u00e9sz\u0151t is --open . B\u00f6ng\u00e9sz\u0151 friss\u00edt\u00e9s Az alkalmaz\u00e1s indul\u00e1s\u00e1t k\u00f6vet\u0151en ( serve m\u00f3dban), ha \u00faj JS f\u00e1jlokat hozunk l\u00e9tre \u00e9s hivatkozzuk \u0151ket, a Webpack HMR (Hot Module Replacement) ezeket a f\u00e1jlokat automatikusan friss\u00edti a b\u00f6ng\u00e9sz\u0151ben. Ett\u0151l f\u00fcggetlen\u00fcl el\u0151fordulhat, hogy a kliens oldalt \u00fajra kell ind\u00edtanunk, ekkor tov\u00e1bbra is sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151ben friss\u00edten\u00fcnk F5-tel. Webpack, babel \u00b6 A Webpack egy \"modulcsomagol\u00f3\". A JavaScript f\u00e1jljainkat \u00e9rdemes k\u00fcl\u00f6n tartani, hogy ne t\u00f6bbt\u00edzezer soros k\u00f3df\u00e1jljaink legyenek, hanem minden a saj\u00e1t hely\u00e9n legyen - mivel a b\u00f6ng\u00e9sz\u0151ben sok f\u00e1jlt let\u00f6lteni pedig m\u00e9g HTTP/2-vel sem optim\u00e1lisabb, mintha egy nagy f\u00e1jlt t\u00f6lten\u00e9nk le. Webpack seg\u00edts\u00e9g\u00e9vel t\u00f6bbek k\u00f6z\u00f6tt a JS f\u00e1jljainkat minifik\u00e1lni tudjuk, \u00f6ssze tudjuk \u0151ket csomagolni kevesebb f\u00e1jll\u00e1, valamint k\u00fcl\u00f6nf\u00e9le plusz funkci\u00f3kat tudunk pluginekkel \u00e9s bet\u00f6lt\u0151kkel az alkalmaz\u00e1sunk terjeszt\u00e9si folyamat\u00e1ba \u00e9kelni, pl. source map f\u00e1jlokat, transpilereket vagy k\u00e9p-optimaliz\u00e1l\u00f3kat haszn\u00e1lni. Manaps\u00e1g gyakorta haszn\u00e1lt funkci\u00f3ja a Hot Module Replacement (HMR) , amely b\u00e1rmif\u00e9le \u00fajraind\u00edt\u00e1s n\u00e9lk\u00fcl, amikor a forr\u00e1sf\u00e1jlunk m\u00f3dosul, \u00e9rtes\u00edti a b\u00f6ng\u00e9sz\u0151t a v\u00e1ltoz\u00e1sr\u00f3l \u00e9s azonnal az \u00faj k\u00f3d t\u00f6lt\u0151dik be (friss\u00edteni sem sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151t). Gyakran a Webpacket valamilyen magasabb szint\u0171 keretrendszer r\u00e9szek\u00e9nt (pl. Angular) haszn\u00e1ljuk, el\u0151l\u00fcnk el van fedve, de haszn\u00e1lhatjuk k\u00e9zzel is. H\u00e1tr\u00e1nya, hogy a konfigur\u00e1ci\u00f3 gyakran nagyon bonyolult, a dokument\u00e1ci\u00f3ja pedig nem a legjobb min\u0151s\u00e9g\u0171. A webpack konfigur\u00e1ci\u00f3ja a webpack.config.js f\u00e1jlban tal\u00e1lhat\u00f3, amelyben az al\u00e1bbiak ker\u00fclnek konfigur\u00e1l\u00e1sra: app bel\u00e9p\u00e9si pontja: a kliens oldali k\u00f3d a ClientApp mapp\u00e1ban lesz tal\u00e1lhat\u00f3. Az alkalmaz\u00e1s bel\u00e9p\u00e9si pontja a ClientApp/src/client-start.js f\u00e1jl. babel ford\u00edt\u00f3 a js f\u00e1jlokra HtmlWebpackPlugin annak \u00e9rdek\u00e9ben, hogy az index.html sablonozhat\u00f3 legyen, \u00edgy a f\u00fcgg\u0151s\u00e9gek behivatkoz\u00e1s\u00e1t nem nek\u00fcnk kell megtenni, mert ezt a webpack automatikusan injekt\u00e1lja. A ford\u00edt\u00e1s ut\u00e1n ez a guessgame.js n\u00e9vre hallgat, ez az \u00f6sszecsomagolt, kliens oldali JavaScript alkalmaz\u00e1sunk. jQuery plugin Feladat 2 - Modern JavaScript funkci\u00f3k \u00b6 A megold\u00e1s sor\u00e1n haszn\u00e1ljuk az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9st \u00e9s a modern JS funkci\u00f3kat! Igyekezz\u00fcnk komponens-orient\u00e1ltan gondolkodni: egy objektum komponens, ha megjelenik a fel\u00fcleten a reprezent\u00e1ci\u00f3ja , k\u00e9pes kommunik\u00e1lni m\u00e1s objektumokkal \u00e9s komponensekkel, ezen fel\u00fcl lehet \u00e1llapota (mez\u0151i, tulajdons\u00e1gai, amiket karban tart). Az alkalmaz\u00e1sunknak sz\u00fcks\u00e9ge lesz egy \"g\u00e9pre\", aki majd kigondolja a sz\u00e1mot. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most ez egy 1 \u00e9s 100 k\u00f6z\u00f6tti sz\u00e1m lesz, az \u00e9rt\u00e9k nem konfigur\u00e1lhat\u00f3. Szimul\u00e1ljuk, hogy a \"sz\u00e1m\u00edt\u00e1s\" komplex, \u00fagyhogy kis k\u00e9sleltet\u00e9st visz\u00fcnk majd abba, am\u00edg a v\u00e1laszt visszakapjuk a tipp\u00fcnkre. Az objektumaink, melyek a fel\u00fcleten is megjelennek, rendelkezni fognak egy render() f\u00fcggv\u00e9nnyel, \u00e9s lesz egy (az alkalmaz\u00e1s szempontj\u00e1b\u00f3l) glob\u00e1lis render() f\u00fcggv\u00e9ny\u00fcnk is, ami minden komponenst kirajzol azok render() f\u00fcggv\u00e9ny\u00e9nek megh\u00edv\u00e1s\u00e1val. El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el az id\u0151z\u00edt\u0151t! Az id\u0151z\u00edt\u0151 a j\u00e1t\u00e9k indul\u00e1sakor elkezdi sz\u00e1molni a kliensen az eltelt id\u0151t. M\u00e1s elemekr\u0151l nem tud, \u00f6n\u00e1ll\u00f3an m\u0171k\u00f6dni k\u00e9pes, elindulni \u00e9s meg\u00e1llni tud, el lehet t\u0151le k\u00e9rni form\u00e1zottan az eltelt id\u0151t, \u00e9s ki tudja rajzolni az eltelt id\u0151t a fel\u00fcletre. A komponens k\u00f3dja \u00edgy az al\u00e1bbi: ClientApp\\src\\timer.js export class Timer { start () { this . started = Date . now (); this . interval = setInterval (() => this . render (), 150 ); } stop () { this . stopped = Date . now (); clearInterval ( this . interval ); } clear () { this . started = this . stopped = undefined ; } getElapsedTime () { return this . started ? Math . floor ((( this . stopped ? this . stopped : Date . now ()) - this . started ) / 1000 ) : \"-\" ; } render () { document . getElementById ( \"timer\" ). innerText = this . getElapsedTime (); } } Az id\u0151z\u00edt\u0151t \u00f6nmag\u00e1ban tesztelhetj\u00fck, ehhez p\u00e9ld\u00e1nyos\u00edtjuk, elind\u00edtjuk, majd le\u00e1ll\u00edtjuk: ClientApp\\src\\client-start.js import { Timer } from './timer' ; window . addEventListener ( 'DOMContentLoaded' , () => { const timer = new Timer (); timer . start (); setTimeout (() => timer . stop (), 3000 ); }); Az id\u0151z\u00edt\u0151 persze \u00f6nmag\u00e1ban nem egy hasznos funkci\u00f3 a j\u00e1t\u00e9kban, viszont maga a j\u00e1t\u00e9k, mint komponens egy eleme. A j\u00e1t\u00e9kos is ilyen elem, r\u00f3la csak a nev\u00e9t kell tudnunk, viszont ez id\u0151vel fog csak ismertt\u00e9 v\u00e1lni sz\u00e1munkra, teh\u00e1t egy Promise objektummal tudjuk reprezent\u00e1lni. ClientApp\\src\\player.js export class Player { constructor () { this . onNameSet = new Promise (( resolve , reject ) => { document . getElementById ( 'start-form' ). addEventListener ( 'submit' , e => { e . preventDefault (); const name = document . getElementById ( 'name-input' ). value ; if ( name && name . length ) { resolve ( name ); } }); }); this . onNameSet . then ( name => { this . name = name ; this . render (); }); } render () { for ( let element of [ document . getElementById ( 'name-input' ), document . getElementById ( 'start-button' )]) element . disabled = !! ( this . name && this . name . length ); } } A Promise beteljesedik, amikor a #start-form \u0171rlapot elk\u00fcldik, \u00e9s a #name-input \u00e9rt\u00e9ke nem \u00fcres. Erre a Promise-re a j\u00e1t\u00e9kos maga is feliratkozik, \u00e9s sikeres beteljesed\u00e9s eset\u00e9n a name property-t be\u00e1ll\u00edtja mag\u00e1nak. A render() -ben megvizsg\u00e1lja, hogy van-e n\u00e9v, \u00e9s ha van, a disabled attrib\u00fatumokat megfelel\u0151en be\u00e1ll\u00edtja. Note Haszn\u00e1lhatn\u00e1nk a Promise bev\u00e1r\u00e1s\u00e1ra az await kulcssz\u00f3t is; ez viszont konstruktorban nem haszn\u00e1lhat\u00f3. L\u00e1thatjuk, hogy mindenki saj\u00e1t mag\u00e1t rendereli ki, amikor \u00e1llapotv\u00e1ltoz\u00e1st \u00e9szlel. Az eg\u00e9sz \u00f6sszek\u00f6t\u00e9s\u00e9re hozzuk l\u00e9tre a Game-et, ami mag\u00e1t a j\u00e1t\u00e9kot reprezent\u00e1lja. A Game m\u00e1r biztonsan ismer egy id\u0151z\u00edt\u0151t \u00e9s egy j\u00e1t\u00e9kost. A j\u00e1t\u00e9kos nev\u00e9nek v\u00e1ltoz\u00e1s\u00e1ra iratkozzunk fel, ez fogja elind\u00edtani a j\u00e1t\u00e9kot mag\u00e1t. A kezdeti \u00e1llapotot is ki tudja renderelni. Egy components property-ben fogjuk gy\u0171jteni az egyes komponenseinket, \u00e9s azoknak meg tudjuk h\u00edvni mindnek a render f\u00fcggv\u00e9ny\u00e9t (amennyiben a komponensnek van render f\u00fcggv\u00e9nye): ClientApp\\src\\game.js import { Player } from './player' ; import { Timer } from './timer' ; export class Game { constructor () { this . timer = new Timer (); this . player = new Player (); this . player . onNameSet . then (() => this . start ()); this . components = [ this . timer , this . player ]; this . render (); } render () { this . components . map ( c => c && typeof ( c . render ) === 'function' && c . render ()); } start () { this . timer . start (); } onGuessed ( num , guess ) { } onGuessing ( num ) { } } A j\u00e1t\u00e9kot a dokumentum bet\u00f6lt\u00e9sekor p\u00e9ld\u00e1nyos\u00edtjuk. Az onGuessed f\u00fcggv\u00e9nyt k\u00edv\u00fclr\u0151l tudj\u00e1k majd megh\u00edvni, jelezv\u00e9n, hogy egy tipp kisebb vagy nagyobb volt a \"gondolt\" sz\u00e1mn\u00e1l, esetleg tal\u00e1lt. Az onGuessing f\u00fcggv\u00e9nnyel egy tippet tudnak majd a j\u00e1t\u00e9knak k\u00fcldeni. A client-start.js tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira: ClientApp\\src\\client-start.js import { Game } from './game' ; window . addEventListener ( 'DOMContentLoaded' , () => { const game = new Game (); }); BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, ahol megadja a nev\u00e9t, \u00e9s ennek hat\u00e1s\u00e1ra az id\u0151z\u00edt\u0151 elindult, a n\u00e9v bek\u00e9r\u00e9s\u00e9re szolg\u00e1l\u00f3 input, valamint az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb pedig le vannak tiltva. ( f2.png ) Feladat 3 - J\u00e1t\u00e9klogika \u00b6 A j\u00e1t\u00e9klogik\u00e1t egy random gener\u00e1tor \u00e1ltal adott 1 \u00e9s 100 k\u00f6z\u00f6tti eg\u00e9sz sz\u00e1m, \u00e9s a tippel\u00e9sre adott kisebb/nagyobb v\u00e1lasz interf\u00e9sze adja. \u00cdrjuk meg a j\u00e1t\u00e9klogik\u00e1t a kliens oldalon! ClientApp\\src\\logic.js export class Logic { constructor ( game ) { this . game = game ; } startGame () { const secretNumber = Math . floor ((( Math . random () * 100 ) + 1 )); this . secretGuess = ( num ) => secretNumber < num ? 'less' : secretNumber > num ? 'greater' : 'correct' ; } guess ( num ) { if ( this . secretGuess && typeof ( this . secretGuess ) === 'function' ) { setTimeout (() => this . game . onGuessed ( num , this . secretGuess ( num )), 400 ); } } } A titkos sz\u00e1mot a lok\u00e1lisan, a startGame f\u00fcggv\u00e9nyben t\u00e1rolt secretNumber v\u00e1ltoz\u00f3ban t\u00e1roljuk. Ez a v\u00e1ltoz\u00f3 k\u00edv\u00fclr\u0151l nem l\u00e1that\u00f3, az egyetlen f\u00fcggv\u00e9ny, aki ismeri ezt az \u00e9rt\u00e9ket, a secretGuess . A guess \"publikus\" f\u00fcggv\u00e9nyt megh\u00edvva a logika \u00e9rtes\u00edti a j\u00e1t\u00e9kot a tipp helyess\u00e9g\u00e9r\u0151l az onGuessed f\u00fcggv\u00e9nyen kereszt\u00fcl. A v\u00e1lasz k\u00e9sleltetve \u00e9rkezik, a k\u00e9sleltet\u00e9s 400ms. A j\u00e1t\u00e9knak sz\u00fcks\u00e9ge lesz valamilyen mechanizmusra, hogy meg tudja jelen\u00edteni a helyes/helytelen tippeket. Ezt egy Guesses oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1ban fogjuk t\u00e1rolni, ami a fel\u00fcleten megjelen\u0151, tippeket tartalmaz\u00f3 t\u00e1bl\u00e1zatot fogja friss\u00edteni sz\u00fcks\u00e9g eset\u00e9n. ClientApp\\src\\guesses.js export class Guesses { constructor () { this . clear (); } addGuess ( num , value ) { if ( num && value ) { this . guesses . push ({ num , value }); this . render (); } } clear () { this . guesses = []; this . render (); } render () { for ( let tr of Array . from ( document . querySelectorAll ( '#guesses tbody tr' ))) tr . remove (); for ( let tr of ( this . guesses . map (( g , i ) => `<tr> <td> ${ i + 1 } </td> <td class='text-right'> ${ g . num } </td> <td class='bg- ${ g . value === 'correct' ? 'success' : 'danger' } '> ${ g . value === 'correct' ? '!!!' : g . value === 'less' ? '&gt;' : '&lt;' } </td> </tr>` ). reverse ())) document . querySelector ( '#guesses tbody' ). innerHTML += tr ; } } M\u00e1r csak a fel\u00fcletr\u0151l \u00e9rkez\u0151 tippet kell kezeln\u00fcnk, ehhez egy Guess oszt\u00e1lyt hozunk l\u00e9tre: ```JS title=\"ClientApp\\src\\guess.js export class Guess { constructor(game) { document.getElementById('guess-form').addEventListener('submit', e => { e.preventDefault(); const value = parseInt(document.getElementById('guess-input').value); if (!isNaN(value) && value > 0 && value <= 100) game.onGuessing(value); document.getElementById('guess-form').reset(); }); document.getElementById('guess-form').reset(); this.setEnabled(false); } setEnabled(value) { this.enabled = !!value; this.render(); } render() { for (let element of [document.getElementById('guess-input'), document.getElementById('guess-button')]) { element.disabled = !this.enabled; } if (!this.enabled) { document.getElementById('guess-input').focus(); } } } \u00d6ssze kell k\u00f6tn\u00fcnk a j\u00e1t\u00e9kot a logik\u00e1val, ill. a kor\u00e1bbi tippek t\u00e1rol\u00e1s\u00e1\u00e9rt felel\u0151s objektummal, valamint kezeln\u00fcnk kell a fel\u00fcletr\u0151l, a felhaszn\u00e1l\u00f3 r\u00e9sz\u00e9r\u0151l \u00e9rkez\u0151 tippet. Friss\u00edts\u00fck a `game.js` tartalm\u00e1t az al\u00e1bbira: js title=\"ClientApp\\src\\game.js\" import { Player } from './player'; import { Timer } from './timer'; import { Logic } from './logic'; import { Guesses } from './guesses'; import { Guess } from './guess'; export class Game { constructor() { this.timer = new Timer(); this.player = new Player(); this.logic = new Logic(this); this.guesses = new Guesses(); this.guess = new Guess(this); this.player.onNameSet.then(() => this.start()); this.components = [this.timer, this.player, this.logic, this.guesses, this.guess]; this.render(); } render() { this.components.map(c => c && typeof (c.render) === 'function' && c.render()); } start() { this.timer.start(); this.guess.setEnabled(true); this.logic.startGame(); } onGuessed(num, guess) { this.guesses.addGuess(num, guess); if (guess === 'correct') { this.guess.setEnabled(false); this.timer.stop(); } } onGuessing(num) { this.logic.guess(num); } } ``` BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet egy j\u00e1t\u00e9k v\u00e9geredm\u00e9ny\u00e9r\u0151l, ahol l\u00e1that\u00f3k a leadott tippek \u00e9s az eltelt id\u0151! ( f3.png ) Feladat 4 (\u00d6n\u00e1ll\u00f3) - Toplista \u00b6 A toplist\u00e1n kiz\u00e1r\u00f3lag a legjobb 10 eredm\u00e9nnyel rendelkez\u0151 egy\u00e9n jelenik meg. A toplista el\u0151sz\u00f6r a tippek sz\u00e1ma, majd a megtett id\u0151 alapj\u00e1n cs\u00f6kken\u0151 sorrend szerint rendezett. Megold\u00e1s A toplista perzisztens, teh\u00e1t a j\u00e1t\u00e9k indul\u00e1sakor a toplista localStorage -b\u0151l bet\u00f6lt\u0151dik, az \u00faj bejegyz\u00e9sek pedig ide perziszt\u00e1l\u00f3dnak. Ehhez a localStorage glob\u00e1lis objektum getItem(key) \u00e9s setItem(key, value) met\u00f3dusai haszn\u00e1lhat\u00f3k, a rendez\u00e9shez a t\u00f6mb sort(callback) f\u00fcggv\u00e9nye haszn\u00e1lhat\u00f3, a callback k\u00e9t elemet kap, amelyekhez egy \u00f6sszehasonl\u00edt\u00e1st kell megadnunk, ami egy sz\u00e1m\u00e9rt\u00e9kkel t\u00e9r vissza (a kisebb sz\u00e1m\u00e9rt\u00e9k\u0171 elem el\u0151r\u00e9bb lesz a list\u00e1ban). ClientApp\\src\\toplist.js export class Toplist { constructor () { this . items = JSON . parse ( localStorage . getItem ( 'toplist' ) || '[]' ); this . render (); } setItem ( name , guesses , time ) { this . items . push ({ name , guesses , time }); this . items = this . items . sort (( a , b ) => a . guesses + a . time / 1000 - ( b . guesses + b . time / 1000 )). slice ( 0 , 9 ); localStorage . setItem ( 'toplist' , JSON . stringify ( this . items )); this . render (); } render () { document . querySelector ( '#toplist tbody' ). innerHTML = this . items . map (( e , i ) => ( `<tr> <th> ${ i + 1 } </th> <td> ${ e . name } </td> <td> ${ e . guesses } </td> <td> ${ e . time } </td> </tr>` )). join ( '' ); } } A toplist\u00e1t a j\u00e1t\u00e9khoz kell k\u00f6tn\u00fcnk, \u00e9s a setItem met\u00f3dust megh\u00edvni, amikor a j\u00e1t\u00e9knak v\u00e9ge. ClientApp\\src\\game.js /* ... */ import { Toplist } from './toplist' ; export class Game { constructor () { /* ... */ this . toplist = new Toplist (); /* ... */ this . components = [ this . timer , this . player , this . logic , this . guesses , this . guess , this . toplist ]; /* ... */ } /* ... */ onGuessed ( num , guess ) { /* ... */ if ( guess === 'correct' ) { /* ... */ this . toplist . setItem ( this . player . name , this . guesses . guesses . length , this . timer . getElapsedTime ()); } } /* ... */ } BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, amelyen legal\u00e1bb 3 k\u00fcl\u00f6nb\u00f6z\u0151 eredm\u00e9ny l\u00e1that\u00f3! ( f4.png ) Feladat 5 (\u00d6n\u00e1ll\u00f3) - \u00dajrakezd\u00e9s \u00b6 A fenti gondolatmenetekhez hasonl\u00f3an k\u00e9sz\u00edtse el a j\u00e1t\u00e9k \u00fajrakezd\u00e9s\u00e9t implement\u00e1l\u00f3 logik\u00e1t! Az \u00fajrakezd\u00e9s az al\u00e1bbiakat jelenti: a j\u00e1t\u00e9k befejez\u00e9s\u00e9t k\u00f6vet\u0151en megjelenik a fel\u00fcleten egy Restart c\u00edmk\u00e9j\u0171 gomb, melyet megnyomva \u00faj j\u00e1t\u00e9k indul (ezt k\u00f6vet\u0151en ism\u00e9t elt\u0171nik), a felhaszn\u00e1l\u00f3 nev\u00e9t bek\u00e9r\u0151 \u0171rlap \u00fajb\u00f3l enged\u00e9lyezve lesz, a f\u00f3kusz ide helyez\u0151dik, a felhaszn\u00e1l\u00f3nak lehet\u0151s\u00e9ge van \u00e1t\u00edrni a nev\u00e9t \u00e9s \u00faj j\u00e1t\u00e9kot ind\u00edtani, a jobb oldali t\u00e1bl\u00e1zatban l\u00e1that\u00f3 kor\u00e1bbi tippek \u00fcr\u00fclnek. BEADAND\u00d3 (1 pont) Illesszen be k\u00e9perny\u0151k\u00e9pet a fel\u00fcleten dinamikusan elhelyezett gombr\u00f3l! ( f5.png ) Feladat 6 iMSc - Szerver oldali logika (2 iMSc pont) \u00b6 A kliens oldalon t\u00e1rolt logik\u00e1t helyezze \u00e1t a szerver oldalra a Backend mapp\u00e1ban l\u00e9v\u0151 GuessWS.sln ASP.NET Core 6-os projektbe! Projekt ind\u00edt\u00e1sa Az iMSc feladathoz telep\u00edtve kell lennie a .NET SDK legal\u00e1bb 6.0-s verzi\u00f3j\u00e1nak is a g\u00e9pre (ez Visual Studio 2022-vel is telep\u00fcl). A projekt elind\u00edt\u00e1s\u00e1hoz elegend\u0151 a megszokott Visual Studio-s Debug vagy Start without debugging funkci\u00f3t v\u00e1lasztani. Ilyenkor a backend alkalmaz\u00e1sunk elindul viszont sz\u00fcks\u00e9ge lenne a kliens r\u00e9szekre is. Ezt \u00fagy oldjuk meg jelenleg, hogy a kliens alkalmaz\u00e1s futtat\u00e1s\u00e1ra tov\u00e1bbra is sz\u00fcks\u00e9g\u00fcnk lesz (pl VS Code-ban npm start ), \u00e9s a backend a statikus f\u00e1jlok (html, js, css) kiszolg\u00e1l\u00e1s\u00e1ra \u00e1tproxyza a k\u00e9r\u00e9seket a webpack szerver fel\u00e9. Ez a Program oszt\u00e1lyban ker\u00fclt defini\u00e1l\u00e1sra: app.UseSpa(spa => { spa.UseProxyToSpaDevelopmentServer(\"http://localhost:4200\"); }); Teh\u00e1t ha backenddel teszteln\u00e9nk az alkalmaz\u00e1st az al\u00e1bbi m\u00f3don kell elj\u00e1rjunk: ind\u00edtsuk el a frontendet az el\u0151z\u0151 feladatok mint\u00e1j\u00e1ra ind\u00edtsuk el a backendet tesztelj\u00fck az alkalmaz\u00e1st a backend portj\u00e1n A szerveren fut egy WebSocket kiszolg\u00e1l\u00f3, mely b\u00e1rmilyen wss://localhost:port -on fut\u00f3 k\u00e9r\u00e9sre v\u00e1laszol (HTTP eset\u00e9n ( ws://localhost:port )). A szerverkapcsolatot az al\u00e1bbi oszt\u00e1ly reprezent\u00e1lja (a portsz\u00e1mot sz\u00fcks\u00e9ges lehet \u00e1t\u00edrnia a saj\u00e1t szerver portsz\u00e1m\u00e1ra): ClientApp\\src\\socketserver.js export class SocketServer { constructor () { this . socket = new WebSocket ( 'wss://localhost:7579/ws' ); this . open = false ; this . socket . onopen = () => { this . open = true ; this . socket . onmessage = e => { this . onRecieve ( JSON . parse ( e . data )); } }; } send ( action , name , guess ) { if ( this . open ) { const json = JSON . stringify ({ action , name , guess }); console . log ( `Sending message: ${ json } ` ) this . socket . send ( json ); } } onRecieve ( data ) { console . log ( data ); } } Warning A socket szerver URL-t sz\u00fcks\u00e9ges lehet \u00e1t\u00edrni: a portsz\u00e1mnak a szerver portsz\u00e1m\u00e1nak kell lennie (az elind\u00edtott backend konzolja ki\u00edrja, hol indul a szerver), \u00e9s http eset\u00e9n ws , https eset\u00e9n pedig wss protokollt kell (/\u00e9rdemes) haszn\u00e1lni. A szervert az al\u00e1bbi k\u00f3d mint\u00e1j\u00e1ra tudja haszn\u00e1lni: const server = new SocketServer (); setTimeout (() => { server . send ( \"setName\" , \"John Doe\" ); server . send ( \"startGame\" , \"John Doe\" ); let guess = 0 ; setInterval (() => server . send ( \"guess\" , \"John Doe\" , ++ guess ), 500 ); }, 2000 ); A szerver az al\u00e1bbi k\u00e9r\u00e9sekre figyel: startGame : j\u00e1t\u00e9k ind\u00edt\u00e1sa. setName : n\u00e9v be\u00e1ll\u00edt\u00e1sa az aktu\u00e1lis j\u00e1t\u00e9koshoz. Sz\u00fcks\u00e9ges a \"name\" param\u00e9ter megad\u00e1sa is. guess : tipp k\u00fcld\u00e9se. Sz\u00fcks\u00e9ges a guess param\u00e9ter megad\u00e1sa is. toplist : toplista lek\u00e9r\u00e9se. A szerver az al\u00e1bbiakat k\u00fcldi: a toplist\u00e1t az al\u00e1bbi JSON-form\u00e1tumban k\u00fcldi a szerver: { name, guesses, timeInSeconds } , egy tippre a szerver az \u00f6sszes klienst \u00e9rtes\u00edti, az al\u00e1bbi objektumot k\u00fcldve: { name, guess, value, timeInSeconds } . Val\u00f3s\u00edtsa meg az al\u00e1bbiakat: a szerver t\u00e1rolja a j\u00e1t\u00e9k \u00e1llapotot, nem a kliens, a szerver \u00e9rtes\u00fcl\u00e9s\u00e9re a kliensek fel vannak iratkozva, \u00e9s megosztj\u00e1k az \u00e1llapotot (t\u00f6bb b\u00f6ng\u00e9sz\u0151 ablakkal tudja demonstr\u00e1lni), a szerver t\u00e1rolja a toplist\u00e1t, a szerver k\u00fcld v\u00e1laszesem\u00e9nyeket a tippel\u00e9sre, minden feliratkoz\u00f3t \u00e9rtes\u00edt. BEADAND\u00d3 (2 iMSc pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a m\u0171k\u00f6d\u0151 funkci\u00f3r\u00f3l, ahol l\u00e1tszik a fejleszt\u0151i eszk\u00f6zt\u00e1r Network f\u00fcle is egy relev\u00e1ns websocket kommunik\u00e1ci\u00f3val! ( f6.imsc.png )","title":"Labor 13 - Halad\u00f3 JavaScript"},{"location":"laborok/13-js-advanced/#labor-13-halado-javascript","text":"","title":"Labor 13 - Halad\u00f3 JavaScript"},{"location":"laborok/13-js-advanced/#bevezetes","text":"A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben.","title":"Bevezet\u00e9s"},{"location":"laborok/13-js-advanced/#modern-javascript-funkciok-es-eszkozok","text":"A JavaScript nyelv napjainkban rohamosan (tal\u00e1n lassan cs\u00f6kken\u0151 \u00fctemben) fejl\u0151dik, de a b\u00f6ng\u00e9sz\u0151gy\u00e1rt\u00f3k lassan felvett\u00e9k az iramot ECMAScript szabv\u00e1nyos\u00edt\u00e1si folyamattal. A manaps\u00e1g t\u00e1mogatand\u00f3 b\u00f6ng\u00e9sz\u0151k legt\u00f6bbje szinte az \u00f6sszes ECMAScript 5 \u00e9s 6 funkci\u00f3t t\u00e1mogatja. Az Internet Explorer egy elavult, manaps\u00e1g ker\u00fclend\u0151 b\u00f6ng\u00e9sz\u0151, ami t\u00e1mogat bizonyos ES5 funkci\u00f3kat, de \u00faj funkci\u00f3friss\u00edt\u00e9seket nem kap. Kev\u00e9s \u00e9rv maradt a haszn\u00e1lata mellett, ugyanis a Microsoft Edge b\u00f6ng\u00e9sz\u0151 eset\u00e9ben is \u00e1tt\u00e9rt a Chromium motorra, ami m\u00e9g Windows 7 OS-en is el\u00e9rhet\u0151. Kir\u00edv\u00f3 eset gyakran n\u00e9h\u00e1ny kev\u00e9sb\u00e9 elterjedt mobil b\u00f6ng\u00e9sz\u0151 (pl. Opera Mini), valamint a Safari iOS \u00e9s Mac verzi\u00f3i is hagynak n\u00e9mi k\u00edv\u00e1nni val\u00f3t maguk ut\u00e1n (a k\u00fcl\u00f6nf\u00e9le JavaScript funkci\u00f3k t\u00e1mogat\u00e1sa ter\u00e9n). Ezzel azt mondhatjuk, hogy modern JavaScript alap\u00fa alkalmaz\u00e1sok fejleszt\u00e9sekor elegend\u0151 az \u00fan. \"\u00f6r\u00f6kz\u00f6ld\" b\u00f6ng\u00e9sz\u0151ket t\u00e1mogatnunk, amik naprak\u00e9szen tartj\u00e1k magukat folyamatos friss\u00edt\u00e9sekkel. Az \u00faj nyelvi funkci\u00f3k jelent\u0151s r\u00e9sze megfeleltethet\u0151 kor\u00e1bban alkalmazott programoz\u00e1si mint\u00e1knak, ez\u00e1ltal az \u00fajabb funkci\u00f3kat (\u00faj ECMAScript verzi\u00f3kban megjelen\u0151 szabv\u00e1nyos elemeket) leford\u00edthatjuk szabv\u00e1nyos kor\u00e1bbi ES verzi\u00f3ra (jellemz\u0151en ES5-re). A babel ford\u00edt\u00f3 a \"modern\" forr\u00e1sunkat k\u00e9pes \u00e1tford\u00edtani er\u0151sen kompatibilis JavaScriptt\u00e9. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g a TypeScript , ami a JavaScript nyelvre \u00e9p\u00fcl, kib\u0151v\u00edtve azt k\u00fcl\u00f6nf\u00e9le funkci\u00f3kkal, els\u0151sorban a t\u00edpusinform\u00e1ci\u00f3k rendszer\u00e9vel. Typescript A TypeScript nyelv a fenti ford\u00edt\u00e1si folyamatot annyival eg\u00e9sz\u00edti ki, hogy ford\u00edt\u00e1si id\u0151ben k\u00fcl\u00f6nf\u00e9le vizsg\u00e1latokat v\u00e9gez a k\u00f3don, \u00edgy a hib\u00e1ink ak\u00e1r m\u00e1r ford\u00edt\u00e1si id\u0151ben is kider\u00fclhetnek. Els\u0151sorban ehhez t\u00edpusvizsg\u00e1latokat \u00e9s statikus k\u00f3danal\u00edzist hajt v\u00e9gre. A VS Code az anal\u00edzist TypeScript seg\u00edts\u00e9g\u00e9vel a norm\u00e1l JavaScript f\u00e1jlokon is elv\u00e9gzi, ez\u00e9rt kapunk IntelliSense-t, s\u0151t, ez\u00e9rt jelennek meg esetenk\u00e9nt v\u00e1ltoz\u00f3k, param\u00e9terek t\u00edpusai is a seg\u00edts\u00e9gben. Fontosabb modern JS k\u00e9pess\u00e9gek: arrow function : function (param) { return param + 1; } helyett \u00edrhatjuk a r\u00f6videbb param => param + 1; k\u00f3dot. Ezen fel\u00fcl az arrow function nem rendel k\u00fcl\u00f6n \u00e9rt\u00e9ket a this v\u00e1ltoz\u00f3nak, \u00edgy a this ilyen esetekben a k\u00fcls\u0151 f\u00fcggv\u00e9nyre mutat (a f\u00fcggv\u00e9nyen bel\u00fcl ugyanaz a this , mint a h\u00edv\u00f3 f\u00e9l sz\u00e1m\u00e1ra). string interpolation : a string interpol\u00e1ci\u00f3 sablonoz\u00e1st, \"template-ez\u00e9st\" jelent, a string-ben k\u00fcl\u00f6nb\u00f6z\u0151 hely\u0151rz\u0151ket helyezhet\u00fcnk el, amelyek ki\u00e9rt\u00e9kel\u0151dnek: `Hello, I'm ${ this . getName () } !` const \u00e9s let : a var \"univerz\u00e1lis\" v\u00e1ltoz\u00f3deklar\u00e1ci\u00f3 helyett \u00e9rdemesebb haszn\u00e1lni a let \u00e9s const kulcsszavakat: el\u0151bbi v\u00e1ltoztathat \u00e9rt\u00e9ket, ut\u00f3bbi pedig nem. El\u0151ny\u00fck, hogy val\u00f3ban blokkszint\u0171ek, a var k\u00e9pes blokkok k\u00f6z\u00f6tt is \u00e9rv\u00e9nyes\u00fclni (sajnos). class : haszn\u00e1lhatjuk az objektum-orient\u00e1lt class kulcssz\u00f3t, amelyet kor\u00e1bban c\u00edmk\u00e9zetlen, k\u00f6z\u00f6ns\u00e9ges konstruktorf\u00fcggv\u00e9nyekkel pr\u00f3b\u00e1ltunk k\u00f6r\u00fcl\u00edrni: class Dog { constructor ( name ) { this . getName = () => name ; } bark () { alert ( `Hello, I'm ${ this . getName () } !` ); } } const spot = new Dog ( \"Spot\" ); spot . bark (); import / export : f\u00e1jljainkban v\u00e1ltoz\u00f3kat, oszt\u00e1lyokat deklar\u00e1lhatunk, melyeket k\u00edv\u00fclr\u0151l haszn\u00e1lhatnak (kv\u00e1zi, mint a publikus l\u00e1that\u00f3s\u00e1g), ezeket az export kulcssz\u00f3val l\u00e1tjuk el. A m\u00e1sik oldalon, ahol haszn\u00e1lni szeretn\u00e9nk a f\u00e1jlb\u00f3l egy publik\u00e1lt szimb\u00f3lumot, az import kulcssz\u00f3val tehetj\u00fck ezt meg, a f\u00e1jl el\u00e9r\u00e9si \u00fatj\u00e1t megadva: dog.js export class Dog { bark () => console . log ( `Woof! I'm ${ this . name } !` ) } barks.js import { Dog } from './dog' ; export function makeNewDogAndBark ( name ) { const dog = new Dog ( name ); dog . bark (); return dog ; } Babel n\u00e9lk\u00fcl Az itt bemutatott JavaScript funkci\u00f3k mindegyike el\u00e9rhet\u0151 m\u00e1r a b\u00f6ng\u00e9sz\u0151ben, \u00edgy haszn\u00e1lhatjuk \u0151ket babel \u00e9s webpack n\u00e9lk\u00fcl is, de erre az \u00fatmutat\u00f3 r\u00e9szletes utas\u00edt\u00e1st nem ad. Ha valaki webpack n\u00e9lk\u00fcl szeretn\u00e9 elk\u00e9sz\u00edteni a labort, \u00fagy: a ClientApp helyett k\u00f6zvetlen\u00fcl a wwwroot -ba dolgozzon, az import { X } from 'x' helyett minden\u00fctt import { X } from 'x.js' szintaxist haszn\u00e1ljon, Bootstrap belinkel\u00e9se t\u00f6rt\u00e9nhet k\u00f6zvetlen\u00fcl CDN-r\u0151l: <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"> , a kiindul\u00f3 JavaScript f\u00e1jl a belinkelt guessgame.js lesz a client-start.js helyett (az ut\u00f3bbi f\u00e1jlra nem lesz sz\u00fcks\u00e9g), a guessgame.js hivatkoz\u00e1sakor arra module -k\u00e9nt kell hivatkozni (k\u00fcl\u00f6nben az import utas\u00edt\u00e1sok nem fognak m\u0171k\u00f6dni), teh\u00e1t a kiindul\u00f3 <script> elem lecser\u00e9lend\u0151: <script src=\"guessgame.js\" type=\"module\"> . A m\u0171k\u00f6d\u00e9s ebben az esetben alapvet\u0151en m\u00e1s: a webpack seg\u00edts\u00e9g\u00e9vel az \u00f6sszes .js f\u00e1jlunkb\u00f3l egyetlen, \u00f6sszecsomagolt f\u00e1jl k\u00e9sz\u00fclne, a k\u00f6zvetlen modulbet\u00f6lt\u00e9ssel viszont minden hivatkozott .js f\u00e1jl k\u00fcl\u00f6n-k\u00fcl\u00f6n HTTP k\u00e9r\u00e9sekkel jut el a b\u00f6ng\u00e9sz\u0151be. Ez fejleszt\u00e9si id\u0151ben nem gond, de \u00e9les alkalmaz\u00e1sn\u00e1l mindenk\u00e9ppen valamif\u00e9le build folyamat, SPA CLI eszk\u00f6z vagy modulcsomagol\u00f3 haszn\u00e1lata javasolt.","title":"Modern JavaScript funkci\u00f3k \u00e9s eszk\u00f6z\u00f6k"},{"location":"laborok/13-js-advanced/#feladat-1-elokeszites","text":"A laboron k\u00e9sz\u00edtend\u0151 alkalmaz\u00e1s egy kisebb/nagyobb bark\u00f3ba lesz. A \"g\u00e9p\" gondol egy sz\u00e1mra, majd a felhaszn\u00e1l\u00f3 dolga kital\u00e1lni a sz\u00e1mot. A tippre a v\u00e1lasz mindig \"kisebb\", \"nagyobb\" vagy \"tal\u00e1lt\". A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github . Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat. V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki. Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt ), \u00e9s pr\u00f3b\u00e1ld \u00fajra. Hozz l\u00e9tre egy \u00faj \u00e1gat megoldas n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz. A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere. Nyissuk meg a Visual Studio Code-dal a repository feladat\\ClientApp mapp\u00e1j\u00e1t (File -> Open Folder)! Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsokat Figyelem! El\u0151z\u0151 laborokhoz k\u00e9pest v\u00e1ltoz\u00e1s! npm install npm run start NPM cache Fontos! A laborg\u00e9peken nem vagy nem mindig \u00e9rhet\u0151 el megfelel\u0151en az NPM lok\u00e1lis cache p\u00e9ld\u00e1nya, ez\u00e9rt haszn\u00e1ljuk helyette itt az npm install --cache .cache parancsot, ami az aktu\u00e1lis mapp\u00e1ban egy .cache nev\u0171 mapp\u00e1t haszn\u00e1l a k\u00f6zponti gyors\u00edt\u00f3t\u00e1r helyett. Lok\u00e1lis g\u00e9pen is haszn\u00e1lhatjuk ezt a parancsot, de ott elegend\u0151 (kell, hogy legyen) az npm install is. Ez a .cache mappa NE KER\u00dcLJ\u00d6N commuttol\u00e1sra! Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st b\u00f6ng\u00e9sz\u0151ben! BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet az alkalmaz\u00e1s kezd\u0151k\u00e9perny\u0151j\u00e9r\u0151l! ( f1.png )","title":"Feladat 1 - El\u0151k\u00e9sz\u00edt\u00e9s"},{"location":"laborok/13-js-advanced/#kiindulo-bemutatasa","text":"","title":"Kiindul\u00f3 bemutat\u00e1sa"},{"location":"laborok/13-js-advanced/#npm","text":"A jelenlegi kliens alkalmaz\u00e1sunk egy node.js \u00e9s npm alap\u00fa fejleszt\u00e9si eszk\u00f6zk\u00e9szletet haszn\u00e1l, amely jelenleg a legelterjedtebb JS alap\u00fa munkafolyamat az iparban is. Ennek az alap konfigur\u00e1ci\u00f3ja (amelyet ak\u00e1r projektf\u00e1jlnak is tekinthet\u00fcnk) a package.json f\u00e1jlban tal\u00e1lhat\u00f3, amelynek a legfontosabb elemei: Projekt metaadatok: tartalmazz\u00e1k a projekt tulajdons\u00e1gait (n\u00e9v, szerz\u0151, verzi\u00f3, stb.) F\u00fcgg\u0151s\u00e9gek: kliensoldali JavaScript f\u00fcgg\u0151s\u00e9geket ( dependencies ) \u00e9s fejleszt\u00e9s idej\u0171 eszk\u00f6z\u00f6ket ( devDependencies ) defini\u00e1lhatunk az NPM csomagkezel\u0151b\u0151l, amelyeket az npm install parancs t\u00f6lt le a node_modules mapp\u00e1ba. Ebben a projektben kliens oldalon haszn\u00e1ljuk a Bootstrapet \u00e9s a jQueryt, fejleszt\u00e9s id\u0151ben pedig a Webpacket \u00e9s Babelt. Parancsok : a scripts tulajdons\u00e1gban el\u0151re defini\u00e1lt parancsokat vehet\u00fcnk fel, amelyeket az npm-en kereszt\u00fcl tudunk futtatni npm run <parancs neve> form\u00e1ban. Eset\u00fcnkben a start az \u00e9rdekes, mivel az lefuttatja a webpack ford\u00edt\u00e1si folyamat\u00e1t, majd nyit egy fejleszt\u00e9s idej\u0171 szervert adott porton (mint el\u0151z\u0151 \u00f3r\u00e1kon a http-server ) serve --port XXXX , \u00e9s megnyitja a b\u00f6ng\u00e9sz\u0151t is --open . B\u00f6ng\u00e9sz\u0151 friss\u00edt\u00e9s Az alkalmaz\u00e1s indul\u00e1s\u00e1t k\u00f6vet\u0151en ( serve m\u00f3dban), ha \u00faj JS f\u00e1jlokat hozunk l\u00e9tre \u00e9s hivatkozzuk \u0151ket, a Webpack HMR (Hot Module Replacement) ezeket a f\u00e1jlokat automatikusan friss\u00edti a b\u00f6ng\u00e9sz\u0151ben. Ett\u0151l f\u00fcggetlen\u00fcl el\u0151fordulhat, hogy a kliens oldalt \u00fajra kell ind\u00edtanunk, ekkor tov\u00e1bbra is sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151ben friss\u00edten\u00fcnk F5-tel.","title":"NPM"},{"location":"laborok/13-js-advanced/#webpack-babel","text":"A Webpack egy \"modulcsomagol\u00f3\". A JavaScript f\u00e1jljainkat \u00e9rdemes k\u00fcl\u00f6n tartani, hogy ne t\u00f6bbt\u00edzezer soros k\u00f3df\u00e1jljaink legyenek, hanem minden a saj\u00e1t hely\u00e9n legyen - mivel a b\u00f6ng\u00e9sz\u0151ben sok f\u00e1jlt let\u00f6lteni pedig m\u00e9g HTTP/2-vel sem optim\u00e1lisabb, mintha egy nagy f\u00e1jlt t\u00f6lten\u00e9nk le. Webpack seg\u00edts\u00e9g\u00e9vel t\u00f6bbek k\u00f6z\u00f6tt a JS f\u00e1jljainkat minifik\u00e1lni tudjuk, \u00f6ssze tudjuk \u0151ket csomagolni kevesebb f\u00e1jll\u00e1, valamint k\u00fcl\u00f6nf\u00e9le plusz funkci\u00f3kat tudunk pluginekkel \u00e9s bet\u00f6lt\u0151kkel az alkalmaz\u00e1sunk terjeszt\u00e9si folyamat\u00e1ba \u00e9kelni, pl. source map f\u00e1jlokat, transpilereket vagy k\u00e9p-optimaliz\u00e1l\u00f3kat haszn\u00e1lni. Manaps\u00e1g gyakorta haszn\u00e1lt funkci\u00f3ja a Hot Module Replacement (HMR) , amely b\u00e1rmif\u00e9le \u00fajraind\u00edt\u00e1s n\u00e9lk\u00fcl, amikor a forr\u00e1sf\u00e1jlunk m\u00f3dosul, \u00e9rtes\u00edti a b\u00f6ng\u00e9sz\u0151t a v\u00e1ltoz\u00e1sr\u00f3l \u00e9s azonnal az \u00faj k\u00f3d t\u00f6lt\u0151dik be (friss\u00edteni sem sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151t). Gyakran a Webpacket valamilyen magasabb szint\u0171 keretrendszer r\u00e9szek\u00e9nt (pl. Angular) haszn\u00e1ljuk, el\u0151l\u00fcnk el van fedve, de haszn\u00e1lhatjuk k\u00e9zzel is. H\u00e1tr\u00e1nya, hogy a konfigur\u00e1ci\u00f3 gyakran nagyon bonyolult, a dokument\u00e1ci\u00f3ja pedig nem a legjobb min\u0151s\u00e9g\u0171. A webpack konfigur\u00e1ci\u00f3ja a webpack.config.js f\u00e1jlban tal\u00e1lhat\u00f3, amelyben az al\u00e1bbiak ker\u00fclnek konfigur\u00e1l\u00e1sra: app bel\u00e9p\u00e9si pontja: a kliens oldali k\u00f3d a ClientApp mapp\u00e1ban lesz tal\u00e1lhat\u00f3. Az alkalmaz\u00e1s bel\u00e9p\u00e9si pontja a ClientApp/src/client-start.js f\u00e1jl. babel ford\u00edt\u00f3 a js f\u00e1jlokra HtmlWebpackPlugin annak \u00e9rdek\u00e9ben, hogy az index.html sablonozhat\u00f3 legyen, \u00edgy a f\u00fcgg\u0151s\u00e9gek behivatkoz\u00e1s\u00e1t nem nek\u00fcnk kell megtenni, mert ezt a webpack automatikusan injekt\u00e1lja. A ford\u00edt\u00e1s ut\u00e1n ez a guessgame.js n\u00e9vre hallgat, ez az \u00f6sszecsomagolt, kliens oldali JavaScript alkalmaz\u00e1sunk. jQuery plugin","title":"Webpack, babel"},{"location":"laborok/13-js-advanced/#feladat-2-modern-javascript-funkciok","text":"A megold\u00e1s sor\u00e1n haszn\u00e1ljuk az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9st \u00e9s a modern JS funkci\u00f3kat! Igyekezz\u00fcnk komponens-orient\u00e1ltan gondolkodni: egy objektum komponens, ha megjelenik a fel\u00fcleten a reprezent\u00e1ci\u00f3ja , k\u00e9pes kommunik\u00e1lni m\u00e1s objektumokkal \u00e9s komponensekkel, ezen fel\u00fcl lehet \u00e1llapota (mez\u0151i, tulajdons\u00e1gai, amiket karban tart). Az alkalmaz\u00e1sunknak sz\u00fcks\u00e9ge lesz egy \"g\u00e9pre\", aki majd kigondolja a sz\u00e1mot. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most ez egy 1 \u00e9s 100 k\u00f6z\u00f6tti sz\u00e1m lesz, az \u00e9rt\u00e9k nem konfigur\u00e1lhat\u00f3. Szimul\u00e1ljuk, hogy a \"sz\u00e1m\u00edt\u00e1s\" komplex, \u00fagyhogy kis k\u00e9sleltet\u00e9st visz\u00fcnk majd abba, am\u00edg a v\u00e1laszt visszakapjuk a tipp\u00fcnkre. Az objektumaink, melyek a fel\u00fcleten is megjelennek, rendelkezni fognak egy render() f\u00fcggv\u00e9nnyel, \u00e9s lesz egy (az alkalmaz\u00e1s szempontj\u00e1b\u00f3l) glob\u00e1lis render() f\u00fcggv\u00e9ny\u00fcnk is, ami minden komponenst kirajzol azok render() f\u00fcggv\u00e9ny\u00e9nek megh\u00edv\u00e1s\u00e1val. El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el az id\u0151z\u00edt\u0151t! Az id\u0151z\u00edt\u0151 a j\u00e1t\u00e9k indul\u00e1sakor elkezdi sz\u00e1molni a kliensen az eltelt id\u0151t. M\u00e1s elemekr\u0151l nem tud, \u00f6n\u00e1ll\u00f3an m\u0171k\u00f6dni k\u00e9pes, elindulni \u00e9s meg\u00e1llni tud, el lehet t\u0151le k\u00e9rni form\u00e1zottan az eltelt id\u0151t, \u00e9s ki tudja rajzolni az eltelt id\u0151t a fel\u00fcletre. A komponens k\u00f3dja \u00edgy az al\u00e1bbi: ClientApp\\src\\timer.js export class Timer { start () { this . started = Date . now (); this . interval = setInterval (() => this . render (), 150 ); } stop () { this . stopped = Date . now (); clearInterval ( this . interval ); } clear () { this . started = this . stopped = undefined ; } getElapsedTime () { return this . started ? Math . floor ((( this . stopped ? this . stopped : Date . now ()) - this . started ) / 1000 ) : \"-\" ; } render () { document . getElementById ( \"timer\" ). innerText = this . getElapsedTime (); } } Az id\u0151z\u00edt\u0151t \u00f6nmag\u00e1ban tesztelhetj\u00fck, ehhez p\u00e9ld\u00e1nyos\u00edtjuk, elind\u00edtjuk, majd le\u00e1ll\u00edtjuk: ClientApp\\src\\client-start.js import { Timer } from './timer' ; window . addEventListener ( 'DOMContentLoaded' , () => { const timer = new Timer (); timer . start (); setTimeout (() => timer . stop (), 3000 ); }); Az id\u0151z\u00edt\u0151 persze \u00f6nmag\u00e1ban nem egy hasznos funkci\u00f3 a j\u00e1t\u00e9kban, viszont maga a j\u00e1t\u00e9k, mint komponens egy eleme. A j\u00e1t\u00e9kos is ilyen elem, r\u00f3la csak a nev\u00e9t kell tudnunk, viszont ez id\u0151vel fog csak ismertt\u00e9 v\u00e1lni sz\u00e1munkra, teh\u00e1t egy Promise objektummal tudjuk reprezent\u00e1lni. ClientApp\\src\\player.js export class Player { constructor () { this . onNameSet = new Promise (( resolve , reject ) => { document . getElementById ( 'start-form' ). addEventListener ( 'submit' , e => { e . preventDefault (); const name = document . getElementById ( 'name-input' ). value ; if ( name && name . length ) { resolve ( name ); } }); }); this . onNameSet . then ( name => { this . name = name ; this . render (); }); } render () { for ( let element of [ document . getElementById ( 'name-input' ), document . getElementById ( 'start-button' )]) element . disabled = !! ( this . name && this . name . length ); } } A Promise beteljesedik, amikor a #start-form \u0171rlapot elk\u00fcldik, \u00e9s a #name-input \u00e9rt\u00e9ke nem \u00fcres. Erre a Promise-re a j\u00e1t\u00e9kos maga is feliratkozik, \u00e9s sikeres beteljesed\u00e9s eset\u00e9n a name property-t be\u00e1ll\u00edtja mag\u00e1nak. A render() -ben megvizsg\u00e1lja, hogy van-e n\u00e9v, \u00e9s ha van, a disabled attrib\u00fatumokat megfelel\u0151en be\u00e1ll\u00edtja. Note Haszn\u00e1lhatn\u00e1nk a Promise bev\u00e1r\u00e1s\u00e1ra az await kulcssz\u00f3t is; ez viszont konstruktorban nem haszn\u00e1lhat\u00f3. L\u00e1thatjuk, hogy mindenki saj\u00e1t mag\u00e1t rendereli ki, amikor \u00e1llapotv\u00e1ltoz\u00e1st \u00e9szlel. Az eg\u00e9sz \u00f6sszek\u00f6t\u00e9s\u00e9re hozzuk l\u00e9tre a Game-et, ami mag\u00e1t a j\u00e1t\u00e9kot reprezent\u00e1lja. A Game m\u00e1r biztonsan ismer egy id\u0151z\u00edt\u0151t \u00e9s egy j\u00e1t\u00e9kost. A j\u00e1t\u00e9kos nev\u00e9nek v\u00e1ltoz\u00e1s\u00e1ra iratkozzunk fel, ez fogja elind\u00edtani a j\u00e1t\u00e9kot mag\u00e1t. A kezdeti \u00e1llapotot is ki tudja renderelni. Egy components property-ben fogjuk gy\u0171jteni az egyes komponenseinket, \u00e9s azoknak meg tudjuk h\u00edvni mindnek a render f\u00fcggv\u00e9ny\u00e9t (amennyiben a komponensnek van render f\u00fcggv\u00e9nye): ClientApp\\src\\game.js import { Player } from './player' ; import { Timer } from './timer' ; export class Game { constructor () { this . timer = new Timer (); this . player = new Player (); this . player . onNameSet . then (() => this . start ()); this . components = [ this . timer , this . player ]; this . render (); } render () { this . components . map ( c => c && typeof ( c . render ) === 'function' && c . render ()); } start () { this . timer . start (); } onGuessed ( num , guess ) { } onGuessing ( num ) { } } A j\u00e1t\u00e9kot a dokumentum bet\u00f6lt\u00e9sekor p\u00e9ld\u00e1nyos\u00edtjuk. Az onGuessed f\u00fcggv\u00e9nyt k\u00edv\u00fclr\u0151l tudj\u00e1k majd megh\u00edvni, jelezv\u00e9n, hogy egy tipp kisebb vagy nagyobb volt a \"gondolt\" sz\u00e1mn\u00e1l, esetleg tal\u00e1lt. Az onGuessing f\u00fcggv\u00e9nnyel egy tippet tudnak majd a j\u00e1t\u00e9knak k\u00fcldeni. A client-start.js tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira: ClientApp\\src\\client-start.js import { Game } from './game' ; window . addEventListener ( 'DOMContentLoaded' , () => { const game = new Game (); }); BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, ahol megadja a nev\u00e9t, \u00e9s ennek hat\u00e1s\u00e1ra az id\u0151z\u00edt\u0151 elindult, a n\u00e9v bek\u00e9r\u00e9s\u00e9re szolg\u00e1l\u00f3 input, valamint az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb pedig le vannak tiltva. ( f2.png )","title":"Feladat 2 - Modern JavaScript funkci\u00f3k"},{"location":"laborok/13-js-advanced/#feladat-3-jateklogika","text":"A j\u00e1t\u00e9klogik\u00e1t egy random gener\u00e1tor \u00e1ltal adott 1 \u00e9s 100 k\u00f6z\u00f6tti eg\u00e9sz sz\u00e1m, \u00e9s a tippel\u00e9sre adott kisebb/nagyobb v\u00e1lasz interf\u00e9sze adja. \u00cdrjuk meg a j\u00e1t\u00e9klogik\u00e1t a kliens oldalon! ClientApp\\src\\logic.js export class Logic { constructor ( game ) { this . game = game ; } startGame () { const secretNumber = Math . floor ((( Math . random () * 100 ) + 1 )); this . secretGuess = ( num ) => secretNumber < num ? 'less' : secretNumber > num ? 'greater' : 'correct' ; } guess ( num ) { if ( this . secretGuess && typeof ( this . secretGuess ) === 'function' ) { setTimeout (() => this . game . onGuessed ( num , this . secretGuess ( num )), 400 ); } } } A titkos sz\u00e1mot a lok\u00e1lisan, a startGame f\u00fcggv\u00e9nyben t\u00e1rolt secretNumber v\u00e1ltoz\u00f3ban t\u00e1roljuk. Ez a v\u00e1ltoz\u00f3 k\u00edv\u00fclr\u0151l nem l\u00e1that\u00f3, az egyetlen f\u00fcggv\u00e9ny, aki ismeri ezt az \u00e9rt\u00e9ket, a secretGuess . A guess \"publikus\" f\u00fcggv\u00e9nyt megh\u00edvva a logika \u00e9rtes\u00edti a j\u00e1t\u00e9kot a tipp helyess\u00e9g\u00e9r\u0151l az onGuessed f\u00fcggv\u00e9nyen kereszt\u00fcl. A v\u00e1lasz k\u00e9sleltetve \u00e9rkezik, a k\u00e9sleltet\u00e9s 400ms. A j\u00e1t\u00e9knak sz\u00fcks\u00e9ge lesz valamilyen mechanizmusra, hogy meg tudja jelen\u00edteni a helyes/helytelen tippeket. Ezt egy Guesses oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1ban fogjuk t\u00e1rolni, ami a fel\u00fcleten megjelen\u0151, tippeket tartalmaz\u00f3 t\u00e1bl\u00e1zatot fogja friss\u00edteni sz\u00fcks\u00e9g eset\u00e9n. ClientApp\\src\\guesses.js export class Guesses { constructor () { this . clear (); } addGuess ( num , value ) { if ( num && value ) { this . guesses . push ({ num , value }); this . render (); } } clear () { this . guesses = []; this . render (); } render () { for ( let tr of Array . from ( document . querySelectorAll ( '#guesses tbody tr' ))) tr . remove (); for ( let tr of ( this . guesses . map (( g , i ) => `<tr> <td> ${ i + 1 } </td> <td class='text-right'> ${ g . num } </td> <td class='bg- ${ g . value === 'correct' ? 'success' : 'danger' } '> ${ g . value === 'correct' ? '!!!' : g . value === 'less' ? '&gt;' : '&lt;' } </td> </tr>` ). reverse ())) document . querySelector ( '#guesses tbody' ). innerHTML += tr ; } } M\u00e1r csak a fel\u00fcletr\u0151l \u00e9rkez\u0151 tippet kell kezeln\u00fcnk, ehhez egy Guess oszt\u00e1lyt hozunk l\u00e9tre: ```JS title=\"ClientApp\\src\\guess.js export class Guess { constructor(game) { document.getElementById('guess-form').addEventListener('submit', e => { e.preventDefault(); const value = parseInt(document.getElementById('guess-input').value); if (!isNaN(value) && value > 0 && value <= 100) game.onGuessing(value); document.getElementById('guess-form').reset(); }); document.getElementById('guess-form').reset(); this.setEnabled(false); } setEnabled(value) { this.enabled = !!value; this.render(); } render() { for (let element of [document.getElementById('guess-input'), document.getElementById('guess-button')]) { element.disabled = !this.enabled; } if (!this.enabled) { document.getElementById('guess-input').focus(); } } } \u00d6ssze kell k\u00f6tn\u00fcnk a j\u00e1t\u00e9kot a logik\u00e1val, ill. a kor\u00e1bbi tippek t\u00e1rol\u00e1s\u00e1\u00e9rt felel\u0151s objektummal, valamint kezeln\u00fcnk kell a fel\u00fcletr\u0151l, a felhaszn\u00e1l\u00f3 r\u00e9sz\u00e9r\u0151l \u00e9rkez\u0151 tippet. Friss\u00edts\u00fck a `game.js` tartalm\u00e1t az al\u00e1bbira: js title=\"ClientApp\\src\\game.js\" import { Player } from './player'; import { Timer } from './timer'; import { Logic } from './logic'; import { Guesses } from './guesses'; import { Guess } from './guess'; export class Game { constructor() { this.timer = new Timer(); this.player = new Player(); this.logic = new Logic(this); this.guesses = new Guesses(); this.guess = new Guess(this); this.player.onNameSet.then(() => this.start()); this.components = [this.timer, this.player, this.logic, this.guesses, this.guess]; this.render(); } render() { this.components.map(c => c && typeof (c.render) === 'function' && c.render()); } start() { this.timer.start(); this.guess.setEnabled(true); this.logic.startGame(); } onGuessed(num, guess) { this.guesses.addGuess(num, guess); if (guess === 'correct') { this.guess.setEnabled(false); this.timer.stop(); } } onGuessing(num) { this.logic.guess(num); } } ``` BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet egy j\u00e1t\u00e9k v\u00e9geredm\u00e9ny\u00e9r\u0151l, ahol l\u00e1that\u00f3k a leadott tippek \u00e9s az eltelt id\u0151! ( f3.png )","title":"Feladat 3 - J\u00e1t\u00e9klogika"},{"location":"laborok/13-js-advanced/#feladat-4-onallo-toplista","text":"A toplist\u00e1n kiz\u00e1r\u00f3lag a legjobb 10 eredm\u00e9nnyel rendelkez\u0151 egy\u00e9n jelenik meg. A toplista el\u0151sz\u00f6r a tippek sz\u00e1ma, majd a megtett id\u0151 alapj\u00e1n cs\u00f6kken\u0151 sorrend szerint rendezett. Megold\u00e1s A toplista perzisztens, teh\u00e1t a j\u00e1t\u00e9k indul\u00e1sakor a toplista localStorage -b\u0151l bet\u00f6lt\u0151dik, az \u00faj bejegyz\u00e9sek pedig ide perziszt\u00e1l\u00f3dnak. Ehhez a localStorage glob\u00e1lis objektum getItem(key) \u00e9s setItem(key, value) met\u00f3dusai haszn\u00e1lhat\u00f3k, a rendez\u00e9shez a t\u00f6mb sort(callback) f\u00fcggv\u00e9nye haszn\u00e1lhat\u00f3, a callback k\u00e9t elemet kap, amelyekhez egy \u00f6sszehasonl\u00edt\u00e1st kell megadnunk, ami egy sz\u00e1m\u00e9rt\u00e9kkel t\u00e9r vissza (a kisebb sz\u00e1m\u00e9rt\u00e9k\u0171 elem el\u0151r\u00e9bb lesz a list\u00e1ban). ClientApp\\src\\toplist.js export class Toplist { constructor () { this . items = JSON . parse ( localStorage . getItem ( 'toplist' ) || '[]' ); this . render (); } setItem ( name , guesses , time ) { this . items . push ({ name , guesses , time }); this . items = this . items . sort (( a , b ) => a . guesses + a . time / 1000 - ( b . guesses + b . time / 1000 )). slice ( 0 , 9 ); localStorage . setItem ( 'toplist' , JSON . stringify ( this . items )); this . render (); } render () { document . querySelector ( '#toplist tbody' ). innerHTML = this . items . map (( e , i ) => ( `<tr> <th> ${ i + 1 } </th> <td> ${ e . name } </td> <td> ${ e . guesses } </td> <td> ${ e . time } </td> </tr>` )). join ( '' ); } } A toplist\u00e1t a j\u00e1t\u00e9khoz kell k\u00f6tn\u00fcnk, \u00e9s a setItem met\u00f3dust megh\u00edvni, amikor a j\u00e1t\u00e9knak v\u00e9ge. ClientApp\\src\\game.js /* ... */ import { Toplist } from './toplist' ; export class Game { constructor () { /* ... */ this . toplist = new Toplist (); /* ... */ this . components = [ this . timer , this . player , this . logic , this . guesses , this . guess , this . toplist ]; /* ... */ } /* ... */ onGuessed ( num , guess ) { /* ... */ if ( guess === 'correct' ) { /* ... */ this . toplist . setItem ( this . player . name , this . guesses . guesses . length , this . timer . getElapsedTime ()); } } /* ... */ } BEADAND\u00d3 (1 pont) M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, amelyen legal\u00e1bb 3 k\u00fcl\u00f6nb\u00f6z\u0151 eredm\u00e9ny l\u00e1that\u00f3! ( f4.png )","title":"Feladat 4 (\u00d6n\u00e1ll\u00f3) - Toplista"},{"location":"laborok/13-js-advanced/#feladat-5-onallo-ujrakezdes","text":"A fenti gondolatmenetekhez hasonl\u00f3an k\u00e9sz\u00edtse el a j\u00e1t\u00e9k \u00fajrakezd\u00e9s\u00e9t implement\u00e1l\u00f3 logik\u00e1t! Az \u00fajrakezd\u00e9s az al\u00e1bbiakat jelenti: a j\u00e1t\u00e9k befejez\u00e9s\u00e9t k\u00f6vet\u0151en megjelenik a fel\u00fcleten egy Restart c\u00edmk\u00e9j\u0171 gomb, melyet megnyomva \u00faj j\u00e1t\u00e9k indul (ezt k\u00f6vet\u0151en ism\u00e9t elt\u0171nik), a felhaszn\u00e1l\u00f3 nev\u00e9t bek\u00e9r\u0151 \u0171rlap \u00fajb\u00f3l enged\u00e9lyezve lesz, a f\u00f3kusz ide helyez\u0151dik, a felhaszn\u00e1l\u00f3nak lehet\u0151s\u00e9ge van \u00e1t\u00edrni a nev\u00e9t \u00e9s \u00faj j\u00e1t\u00e9kot ind\u00edtani, a jobb oldali t\u00e1bl\u00e1zatban l\u00e1that\u00f3 kor\u00e1bbi tippek \u00fcr\u00fclnek. BEADAND\u00d3 (1 pont) Illesszen be k\u00e9perny\u0151k\u00e9pet a fel\u00fcleten dinamikusan elhelyezett gombr\u00f3l! ( f5.png )","title":"Feladat 5 (\u00d6n\u00e1ll\u00f3) - \u00dajrakezd\u00e9s"},{"location":"laborok/13-js-advanced/#feladat-6-imsc-szerver-oldali-logika-2-imsc-pont","text":"A kliens oldalon t\u00e1rolt logik\u00e1t helyezze \u00e1t a szerver oldalra a Backend mapp\u00e1ban l\u00e9v\u0151 GuessWS.sln ASP.NET Core 6-os projektbe! Projekt ind\u00edt\u00e1sa Az iMSc feladathoz telep\u00edtve kell lennie a .NET SDK legal\u00e1bb 6.0-s verzi\u00f3j\u00e1nak is a g\u00e9pre (ez Visual Studio 2022-vel is telep\u00fcl). A projekt elind\u00edt\u00e1s\u00e1hoz elegend\u0151 a megszokott Visual Studio-s Debug vagy Start without debugging funkci\u00f3t v\u00e1lasztani. Ilyenkor a backend alkalmaz\u00e1sunk elindul viszont sz\u00fcks\u00e9ge lenne a kliens r\u00e9szekre is. Ezt \u00fagy oldjuk meg jelenleg, hogy a kliens alkalmaz\u00e1s futtat\u00e1s\u00e1ra tov\u00e1bbra is sz\u00fcks\u00e9g\u00fcnk lesz (pl VS Code-ban npm start ), \u00e9s a backend a statikus f\u00e1jlok (html, js, css) kiszolg\u00e1l\u00e1s\u00e1ra \u00e1tproxyza a k\u00e9r\u00e9seket a webpack szerver fel\u00e9. Ez a Program oszt\u00e1lyban ker\u00fclt defini\u00e1l\u00e1sra: app.UseSpa(spa => { spa.UseProxyToSpaDevelopmentServer(\"http://localhost:4200\"); }); Teh\u00e1t ha backenddel teszteln\u00e9nk az alkalmaz\u00e1st az al\u00e1bbi m\u00f3don kell elj\u00e1rjunk: ind\u00edtsuk el a frontendet az el\u0151z\u0151 feladatok mint\u00e1j\u00e1ra ind\u00edtsuk el a backendet tesztelj\u00fck az alkalmaz\u00e1st a backend portj\u00e1n A szerveren fut egy WebSocket kiszolg\u00e1l\u00f3, mely b\u00e1rmilyen wss://localhost:port -on fut\u00f3 k\u00e9r\u00e9sre v\u00e1laszol (HTTP eset\u00e9n ( ws://localhost:port )). A szerverkapcsolatot az al\u00e1bbi oszt\u00e1ly reprezent\u00e1lja (a portsz\u00e1mot sz\u00fcks\u00e9ges lehet \u00e1t\u00edrnia a saj\u00e1t szerver portsz\u00e1m\u00e1ra): ClientApp\\src\\socketserver.js export class SocketServer { constructor () { this . socket = new WebSocket ( 'wss://localhost:7579/ws' ); this . open = false ; this . socket . onopen = () => { this . open = true ; this . socket . onmessage = e => { this . onRecieve ( JSON . parse ( e . data )); } }; } send ( action , name , guess ) { if ( this . open ) { const json = JSON . stringify ({ action , name , guess }); console . log ( `Sending message: ${ json } ` ) this . socket . send ( json ); } } onRecieve ( data ) { console . log ( data ); } } Warning A socket szerver URL-t sz\u00fcks\u00e9ges lehet \u00e1t\u00edrni: a portsz\u00e1mnak a szerver portsz\u00e1m\u00e1nak kell lennie (az elind\u00edtott backend konzolja ki\u00edrja, hol indul a szerver), \u00e9s http eset\u00e9n ws , https eset\u00e9n pedig wss protokollt kell (/\u00e9rdemes) haszn\u00e1lni. A szervert az al\u00e1bbi k\u00f3d mint\u00e1j\u00e1ra tudja haszn\u00e1lni: const server = new SocketServer (); setTimeout (() => { server . send ( \"setName\" , \"John Doe\" ); server . send ( \"startGame\" , \"John Doe\" ); let guess = 0 ; setInterval (() => server . send ( \"guess\" , \"John Doe\" , ++ guess ), 500 ); }, 2000 ); A szerver az al\u00e1bbi k\u00e9r\u00e9sekre figyel: startGame : j\u00e1t\u00e9k ind\u00edt\u00e1sa. setName : n\u00e9v be\u00e1ll\u00edt\u00e1sa az aktu\u00e1lis j\u00e1t\u00e9koshoz. Sz\u00fcks\u00e9ges a \"name\" param\u00e9ter megad\u00e1sa is. guess : tipp k\u00fcld\u00e9se. Sz\u00fcks\u00e9ges a guess param\u00e9ter megad\u00e1sa is. toplist : toplista lek\u00e9r\u00e9se. A szerver az al\u00e1bbiakat k\u00fcldi: a toplist\u00e1t az al\u00e1bbi JSON-form\u00e1tumban k\u00fcldi a szerver: { name, guesses, timeInSeconds } , egy tippre a szerver az \u00f6sszes klienst \u00e9rtes\u00edti, az al\u00e1bbi objektumot k\u00fcldve: { name, guess, value, timeInSeconds } . Val\u00f3s\u00edtsa meg az al\u00e1bbiakat: a szerver t\u00e1rolja a j\u00e1t\u00e9k \u00e1llapotot, nem a kliens, a szerver \u00e9rtes\u00fcl\u00e9s\u00e9re a kliensek fel vannak iratkozva, \u00e9s megosztj\u00e1k az \u00e1llapotot (t\u00f6bb b\u00f6ng\u00e9sz\u0151 ablakkal tudja demonstr\u00e1lni), a szerver t\u00e1rolja a toplist\u00e1t, a szerver k\u00fcld v\u00e1laszesem\u00e9nyeket a tippel\u00e9sre, minden feliratkoz\u00f3t \u00e9rtes\u00edt. BEADAND\u00d3 (2 iMSc pont) K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a m\u0171k\u00f6d\u0151 funkci\u00f3r\u00f3l, ahol l\u00e1tszik a fejleszt\u0151i eszk\u00f6zt\u00e1r Network f\u00fcle is egy relev\u00e1ns websocket kommunik\u00e1ci\u00f3val! ( f6.imsc.png )","title":"Feladat 6 iMSc - Szerver oldali logika (2 iMSc pont)"},{"location":"tudnivalok/github/GitHub-Actions/","text":"GitHub Actions ismertet\u0151 \u00b6 A laborfeladatok ki\u00e9rt\u00e9kel\u00e9s\u00e9ben a GitHub Actions -re t\u00e1maszkodunk. Seg\u00edts\u00e9g\u00e9vel a git repository-kon m\u0171veleteket \u00e9s programokat tudunk futtatni. Ilyen m\u0171velet p\u00e9ld\u00e1ul a C# k\u00f3d leford\u00edt\u00e1sa, vagy a beadott k\u00f3d tesztel\u00e9se. A lefutott ki\u00e9rt\u00e9kel\u00e9sr\u0151l a pull request-ben fogsz \u00e9rtes\u00edt\u00e9st kapni. Ha meg szeretn\u00e9d n\u00e9zni r\u00e9szletesebben a h\u00e1tt\u00e9rben t\u00f6rt\u00e9nteket, vagy p\u00e9ld\u00e1ul az alkalmaz\u00e1s napl\u00f3kat, a GitHub fel\u00fclet\u00e9n az Actions alatt indulhatsz el. Az Actions fel\u00fclet\u00e9n un. Workflow -kat l\u00e1tsz; minden egyes ki\u00e9rt\u00e9kel\u00e9s futtat\u00e1s egy-egy elem lesz itt (teh\u00e1t historikusan is visszakereshet\u0151ek). Ezek k\u00f6z\u00fcl egyet kiv\u00e1lasztva (pl. a legfels\u0151 mindig a legutols\u00f3) l\u00e1thatod a workflow fut\u00e1s\u00e1nak r\u00e9szleteit. A fut\u00e1s napl\u00f3j\u00e1hoz a bal oldali list\u00e1ban m\u00e9g kattintani kell egyet. Jobb oldalon l\u00e1that\u00f3 a folyamat teljes napl\u00f3ja. Minden z\u00f6ld pipa egy-egy sikeres l\u00e9p\u00e9st jelent. Ezen l\u00e9p\u00e9sek nem azonosak a feladatokokkal, hanem a ki\u00e9rt\u00e9kel\u00e9s folyamat\u00e1nak l\u00e9p\u00e9sei lesznek. Ilyen l\u00e9p\u00e9s p\u00e9ld\u00e1ul a k\u00f6rnyezet el\u0151k\u00e9sz\u00edt\u00e9se, pl. a .NET SDK telep\u00edt\u00e9se (minden ki\u00e9rt\u00e9kel\u00e9s egy vadi\u00faj k\u00f6rnyezetben indul, \u00edgy mindent el\u0151 kell k\u00e9sz\u00edteni). Alapvet\u0151en a l\u00e9p\u00e9sek mindig sikeresek, akkor is, ha a megold\u00e1sodban hiba van, mert a ki\u00e9rt\u00e9kel\u00e9s erre fel van k\u00e9sz\u00edtve. Kiv\u00e9telt ez al\u00f3l csak a neptun.txt hi\u00e1nya ill. a C# k\u00f3d leford\u00edt\u00e1sa jelent. El\u0151bbi felt\u00e9tlen\u00fcl sz\u00fcks\u00e9ges, ez\u00e9rt semmilyen folyamatot nem hajtunk v\u00e9gre n\u00e9lk\u00fcle. Ut\u00f3bbi eset\u00e9ben a C# k\u00f3d ford\u00edt\u00e1sa szint\u00e9n sz\u00fcks\u00e9ges a tov\u00e1bbl\u00e9p\u00e9shez, ez\u00e9rt sikertelens\u00e9g eset\u00e9n le\u00e1ll a folyamat. N\u00e9ha el\u0151fordulhat azonban tranziens, id\u0151szakos hiba is. P\u00e9ld\u00e1ul a .NET k\u00f6rnyezet let\u00f6lt\u00e9se nem siker\u00fcl h\u00e1l\u00f3zati hiba miatt. Ilyen esetben a futtat\u00e1st k\u00e9zzel meg lehet ism\u00e9telni. Ez persze csak akkor seg\u00edt, ha t\u00e9nyleg \u00e1tmeneti hib\u00e1r\u00f3l van sz\u00f3, teh\u00e1t pl. egy C# ford\u00edt\u00e1si hib\u00e1n nem fog seg\u00edteni. (Ezt a hiba\u00fczenetb\u0151l illetve a l\u00e9p\u00e9s nev\u00e9b\u0151l tudod kider\u00edteni, vagy legal\u00e1bb is megtippelni kell\u0151 bizonyoss\u00e1ggal.) A feladat f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r az alkalmaz\u00e1s napl\u00f3kat is meg tudod n\u00e9zni itt. Pl. amikor .NET alkalmaz\u00e1st k\u00e9sz\u00edtesz, az alkalmaz\u00e1st elind\u00edtjuk, \u00e9s minden, amit napl\u00f3z, itt megtekinthet\u0151. Az al\u00e1bbi p\u00e9ld\u00e1ul egy Entity Framework-\u00f6t haszn\u00e1l\u00f3 alkalmaz\u00e1s inicializ\u00e1s\u00e1t mutatja, k\u00f6zt\u00fck p\u00e9ld\u00e1ul a kiadott SQL parancsokat is. Debuggol\u00e1s k\u00f6zben a Visual Studio Output ablak\u00e1ban is hasonl\u00f3kat l\u00e1thatsz. Ez term\u00e9szetesen nagyban f\u00fcgg a konkr\u00e9t feladatt\u00f3l.","title":"GitHub Actions ismertet\u0151"},{"location":"tudnivalok/github/GitHub-Actions/#github-actions-ismerteto","text":"A laborfeladatok ki\u00e9rt\u00e9kel\u00e9s\u00e9ben a GitHub Actions -re t\u00e1maszkodunk. Seg\u00edts\u00e9g\u00e9vel a git repository-kon m\u0171veleteket \u00e9s programokat tudunk futtatni. Ilyen m\u0171velet p\u00e9ld\u00e1ul a C# k\u00f3d leford\u00edt\u00e1sa, vagy a beadott k\u00f3d tesztel\u00e9se. A lefutott ki\u00e9rt\u00e9kel\u00e9sr\u0151l a pull request-ben fogsz \u00e9rtes\u00edt\u00e9st kapni. Ha meg szeretn\u00e9d n\u00e9zni r\u00e9szletesebben a h\u00e1tt\u00e9rben t\u00f6rt\u00e9nteket, vagy p\u00e9ld\u00e1ul az alkalmaz\u00e1s napl\u00f3kat, a GitHub fel\u00fclet\u00e9n az Actions alatt indulhatsz el. Az Actions fel\u00fclet\u00e9n un. Workflow -kat l\u00e1tsz; minden egyes ki\u00e9rt\u00e9kel\u00e9s futtat\u00e1s egy-egy elem lesz itt (teh\u00e1t historikusan is visszakereshet\u0151ek). Ezek k\u00f6z\u00fcl egyet kiv\u00e1lasztva (pl. a legfels\u0151 mindig a legutols\u00f3) l\u00e1thatod a workflow fut\u00e1s\u00e1nak r\u00e9szleteit. A fut\u00e1s napl\u00f3j\u00e1hoz a bal oldali list\u00e1ban m\u00e9g kattintani kell egyet. Jobb oldalon l\u00e1that\u00f3 a folyamat teljes napl\u00f3ja. Minden z\u00f6ld pipa egy-egy sikeres l\u00e9p\u00e9st jelent. Ezen l\u00e9p\u00e9sek nem azonosak a feladatokokkal, hanem a ki\u00e9rt\u00e9kel\u00e9s folyamat\u00e1nak l\u00e9p\u00e9sei lesznek. Ilyen l\u00e9p\u00e9s p\u00e9ld\u00e1ul a k\u00f6rnyezet el\u0151k\u00e9sz\u00edt\u00e9se, pl. a .NET SDK telep\u00edt\u00e9se (minden ki\u00e9rt\u00e9kel\u00e9s egy vadi\u00faj k\u00f6rnyezetben indul, \u00edgy mindent el\u0151 kell k\u00e9sz\u00edteni). Alapvet\u0151en a l\u00e9p\u00e9sek mindig sikeresek, akkor is, ha a megold\u00e1sodban hiba van, mert a ki\u00e9rt\u00e9kel\u00e9s erre fel van k\u00e9sz\u00edtve. Kiv\u00e9telt ez al\u00f3l csak a neptun.txt hi\u00e1nya ill. a C# k\u00f3d leford\u00edt\u00e1sa jelent. El\u0151bbi felt\u00e9tlen\u00fcl sz\u00fcks\u00e9ges, ez\u00e9rt semmilyen folyamatot nem hajtunk v\u00e9gre n\u00e9lk\u00fcle. Ut\u00f3bbi eset\u00e9ben a C# k\u00f3d ford\u00edt\u00e1sa szint\u00e9n sz\u00fcks\u00e9ges a tov\u00e1bbl\u00e9p\u00e9shez, ez\u00e9rt sikertelens\u00e9g eset\u00e9n le\u00e1ll a folyamat. N\u00e9ha el\u0151fordulhat azonban tranziens, id\u0151szakos hiba is. P\u00e9ld\u00e1ul a .NET k\u00f6rnyezet let\u00f6lt\u00e9se nem siker\u00fcl h\u00e1l\u00f3zati hiba miatt. Ilyen esetben a futtat\u00e1st k\u00e9zzel meg lehet ism\u00e9telni. Ez persze csak akkor seg\u00edt, ha t\u00e9nyleg \u00e1tmeneti hib\u00e1r\u00f3l van sz\u00f3, teh\u00e1t pl. egy C# ford\u00edt\u00e1si hib\u00e1n nem fog seg\u00edteni. (Ezt a hiba\u00fczenetb\u0151l illetve a l\u00e9p\u00e9s nev\u00e9b\u0151l tudod kider\u00edteni, vagy legal\u00e1bb is megtippelni kell\u0151 bizonyoss\u00e1ggal.) A feladat f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r az alkalmaz\u00e1s napl\u00f3kat is meg tudod n\u00e9zni itt. Pl. amikor .NET alkalmaz\u00e1st k\u00e9sz\u00edtesz, az alkalmaz\u00e1st elind\u00edtjuk, \u00e9s minden, amit napl\u00f3z, itt megtekinthet\u0151. Az al\u00e1bbi p\u00e9ld\u00e1ul egy Entity Framework-\u00f6t haszn\u00e1l\u00f3 alkalmaz\u00e1s inicializ\u00e1s\u00e1t mutatja, k\u00f6zt\u00fck p\u00e9ld\u00e1ul a kiadott SQL parancsokat is. Debuggol\u00e1s k\u00f6zben a Visual Studio Output ablak\u00e1ban is hasonl\u00f3kat l\u00e1thatsz. Ez term\u00e9szetesen nagyban f\u00fcgg a konkr\u00e9t feladatt\u00f3l.","title":"GitHub Actions ismertet\u0151"},{"location":"tudnivalok/github/GitHub-credentials/","text":"Egyetemi laborokban: GitHub bel\u00e9p\u00e9s \u00b6 Az egyetemi laborokban a g\u00e9pek megjegyzik a GitHub bel\u00e9p\u00e9si adatokat. Ezt a munka v\u00e9gezt\u00e9vel k\u00e9zzel kell t\u00f6r\u00f6lni. Nyisd meg a Credential Manager -t a Start men\u00fcb\u0151l. A Windows Credentials oldalon keresd meg a GitHubra mutat\u00f3 bejegyz\u00e9seket, \u00e9s t\u00f6r\u00f6ld \u0151ket.","title":"Egyetemi laborokban: GitHub bel\u00e9p\u00e9s"},{"location":"tudnivalok/github/GitHub-credentials/#egyetemi-laborokban-github-belepes","text":"Az egyetemi laborokban a g\u00e9pek megjegyzik a GitHub bel\u00e9p\u00e9si adatokat. Ezt a munka v\u00e9gezt\u00e9vel k\u00e9zzel kell t\u00f6r\u00f6lni. Nyisd meg a Credential Manager -t a Start men\u00fcb\u0151l. A Windows Credentials oldalon keresd meg a GitHubra mutat\u00f3 bejegyz\u00e9seket, \u00e9s t\u00f6r\u00f6ld \u0151ket.","title":"Egyetemi laborokban: GitHub bel\u00e9p\u00e9s"},{"location":"tudnivalok/github/GitHub/","text":"Feladatok bead\u00e1sa (GitHub) \u00b6 A feladatok bead\u00e1s\u00e1hoz a GitHub platformot haszn\u00e1ljuk. Minden labor bead\u00e1sa egy-egy GitHub repository-ban t\u00f6rt\u00e9nik, melyet a feladatle\u00edr\u00e1sban tal\u00e1lhat\u00f3 linken kereszt\u00fcl kapsz meg. A labor feladatainak megold\u00e1s\u00e1t ezen repository-ban kell elk\u00e9sz\u00edtened, \u00e9s ide kell felt\u00f6ltened. A k\u00e9sz megold\u00e1s bead\u00e1sa a repository-ba val\u00f3 felt\u00f6lt\u00e9s ut\u00e1n egy un. pull request form\u00e1j\u00e1ban t\u00f6rt\u00e9nik, amelyet a laborvezet\u0151dh\u00f6z rendelsz. FONTOS Az itt le\u00edrt formai el\u0151\u00edr\u00e1sok betart\u00e1sa elv\u00e1r\u00e1s. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck. R\u00f6vid\u00edtett verzi\u00f3 \u00b6 Al\u00e1bb r\u00e9szletesen bemutatjuk a bead\u00e1s menet\u00e9t. Itt egy r\u00f6vid \u00f6sszefoglal\u00f3 az \u00e1ttekint\u00e9shez, illetve a helyes bead\u00e1s ellen\u0151rz\u00e9s\u00e9hez. A munk\u00e1dat Moodle-ben tal\u00e1lhat\u00f3 GitHub Classroom megh\u00edv\u00f3 linken kereszt\u00fcl l\u00e9trehozott GitHub repository-ban kell elk\u00e9sz\u00edtsd. A megold\u00e1shoz k\u00e9sz\u00edts egy k\u00fcl\u00f6n \u00e1gat, ne a master -en dolgozz. Erre az \u00e1gra ak\u00e1rh\u00e1ny kommitot tehetsz. Mindenk\u00e9ppen pushold a megold\u00e1st. A bead\u00e1st egy pull request jelzi, amely pull request-et a laborvezet\u0151dh\u00f6z kell rendelned. Ha az eredm\u00e9nnyel vagy \u00e9rt\u00e9kel\u00e9ssel kapcsolatban k\u00e9rd\u00e9sed van, pull request kommentben k\u00e9rdezhetsz. A laborvezet\u0151 \u00e9rtes\u00edt\u00e9s\u00e9hez haszn\u00e1ld a @n\u00e9v c\u00edmz\u00e9st a komment sz\u00f6veg\u00e9ben. A munka elkezd\u00e9se: git checkout \u00b6 Regisztr\u00e1lj egy GitHub accountot, ha m\u00e9g nincs. Moodle-ben a kurzus oldal\u00e1n keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-t. Ez minden laborhoz m\u00e1s lesz, \u00fcgyelj r\u00e1, hogy a megfelel\u0151 linket haszn\u00e1ld. Ha k\u00e9ri, adj enged\u00e9lyt a GitHub Classroom alkalmaz\u00e1snak, hogy haszn\u00e1lja az account adataidat. L\u00e1tni fogsz egy oldalt, ahol elfogadhatod a feladatot (\"Accept the ... assignment\"). Kattints a gombra. V\u00e1rd meg, am\u00edg elk\u00e9sz\u00fcl a repository. A repository linkj\u00e9t itt kapod meg. Megjegyz\u00e9s A repository priv\u00e1t lesz, azaz az senki nem l\u00e1tja, csak te, \u00e9s az oktat\u00f3k. Nyisd meg a repository-t a webes fel\u00fcleten a linkre kattintva. Ezt az URL-t \u00edrd fel, vagy mentsd el. Kl\u00f3nozd le a repository-t. Ehhez sz\u00fcks\u00e9ges lesz a repository c\u00edm\u00e9re, amit a repository webes fel\u00fclet\u00e9n a Clone or download alatt tal\u00e1lsz. A git repository kezel\u00e9s\u00e9hez tetsz\u0151leges klienst haszn\u00e1lhatsz. Ha nincs kedvenced m\u00e9g, akkor legegyszer\u0171bb a GitHub Desktop . Ebben az alkalmaz\u00e1sban k\u00f6zvetlen\u00fcl tudod list\u00e1zni a repository-kat GitHub-r\u00f3l, vagy haszn\u00e1lhatod az URL-t is a kl\u00f3noz\u00e1shoz. Ha konzolt haszn\u00e1ln\u00e1l, az al\u00e1bbi parancs kl\u00f3nozza a repository-t (ha a git parancs el\u00e9rhet\u0151): git clone <repository link> Sikertelen kl\u00f3noz\u00e1s Amennyiben a bejelentkez\u00e9s sikertelen felhaszn\u00e1l\u00f3n\u00e9v/jelsz\u00f3 p\u00e1rossal a \"Clone with HTTPS\" eset\u00e9n, (r\u00e9gebb \u00f3ta haszn\u00e1lt felhaszn\u00e1l\u00f3n\u00e1l) \u00e9rdemes ellen\u0151rizni a git-en tal\u00e1lhat\u00f3 Personal Access token lej\u00e1rati d\u00e1tum\u00e1t. Jobb fels\u0151 sarokban a profilk\u00e9p melletti lefel\u00e9 mutat\u00f3 nyil > Settings > bal oldalon (legals\u00f3) Developer settings > ugyanitt Personal access tokens. Alternat\u00edv m\u00f3dszerk\u00e9nt: HTTP kl\u00f3noz\u00e1s helyett, SSH kulcs haszn\u00e1lat\u00e1hoz, angol nyelv\u0171 instrukci\u00f3k itt tal\u00e1lhat\u00f3ak. Ha siker\u00fclt a kl\u00f3noz\u00e1s, M\u00c9G NE KEZDJ EL DOLGOZNI! A megold\u00e1st ne a repository master / main \u00e1g\u00e1n k\u00e9sz\u00edtsd el. Hozz l\u00e9tre egy \u00faj \u00e1gat (branch) megoldas n\u00e9ven. GitHub Desktop-ban a Branch men\u00fcben teheted ezt meg. Ha konzolt haszn\u00e1lsz, az \u00faj \u00e1g elk\u00e9sz\u00edthet\u0151 ezzel a paranccsal: git checkout -b megoldas Ezen a megold\u00e1s \u00e1gon dolgozva k\u00e9sz\u00edtsd el a beadand\u00f3kat. Ak\u00e1rh\u00e1nyszor kommitolhatsz \u00e9s pusholhatsz. A megold\u00e1s r\u00e9sze a forr\u00e1sk\u00f3d \u00e9s a feladatokban elv\u00e1rt k\u00e9perny\u0151k\u00e9pek. Ha a feladat k\u00e9perny\u0151k\u00e9pet v\u00e1r el, akkor azt a repository gy\u00f6ker\u00e9be commitold az elv\u00e1rt n\u00e9ven. Egyetemi laborban Laborg\u00e9peken mindig ellen\u0151r\u00edzd, hogy a megfelel\u0151 n\u00e9vvel \u00e9s email c\u00edmmel kommitolsz-e. Ezt a k\u00f6vetkez\u0151 command line paranccsal tudod megtenni. git config user.name git config user.email Ha ez nem megfelel\u0151 lenne, akkor add ki az al\u00e1bbi parancsokat a git repository mapp\u00e1j\u00e1ban. Ezzel az adott repository-ra fogod be\u00e1ll\u00edtani a k\u00edv\u00e1nt nevet \u00e9s email c\u00edmet. (\u00c9rdemes olyan email c\u00edmet, megadni ami a github useretekhez van rendelve) git config user.name \"John Doe\" git config user.email \"john@doe.org\" Otthon Otthon a fentieket \u00e9rdemes lehet a glob\u00e1lisan vizsg\u00e1lni \u00e9s fel\u00fcl\u00edrni a --global kapcsol\u00f3val. GitHub Desktop-ban \u00edgy tudsz kommitolni. Mindig ellen\u0151rizd, hogy j\u00f3 \u00e1gon vagy-e. Els\u0151 alkalommal a megoldas \u00e1g csak helyben l\u00e9tezik, ez\u00e9rt publik\u00e1lni kell: Publish this branch . A tov\u00e1bbi kommitokn\u00e1l is mindig ellen\u0151rizd a megfelel\u0151 \u00e1gat. Ha egy kommit m\u00e9g nincs fel\u00f6ltve, azt a Push origin gombbal teheted meg. A kis sz\u00e1m a gombon jelzi, hogy h\u00e1ny, m\u00e9g nem pusholt kommit van. Ha konzolt haszn\u00e1lsz, akkor az al\u00e1bbi parancsokat haszn\u00e1ld (felt\u00e9ve, hogy a j\u00f3 \u00e1gon vagy): # Ellen\u0151rizd az \u00e1gat, \u00e9s hogy milyen f\u00e1jlok m\u00f3dosultak git status # Minden v\u00e1ltoztat\u00e1st el\u0151k\u00e9sz\u00edt kommitol\u00e1sra git add . # Kommit git commit -m \"f1\" # Push els\u0151 alkalommal az \u00faj \u00e1g publik\u00e1l\u00e1s\u00e1hoz git push --set-upstream origin megoldas # Push a tov\u00e1bbiakban, amikor az \u00e1g m\u00e1r nem \u00faj git push A megold\u00e1s bead\u00e1sa \u00b6 Ha v\u00e9gezt\u00e9l a megold\u00e1ssal, ellen\u0151rizd a GitHub webes fel\u00fclet\u00e9n, hogy mindent felt\u00f6lt\u00f6tt\u00e9l-e. Ehhez a webes fel\u00fcleten v\u00e1ltanod kell az \u00e1gak k\u00f6z\u00f6tt. Felt\u00f6lt\u00e9s a webes fel\u00fcleten Azt javasoljuk, hogy ne haszn\u00e1ld a GitHub f\u00e1jl felt\u00f6lt\u00e9s funkci\u00f3j\u00e1t. Ha valami hi\u00e1nyzik, a helyi git repository-ban p\u00f3told, \u00e9s kommitold majd pushold. Ha t\u00e9nyleg k\u00e9sz vagy, akkor nyiss egy pull request -et. Minek a pull request? Ez a pull request fogja \u00f6ssze a megold\u00e1sodat, \u00e9s annak \"v\u00e9geredm\u00e9ny\u00e9t\" mutatja. \u00cdgy a laborvezet\u0151nek nem az egyes kommitjaidat vagy f\u00e1jljaidat kell n\u00e9znie, hanem csak a relev\u00e1ns, v\u00e1ltozott r\u00e9szeket l\u00e1tja egyben. A pull request jelenti a feladatod bead\u00e1s\u00e1t is, \u00edgy ez a l\u00e9p\u00e9s nem hagyhat\u00f3 ki . A pull request nyit\u00e1s\u00e1hoz a GitHub webes fel\u00fclet\u00e9re kell menj. Itt, ha nem r\u00e9g pusholt\u00e1l, a GitHub fel is aj\u00e1nlja a pull request l\u00e9trehoz\u00e1s\u00e1t. A pull request -et a fenti men\u00fcben is l\u00e9trehozhatod. Fontos, hogy a megfelel\u0151 brancheket v\u00e1laszd ki: master -be megy a megoldas \u00e1g. Ha minden rendben siker\u00fclt, a men\u00fcben fent l\u00e1tod a kis \"1\" sz\u00e1mot a Pull request elem mellett, jelezve, hogy van egy nyitott pull request. DE M\u00c9G NEM V\u00c9GEZT\u00c9L! A pull request hat\u00e1s\u00e1ra le fog futni egy \u00e9rt\u00e9kel\u00e9s. Ennek eredm\u00e9ny\u00e9t a pull request alatt kommentben fogod l\u00e1tni. Ez az \u00e9rt\u00e9kel\u00e9s minden labor eset\u00e9ben m\u00e1s lesz. Egyes laborokn\u00e1l a programodat lefuttatjuk, \u00e9s el\u0151zetes pontsz\u00e1mot is kapsz. M\u00e1s laborokn\u00e1l csak \"szintaktikai ellen\u0151rz\u00e9st\" v\u00e9gz\u00fcnk. Ha a ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9vel kapcsolatban t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, mint amit itt l\u00e1tsz, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t. Ha nem vagy megel\u00e9gedve a munk\u00e1ddal, akkor m\u00e9g jav\u00edthatsz rajta. Ehhez kommitolj \u00e9s pusholj \u00fajra. Ha tov\u00e1bbra is a megfelel\u0151 \u00e1gon dolgozol, akkor a pull request \u00fajb\u00f3l le fogja futtatni a ki\u00e9rt\u00e9kel\u00e9st. Arra k\u00e9r\u00fcnk, hogy MAXIMUM 5 alkalommal futtasd le a ki\u00e9rt\u00e9kel\u00e9st! Megold\u00e1s jav\u00edt\u00e1sa ki\u00e9rt\u00e9kel\u00e9s n\u00e9lk\u00fcl Ha \u00fagy l\u00e1tod, hogy a megold\u00e1sodat m\u00e9g jav\u00edtani akarod, \u00e9s nem szeretn\u00e9d, hogy mindig lefusson az \u00e9rt\u00e9kel\u00e9s, akkor \u00e1ll\u00edtsd \u00e1t a pull request-et a webes fel\u00fcleten draft \u00e1llapotra. Ezzel az \u00e1llapottal jelzed, hogy m\u00e9g dolgozol. Kommitolj \u00e9s pusholj. Ilyenkor nem fog futni ki\u00e9rt\u00e9kel\u00e9s. Ha v\u00e9gezt\u00e9l, akkor vissza kell \u00e1ll\u00edtanod a pull request-et: menj a PR alj\u00e1ra \u00e9s kattints a \"Ready for review\" gombra. Ennek hat\u00e1s\u00e1ra vissza\u00e1ll a PR \u00e9s le fog futni az automata \u00e9rt\u00e9kel\u00e9s. Maximum 5 A maximum 5 alkalomba nem sz\u00e1moljuk bele az esetlegesen megszakadt, vagy tranziens hiba miatt sikertelen futtat\u00e1sokat. Ha viszont figyelmetlens\u00e9gb\u0151l, vagy sz\u00e1nd\u00e9kosan t\u00fall\u00e9ped az \u00f6t\u00f6t, akkor pontlevon\u00e1ssal szankcion\u00e1lunk. Arra k\u00e9r\u00fcnk, hogy bead\u00e1s el\u0151tt teszteld a megold\u00e1sod , ne a GitHub platformot \"dolgoztasd\" magad helyett! V\u00c9GEZET\u00dcL , ha k\u00e9sz vagy, a pull request -et rendeld a laborvezet\u0151dh\u00f6z . Ez a l\u00e9p\u00e9s felt\u00e9tlen\u00fcl fontos, ez jelzi a bead\u00e1st. Pull request n\u00e9lk\u00fcl Ha nincs pull request-ed, vagy nincs a laborvezet\u0151h\u00f6z rendelve, akkor \u00fagy tekintj\u00fck, hogy m\u00e9g nem vagy k\u00e9szen, \u00e9s nem adtad be a megold\u00e1st. V\u00e9gezt\u00e9l Miut\u00e1n a laborvezet\u0151h\u00f6z rendelted a pull request-et, m\u00e1r ne m\u00f3dos\u00edts semmin. A laborvezet\u0151 \u00e9rt\u00e9kelni fogja a munk\u00e1dat, \u00e9s a pull request lez\u00e1r\u00e1s\u00e1val kommentben jelzi a v\u00e9geredm\u00e9nyt. Kapott eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9s vagy reklam\u00e1ci\u00f3 \u00b6 Ha a feladatok \u00e9rt\u00e9kel\u00e9s\u00e9vel vagy az eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9st tenn\u00e9l fel, vagy reklam\u00e1ln\u00e1l, haszn\u00e1ld a Pull Request kommentel\u00e9si lehet\u0151s\u00e9g\u00e9t erre. Annak \u00e9rdek\u00e9ben, hogy a laborvezet\u0151 biztosan \u00e9rtes\u00fclj\u00f6n a k\u00e9rd\u00e9sr\u0151l haszn\u00e1ld a @n\u00e9v mention funkci\u00f3t a laborvezet\u0151d megnevez\u00e9s\u00e9hez. Err\u0151l automatikusan kapni fog egy email \u00e9rtes\u00edt\u00e9st. Reklam\u00e1ci\u00f3 csak indokl\u00e1ssal Ha nem \u00e9rtesz egyet az \u00e9rt\u00e9kel\u00e9ssel, a bizony\u00edt\u00e1s t\u00e9ged terhel, azaz al\u00e1 kell t\u00e1masztanod a reklam\u00e1ci\u00f3d (pl. annak le\u00edr\u00e1s\u00e1val, hogyan tesztelted a megold\u00e1sod, \u00e9s mi bizony\u00edtja a helyess\u00e9g\u00e9t).","title":"Feladatok bead\u00e1sa (GitHub)"},{"location":"tudnivalok/github/GitHub/#feladatok-beadasa-github","text":"A feladatok bead\u00e1s\u00e1hoz a GitHub platformot haszn\u00e1ljuk. Minden labor bead\u00e1sa egy-egy GitHub repository-ban t\u00f6rt\u00e9nik, melyet a feladatle\u00edr\u00e1sban tal\u00e1lhat\u00f3 linken kereszt\u00fcl kapsz meg. A labor feladatainak megold\u00e1s\u00e1t ezen repository-ban kell elk\u00e9sz\u00edtened, \u00e9s ide kell felt\u00f6ltened. A k\u00e9sz megold\u00e1s bead\u00e1sa a repository-ba val\u00f3 felt\u00f6lt\u00e9s ut\u00e1n egy un. pull request form\u00e1j\u00e1ban t\u00f6rt\u00e9nik, amelyet a laborvezet\u0151dh\u00f6z rendelsz. FONTOS Az itt le\u00edrt formai el\u0151\u00edr\u00e1sok betart\u00e1sa elv\u00e1r\u00e1s. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck.","title":"Feladatok bead\u00e1sa (GitHub)"},{"location":"tudnivalok/github/GitHub/#roviditett-verzio","text":"Al\u00e1bb r\u00e9szletesen bemutatjuk a bead\u00e1s menet\u00e9t. Itt egy r\u00f6vid \u00f6sszefoglal\u00f3 az \u00e1ttekint\u00e9shez, illetve a helyes bead\u00e1s ellen\u0151rz\u00e9s\u00e9hez. A munk\u00e1dat Moodle-ben tal\u00e1lhat\u00f3 GitHub Classroom megh\u00edv\u00f3 linken kereszt\u00fcl l\u00e9trehozott GitHub repository-ban kell elk\u00e9sz\u00edtsd. A megold\u00e1shoz k\u00e9sz\u00edts egy k\u00fcl\u00f6n \u00e1gat, ne a master -en dolgozz. Erre az \u00e1gra ak\u00e1rh\u00e1ny kommitot tehetsz. Mindenk\u00e9ppen pushold a megold\u00e1st. A bead\u00e1st egy pull request jelzi, amely pull request-et a laborvezet\u0151dh\u00f6z kell rendelned. Ha az eredm\u00e9nnyel vagy \u00e9rt\u00e9kel\u00e9ssel kapcsolatban k\u00e9rd\u00e9sed van, pull request kommentben k\u00e9rdezhetsz. A laborvezet\u0151 \u00e9rtes\u00edt\u00e9s\u00e9hez haszn\u00e1ld a @n\u00e9v c\u00edmz\u00e9st a komment sz\u00f6veg\u00e9ben.","title":"R\u00f6vid\u00edtett verzi\u00f3"},{"location":"tudnivalok/github/GitHub/#a-munka-elkezdese-git-checkout","text":"Regisztr\u00e1lj egy GitHub accountot, ha m\u00e9g nincs. Moodle-ben a kurzus oldal\u00e1n keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-t. Ez minden laborhoz m\u00e1s lesz, \u00fcgyelj r\u00e1, hogy a megfelel\u0151 linket haszn\u00e1ld. Ha k\u00e9ri, adj enged\u00e9lyt a GitHub Classroom alkalmaz\u00e1snak, hogy haszn\u00e1lja az account adataidat. L\u00e1tni fogsz egy oldalt, ahol elfogadhatod a feladatot (\"Accept the ... assignment\"). Kattints a gombra. V\u00e1rd meg, am\u00edg elk\u00e9sz\u00fcl a repository. A repository linkj\u00e9t itt kapod meg. Megjegyz\u00e9s A repository priv\u00e1t lesz, azaz az senki nem l\u00e1tja, csak te, \u00e9s az oktat\u00f3k. Nyisd meg a repository-t a webes fel\u00fcleten a linkre kattintva. Ezt az URL-t \u00edrd fel, vagy mentsd el. Kl\u00f3nozd le a repository-t. Ehhez sz\u00fcks\u00e9ges lesz a repository c\u00edm\u00e9re, amit a repository webes fel\u00fclet\u00e9n a Clone or download alatt tal\u00e1lsz. A git repository kezel\u00e9s\u00e9hez tetsz\u0151leges klienst haszn\u00e1lhatsz. Ha nincs kedvenced m\u00e9g, akkor legegyszer\u0171bb a GitHub Desktop . Ebben az alkalmaz\u00e1sban k\u00f6zvetlen\u00fcl tudod list\u00e1zni a repository-kat GitHub-r\u00f3l, vagy haszn\u00e1lhatod az URL-t is a kl\u00f3noz\u00e1shoz. Ha konzolt haszn\u00e1ln\u00e1l, az al\u00e1bbi parancs kl\u00f3nozza a repository-t (ha a git parancs el\u00e9rhet\u0151): git clone <repository link> Sikertelen kl\u00f3noz\u00e1s Amennyiben a bejelentkez\u00e9s sikertelen felhaszn\u00e1l\u00f3n\u00e9v/jelsz\u00f3 p\u00e1rossal a \"Clone with HTTPS\" eset\u00e9n, (r\u00e9gebb \u00f3ta haszn\u00e1lt felhaszn\u00e1l\u00f3n\u00e1l) \u00e9rdemes ellen\u0151rizni a git-en tal\u00e1lhat\u00f3 Personal Access token lej\u00e1rati d\u00e1tum\u00e1t. Jobb fels\u0151 sarokban a profilk\u00e9p melletti lefel\u00e9 mutat\u00f3 nyil > Settings > bal oldalon (legals\u00f3) Developer settings > ugyanitt Personal access tokens. Alternat\u00edv m\u00f3dszerk\u00e9nt: HTTP kl\u00f3noz\u00e1s helyett, SSH kulcs haszn\u00e1lat\u00e1hoz, angol nyelv\u0171 instrukci\u00f3k itt tal\u00e1lhat\u00f3ak. Ha siker\u00fclt a kl\u00f3noz\u00e1s, M\u00c9G NE KEZDJ EL DOLGOZNI! A megold\u00e1st ne a repository master / main \u00e1g\u00e1n k\u00e9sz\u00edtsd el. Hozz l\u00e9tre egy \u00faj \u00e1gat (branch) megoldas n\u00e9ven. GitHub Desktop-ban a Branch men\u00fcben teheted ezt meg. Ha konzolt haszn\u00e1lsz, az \u00faj \u00e1g elk\u00e9sz\u00edthet\u0151 ezzel a paranccsal: git checkout -b megoldas Ezen a megold\u00e1s \u00e1gon dolgozva k\u00e9sz\u00edtsd el a beadand\u00f3kat. Ak\u00e1rh\u00e1nyszor kommitolhatsz \u00e9s pusholhatsz. A megold\u00e1s r\u00e9sze a forr\u00e1sk\u00f3d \u00e9s a feladatokban elv\u00e1rt k\u00e9perny\u0151k\u00e9pek. Ha a feladat k\u00e9perny\u0151k\u00e9pet v\u00e1r el, akkor azt a repository gy\u00f6ker\u00e9be commitold az elv\u00e1rt n\u00e9ven. Egyetemi laborban Laborg\u00e9peken mindig ellen\u0151r\u00edzd, hogy a megfelel\u0151 n\u00e9vvel \u00e9s email c\u00edmmel kommitolsz-e. Ezt a k\u00f6vetkez\u0151 command line paranccsal tudod megtenni. git config user.name git config user.email Ha ez nem megfelel\u0151 lenne, akkor add ki az al\u00e1bbi parancsokat a git repository mapp\u00e1j\u00e1ban. Ezzel az adott repository-ra fogod be\u00e1ll\u00edtani a k\u00edv\u00e1nt nevet \u00e9s email c\u00edmet. (\u00c9rdemes olyan email c\u00edmet, megadni ami a github useretekhez van rendelve) git config user.name \"John Doe\" git config user.email \"john@doe.org\" Otthon Otthon a fentieket \u00e9rdemes lehet a glob\u00e1lisan vizsg\u00e1lni \u00e9s fel\u00fcl\u00edrni a --global kapcsol\u00f3val. GitHub Desktop-ban \u00edgy tudsz kommitolni. Mindig ellen\u0151rizd, hogy j\u00f3 \u00e1gon vagy-e. Els\u0151 alkalommal a megoldas \u00e1g csak helyben l\u00e9tezik, ez\u00e9rt publik\u00e1lni kell: Publish this branch . A tov\u00e1bbi kommitokn\u00e1l is mindig ellen\u0151rizd a megfelel\u0151 \u00e1gat. Ha egy kommit m\u00e9g nincs fel\u00f6ltve, azt a Push origin gombbal teheted meg. A kis sz\u00e1m a gombon jelzi, hogy h\u00e1ny, m\u00e9g nem pusholt kommit van. Ha konzolt haszn\u00e1lsz, akkor az al\u00e1bbi parancsokat haszn\u00e1ld (felt\u00e9ve, hogy a j\u00f3 \u00e1gon vagy): # Ellen\u0151rizd az \u00e1gat, \u00e9s hogy milyen f\u00e1jlok m\u00f3dosultak git status # Minden v\u00e1ltoztat\u00e1st el\u0151k\u00e9sz\u00edt kommitol\u00e1sra git add . # Kommit git commit -m \"f1\" # Push els\u0151 alkalommal az \u00faj \u00e1g publik\u00e1l\u00e1s\u00e1hoz git push --set-upstream origin megoldas # Push a tov\u00e1bbiakban, amikor az \u00e1g m\u00e1r nem \u00faj git push","title":"A munka elkezd\u00e9se: git checkout"},{"location":"tudnivalok/github/GitHub/#a-megoldas-beadasa","text":"Ha v\u00e9gezt\u00e9l a megold\u00e1ssal, ellen\u0151rizd a GitHub webes fel\u00fclet\u00e9n, hogy mindent felt\u00f6lt\u00f6tt\u00e9l-e. Ehhez a webes fel\u00fcleten v\u00e1ltanod kell az \u00e1gak k\u00f6z\u00f6tt. Felt\u00f6lt\u00e9s a webes fel\u00fcleten Azt javasoljuk, hogy ne haszn\u00e1ld a GitHub f\u00e1jl felt\u00f6lt\u00e9s funkci\u00f3j\u00e1t. Ha valami hi\u00e1nyzik, a helyi git repository-ban p\u00f3told, \u00e9s kommitold majd pushold. Ha t\u00e9nyleg k\u00e9sz vagy, akkor nyiss egy pull request -et. Minek a pull request? Ez a pull request fogja \u00f6ssze a megold\u00e1sodat, \u00e9s annak \"v\u00e9geredm\u00e9ny\u00e9t\" mutatja. \u00cdgy a laborvezet\u0151nek nem az egyes kommitjaidat vagy f\u00e1jljaidat kell n\u00e9znie, hanem csak a relev\u00e1ns, v\u00e1ltozott r\u00e9szeket l\u00e1tja egyben. A pull request jelenti a feladatod bead\u00e1s\u00e1t is, \u00edgy ez a l\u00e9p\u00e9s nem hagyhat\u00f3 ki . A pull request nyit\u00e1s\u00e1hoz a GitHub webes fel\u00fclet\u00e9re kell menj. Itt, ha nem r\u00e9g pusholt\u00e1l, a GitHub fel is aj\u00e1nlja a pull request l\u00e9trehoz\u00e1s\u00e1t. A pull request -et a fenti men\u00fcben is l\u00e9trehozhatod. Fontos, hogy a megfelel\u0151 brancheket v\u00e1laszd ki: master -be megy a megoldas \u00e1g. Ha minden rendben siker\u00fclt, a men\u00fcben fent l\u00e1tod a kis \"1\" sz\u00e1mot a Pull request elem mellett, jelezve, hogy van egy nyitott pull request. DE M\u00c9G NEM V\u00c9GEZT\u00c9L! A pull request hat\u00e1s\u00e1ra le fog futni egy \u00e9rt\u00e9kel\u00e9s. Ennek eredm\u00e9ny\u00e9t a pull request alatt kommentben fogod l\u00e1tni. Ez az \u00e9rt\u00e9kel\u00e9s minden labor eset\u00e9ben m\u00e1s lesz. Egyes laborokn\u00e1l a programodat lefuttatjuk, \u00e9s el\u0151zetes pontsz\u00e1mot is kapsz. M\u00e1s laborokn\u00e1l csak \"szintaktikai ellen\u0151rz\u00e9st\" v\u00e9gz\u00fcnk. Ha a ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9vel kapcsolatban t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, mint amit itt l\u00e1tsz, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t. Ha nem vagy megel\u00e9gedve a munk\u00e1ddal, akkor m\u00e9g jav\u00edthatsz rajta. Ehhez kommitolj \u00e9s pusholj \u00fajra. Ha tov\u00e1bbra is a megfelel\u0151 \u00e1gon dolgozol, akkor a pull request \u00fajb\u00f3l le fogja futtatni a ki\u00e9rt\u00e9kel\u00e9st. Arra k\u00e9r\u00fcnk, hogy MAXIMUM 5 alkalommal futtasd le a ki\u00e9rt\u00e9kel\u00e9st! Megold\u00e1s jav\u00edt\u00e1sa ki\u00e9rt\u00e9kel\u00e9s n\u00e9lk\u00fcl Ha \u00fagy l\u00e1tod, hogy a megold\u00e1sodat m\u00e9g jav\u00edtani akarod, \u00e9s nem szeretn\u00e9d, hogy mindig lefusson az \u00e9rt\u00e9kel\u00e9s, akkor \u00e1ll\u00edtsd \u00e1t a pull request-et a webes fel\u00fcleten draft \u00e1llapotra. Ezzel az \u00e1llapottal jelzed, hogy m\u00e9g dolgozol. Kommitolj \u00e9s pusholj. Ilyenkor nem fog futni ki\u00e9rt\u00e9kel\u00e9s. Ha v\u00e9gezt\u00e9l, akkor vissza kell \u00e1ll\u00edtanod a pull request-et: menj a PR alj\u00e1ra \u00e9s kattints a \"Ready for review\" gombra. Ennek hat\u00e1s\u00e1ra vissza\u00e1ll a PR \u00e9s le fog futni az automata \u00e9rt\u00e9kel\u00e9s. Maximum 5 A maximum 5 alkalomba nem sz\u00e1moljuk bele az esetlegesen megszakadt, vagy tranziens hiba miatt sikertelen futtat\u00e1sokat. Ha viszont figyelmetlens\u00e9gb\u0151l, vagy sz\u00e1nd\u00e9kosan t\u00fall\u00e9ped az \u00f6t\u00f6t, akkor pontlevon\u00e1ssal szankcion\u00e1lunk. Arra k\u00e9r\u00fcnk, hogy bead\u00e1s el\u0151tt teszteld a megold\u00e1sod , ne a GitHub platformot \"dolgoztasd\" magad helyett! V\u00c9GEZET\u00dcL , ha k\u00e9sz vagy, a pull request -et rendeld a laborvezet\u0151dh\u00f6z . Ez a l\u00e9p\u00e9s felt\u00e9tlen\u00fcl fontos, ez jelzi a bead\u00e1st. Pull request n\u00e9lk\u00fcl Ha nincs pull request-ed, vagy nincs a laborvezet\u0151h\u00f6z rendelve, akkor \u00fagy tekintj\u00fck, hogy m\u00e9g nem vagy k\u00e9szen, \u00e9s nem adtad be a megold\u00e1st. V\u00e9gezt\u00e9l Miut\u00e1n a laborvezet\u0151h\u00f6z rendelted a pull request-et, m\u00e1r ne m\u00f3dos\u00edts semmin. A laborvezet\u0151 \u00e9rt\u00e9kelni fogja a munk\u00e1dat, \u00e9s a pull request lez\u00e1r\u00e1s\u00e1val kommentben jelzi a v\u00e9geredm\u00e9nyt.","title":"A megold\u00e1s bead\u00e1sa"},{"location":"tudnivalok/github/GitHub/#kapott-eredmennyel-kapcsolatban-kerdes-vagy-reklamacio","text":"Ha a feladatok \u00e9rt\u00e9kel\u00e9s\u00e9vel vagy az eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9st tenn\u00e9l fel, vagy reklam\u00e1ln\u00e1l, haszn\u00e1ld a Pull Request kommentel\u00e9si lehet\u0151s\u00e9g\u00e9t erre. Annak \u00e9rdek\u00e9ben, hogy a laborvezet\u0151 biztosan \u00e9rtes\u00fclj\u00f6n a k\u00e9rd\u00e9sr\u0151l haszn\u00e1ld a @n\u00e9v mention funkci\u00f3t a laborvezet\u0151d megnevez\u00e9s\u00e9hez. Err\u0151l automatikusan kapni fog egy email \u00e9rtes\u00edt\u00e9st. Reklam\u00e1ci\u00f3 csak indokl\u00e1ssal Ha nem \u00e9rtesz egyet az \u00e9rt\u00e9kel\u00e9ssel, a bizony\u00edt\u00e1s t\u00e9ged terhel, azaz al\u00e1 kell t\u00e1masztanod a reklam\u00e1ci\u00f3d (pl. annak le\u00edr\u00e1s\u00e1val, hogyan tesztelted a megold\u00e1sod, \u00e9s mi bizony\u00edtja a helyess\u00e9g\u00e9t).","title":"Kapott eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9s vagy reklam\u00e1ci\u00f3"},{"location":"tudnivalok/laborvezetoknek/","text":"Laborvezet\u0151knek \u00b6 Webes Laborvezet\u0151/demonstr\u00e1tor lenn\u00e9l? Az al\u00e1bbiakat \u00e9rdemes tudnod. Laborvezet\u0151 feladatai \u00b6 A laborvezet\u0151 a t\u00e1rgy oktat\u00e1s\u00e1ban seg\u00edt a webes laborok megtart\u00e1sa \u00e9s a sz\u00e1monk\u00e9r\u00e9sek sor\u00e1n. A feladat 2022 \u0151sszel az al\u00e1bbiakb\u00f3l \u00e1ll. F\u00e9l\u00e9v sor\u00e1n \u00f6sszesen 6 darab labor szem\u00e9lyes megtart\u00e1sa. Ez a sz\u00e1m felszorz\u00f3dhat ha t\u00f6bb csoportot v\u00e1llalsz egy h\u00e9ten. Ez a szem\u00e9lyes labor fix \u00f3rarendi id\u0151ben van, 2*45 perces, \u00e9s sz\u00e1m\u00edt\u00f3g\u00e9p laborban tartjuk. A szem\u00e9lyes laborok r\u00e9szben vezetettek kiadott seg\u00e9dlet alapj\u00e1n, r\u00e9szben pedig hallgat\u00f3i \u00f6n\u00e1ll\u00f3 munk\u00e1b\u00f3l \u00e1llnak. A laborvezet\u0151 feladata a laborra val\u00f3 felk\u00e9sz\u00fcl\u00e9s, a labor megtart\u00e1sa, ennek sor\u00e1n a sz\u00fcks\u00e9ges h\u00e1tt\u00e9rismeretek r\u00f6vid \u00e1tism\u00e9tl\u00e9se, \u00e9s a hallgat\u00f3k seg\u00edt\u00e9se a labor sor\u00e1n. 2022 \u0151szi f\u00e9l\u00e9v sor\u00e1n a laborok \u00f3rarendi id\u0151pontjai: TBD Otthon teljes\u00edtett laborok sor\u00e1n seg\u00edts\u00e9gny\u00fajt\u00e1s. A szem\u00e9lyes laborok mellett csoportonk\u00e9nt van 3 darab otthon elv\u00e9gzett labor, amit a hallgat\u00f3k h\u00e1zi feladatk\u00e9nt \u00f6n\u00e1ll\u00f3an teljes\u00edtenek egy-egy k\u00e9thetes id\u0151ablakon bel\u00fcl. Ennek sor\u00e1n, ha sz\u00fcks\u00e9ges, a laborvezet\u0151 seg\u00edts\u00e9get ny\u00fajt a hallgat\u00f3knak k\u00e9rd\u00e9s \u00e9s probl\u00e9ma eset\u00e9n. Labor feladatok \u00e9rt\u00e9kel\u00e9se. A f\u00e9l\u00e9v sor\u00e1n csoportonk\u00e9nt \u00f6sszesen 6 webes labor van, mindegyiket jeggyel \u00e9rt\u00e9kelj\u00fck. A laborok bead\u00e1sa GitHub pull request-ek form\u00e1j\u00e1ban t\u00f6rt\u00e9nik. A laborok ki\u00e9rt\u00e9kel\u00e9se r\u00e9szben automatikusan t\u00f6rt\u00e9nik: egy szoftver lefuttatja \u00e9s ellen\u0151rzi a beadott munk\u00e1t, ahol ez lehets\u00e9ges. A laborvezet\u0151 feladata a beadott h\u00e1zi feladat formai ellen\u0151rz\u00e9se: k\u00e9rt k\u00e9perny\u0151k\u00e9pek megfelelnek-e az el\u0151\u00edr\u00e1soknak \u00e9s konzisztensek-e a beadott forr\u00e1sk\u00f3ddal. Demonstr\u00e1tors\u00e1g \u00b6 Hallgat\u00f3 vagy de szeretn\u00e9l bekapcsol\u00f3dni az oktat\u00e1sba? Szeretn\u00e9d kipr\u00f3b\u00e1lni magad laborvezet\u0151k\u00e9nt? Szeretsz magyar\u00e1zni? Elv\u00e9gezted ezt a t\u00e1rgyat \u00f6t\u00f6ssel? V\u00e1runk demonstr\u00e1tork\u00e9nt! A TVSZ p\u00e1r k\u00f6vetelm\u00e9nyt szab demonstr\u00e1toroknak: (l\u00e1sd aktu\u00e1lis TVSZ 165.\u00a7): (5) A demonstr\u00e1tori p\u00e1ly\u00e1zat beny\u00fajt\u00e1s\u00e1nak felt\u00e9tele, hogy a p\u00e1ly\u00e1z\u00f3 a) a demonstr\u00e1tori jogviszonnyal \u00e9rintett f\u00e9l\u00e9vben rendelkezzen akt\u00edv hallgat\u00f3i jogviszonnyal; b) rendelkezzen alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9llel; c) alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9l hi\u00e1ny\u00e1ban rendelkezzen legal\u00e1bb annyiszor huszon\u00f6t teljes\u00edtett kredittel, ah\u00e1ny lez\u00e1rt akt\u00edv f\u00e9l\u00e9ve van \u00e9s halmozott s\u00falyozott tanulm\u00e1nyi \u00e1tlageredm\u00e9nye haladja meg a 3,50 \u00e9rt\u00e9ket; \u00e9s d) ne \u00e1lljon fegyelmi b\u00fcntet\u00e9s hat\u00e1lya alatt. Ha \u00e9rdekel a lehet\u0151s\u00e9g, megfelelsz a fenti k\u00f6vetelm\u00e9nyeknek, \u00e9s az \u00f3rarendedbe belef\u00e9r a labor (l\u00e1sd az id\u0151pontokat fentebb), keresd a t\u00e1rgyfelel\u0151st . Tudnival\u00f3k a laborok megtart\u00e1s\u00e1hoz \u00b6 A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a webes tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk. Oktat\u00e1s m\u00f3dja \u00b6 A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban az el\u00e9gs\u00e9ges szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st. Adminisztrat\u00edv tudnival\u00f3k \u00b6 A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (>5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!). A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt. A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet. Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9. A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell. Anyagok el\u00e9rhet\u0151s\u00e9ge \u00b6 A t\u00e1rgy webes laborjainak minden anyaga ezen az oldalon \u00e9rhet\u0151 el. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t. Bel\u00e9p\u00e9sek \u00b6 A labor termekhez kulcsra \u00e9s/vagy k\u00e1rty\u00e1ra van sz\u00fcks\u00e9g. Ezeket a titk\u00e1rs\u00e1gon (QB207) kell k\u00e9rni. I \u00e9p\u00fclethez kell a teremkulcs, ill. a folyos\u00f3hoz sz\u00fcks\u00e9g van k\u00e1rty\u00e1ra is (kiv\u00e9ve, akinek van ilyenje). Q \u00e9p\u00fclet laborjaihoz hozz\u00e1f\u00e9r\u00e9st k\u00fcl\u00f6n szervezz\u00fck. Demonstr\u00e1torok: mindezt megmutatom els\u0151 alkalommal. G\u00e9pekre : emailben k\u00fcld\u00f6m f\u00e9l\u00e9v elej\u00e9n. Kis- \u00e9s nagybet\u0171 sz\u00e1m\u00edt! P\u00e1r elg\u00e9pel\u00e9s ut\u00e1n le lesz tiltva az account! Beadott labor megold\u00e1s \u00e9rt\u00e9kel\u00e9se \u00b6 A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3. Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/viauac00 organization-be. Mikor kell \u00e9rt\u00e9kelni a labort? \u00b6 A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on ). Hol kell \u00e9rt\u00e9kelni a labort? \u00b6 A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3Abmeviauac01+assignee%3A%40me+ . Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik. Hogyan kell \u00e9rt\u00e9kelni a labort? \u00b6 A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is. Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st. A feladatok minta megold\u00e1sa itt \u00e9rhet\u0151 el: https://github.com/viauac00?q=labor-megoldas . Ezek csak lehets\u00e9ges megold\u00e1sok, a hallgat\u00f3 megold\u00e1sa nem kell ezzel egyezzen. Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel: Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a /ahk ok parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz. Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a /ahk ok 5 2 parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege , a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat. Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a /ahk ok 5 2 parancsot a megfelel\u0151 pontsz\u00e1mokkal. Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a /ahk ok 0 0 parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk. A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal. A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal. A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben: a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3, a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt), a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l, \u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk. Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk \u00b6 Nem futott le az automata \u00e9rt\u00e9kel\u00e9s. Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb. Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni). T\u00f6bb, mint 5-sz\u00f6r futott a ki\u00e9rt\u00e9kel\u00e9s. Ezt pontlevon\u00e1ssal szankcion\u00e1ljuk. Els\u0151 alkalommal eltekinthet\u00fcnk t\u0151le, de mindenk\u00e9ppen t\u00e1j\u00e9koztassuk a hallgat\u00f3t. Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD ).","title":"Laborvezet\u0151knek"},{"location":"tudnivalok/laborvezetoknek/#laborvezetoknek","text":"Webes Laborvezet\u0151/demonstr\u00e1tor lenn\u00e9l? Az al\u00e1bbiakat \u00e9rdemes tudnod.","title":"Laborvezet\u0151knek"},{"location":"tudnivalok/laborvezetoknek/#laborvezeto-feladatai","text":"A laborvezet\u0151 a t\u00e1rgy oktat\u00e1s\u00e1ban seg\u00edt a webes laborok megtart\u00e1sa \u00e9s a sz\u00e1monk\u00e9r\u00e9sek sor\u00e1n. A feladat 2022 \u0151sszel az al\u00e1bbiakb\u00f3l \u00e1ll. F\u00e9l\u00e9v sor\u00e1n \u00f6sszesen 6 darab labor szem\u00e9lyes megtart\u00e1sa. Ez a sz\u00e1m felszorz\u00f3dhat ha t\u00f6bb csoportot v\u00e1llalsz egy h\u00e9ten. Ez a szem\u00e9lyes labor fix \u00f3rarendi id\u0151ben van, 2*45 perces, \u00e9s sz\u00e1m\u00edt\u00f3g\u00e9p laborban tartjuk. A szem\u00e9lyes laborok r\u00e9szben vezetettek kiadott seg\u00e9dlet alapj\u00e1n, r\u00e9szben pedig hallgat\u00f3i \u00f6n\u00e1ll\u00f3 munk\u00e1b\u00f3l \u00e1llnak. A laborvezet\u0151 feladata a laborra val\u00f3 felk\u00e9sz\u00fcl\u00e9s, a labor megtart\u00e1sa, ennek sor\u00e1n a sz\u00fcks\u00e9ges h\u00e1tt\u00e9rismeretek r\u00f6vid \u00e1tism\u00e9tl\u00e9se, \u00e9s a hallgat\u00f3k seg\u00edt\u00e9se a labor sor\u00e1n. 2022 \u0151szi f\u00e9l\u00e9v sor\u00e1n a laborok \u00f3rarendi id\u0151pontjai: TBD Otthon teljes\u00edtett laborok sor\u00e1n seg\u00edts\u00e9gny\u00fajt\u00e1s. A szem\u00e9lyes laborok mellett csoportonk\u00e9nt van 3 darab otthon elv\u00e9gzett labor, amit a hallgat\u00f3k h\u00e1zi feladatk\u00e9nt \u00f6n\u00e1ll\u00f3an teljes\u00edtenek egy-egy k\u00e9thetes id\u0151ablakon bel\u00fcl. Ennek sor\u00e1n, ha sz\u00fcks\u00e9ges, a laborvezet\u0151 seg\u00edts\u00e9get ny\u00fajt a hallgat\u00f3knak k\u00e9rd\u00e9s \u00e9s probl\u00e9ma eset\u00e9n. Labor feladatok \u00e9rt\u00e9kel\u00e9se. A f\u00e9l\u00e9v sor\u00e1n csoportonk\u00e9nt \u00f6sszesen 6 webes labor van, mindegyiket jeggyel \u00e9rt\u00e9kelj\u00fck. A laborok bead\u00e1sa GitHub pull request-ek form\u00e1j\u00e1ban t\u00f6rt\u00e9nik. A laborok ki\u00e9rt\u00e9kel\u00e9se r\u00e9szben automatikusan t\u00f6rt\u00e9nik: egy szoftver lefuttatja \u00e9s ellen\u0151rzi a beadott munk\u00e1t, ahol ez lehets\u00e9ges. A laborvezet\u0151 feladata a beadott h\u00e1zi feladat formai ellen\u0151rz\u00e9se: k\u00e9rt k\u00e9perny\u0151k\u00e9pek megfelelnek-e az el\u0151\u00edr\u00e1soknak \u00e9s konzisztensek-e a beadott forr\u00e1sk\u00f3ddal.","title":"Laborvezet\u0151 feladatai"},{"location":"tudnivalok/laborvezetoknek/#demonstratorsag","text":"Hallgat\u00f3 vagy de szeretn\u00e9l bekapcsol\u00f3dni az oktat\u00e1sba? Szeretn\u00e9d kipr\u00f3b\u00e1lni magad laborvezet\u0151k\u00e9nt? Szeretsz magyar\u00e1zni? Elv\u00e9gezted ezt a t\u00e1rgyat \u00f6t\u00f6ssel? V\u00e1runk demonstr\u00e1tork\u00e9nt! A TVSZ p\u00e1r k\u00f6vetelm\u00e9nyt szab demonstr\u00e1toroknak: (l\u00e1sd aktu\u00e1lis TVSZ 165.\u00a7): (5) A demonstr\u00e1tori p\u00e1ly\u00e1zat beny\u00fajt\u00e1s\u00e1nak felt\u00e9tele, hogy a p\u00e1ly\u00e1z\u00f3 a) a demonstr\u00e1tori jogviszonnyal \u00e9rintett f\u00e9l\u00e9vben rendelkezzen akt\u00edv hallgat\u00f3i jogviszonnyal; b) rendelkezzen alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9llel; c) alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9l hi\u00e1ny\u00e1ban rendelkezzen legal\u00e1bb annyiszor huszon\u00f6t teljes\u00edtett kredittel, ah\u00e1ny lez\u00e1rt akt\u00edv f\u00e9l\u00e9ve van \u00e9s halmozott s\u00falyozott tanulm\u00e1nyi \u00e1tlageredm\u00e9nye haladja meg a 3,50 \u00e9rt\u00e9ket; \u00e9s d) ne \u00e1lljon fegyelmi b\u00fcntet\u00e9s hat\u00e1lya alatt. Ha \u00e9rdekel a lehet\u0151s\u00e9g, megfelelsz a fenti k\u00f6vetelm\u00e9nyeknek, \u00e9s az \u00f3rarendedbe belef\u00e9r a labor (l\u00e1sd az id\u0151pontokat fentebb), keresd a t\u00e1rgyfelel\u0151st .","title":"Demonstr\u00e1tors\u00e1g"},{"location":"tudnivalok/laborvezetoknek/#tudnivalok-a-laborok-megtartasahoz","text":"A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a webes tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk.","title":"Tudnival\u00f3k a laborok megtart\u00e1s\u00e1hoz"},{"location":"tudnivalok/laborvezetoknek/#oktatas-modja","text":"A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban az el\u00e9gs\u00e9ges szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st.","title":"Oktat\u00e1s m\u00f3dja"},{"location":"tudnivalok/laborvezetoknek/#adminisztrativ-tudnivalok","text":"A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (>5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!). A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt. A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet. Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9. A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell.","title":"Adminisztrat\u00edv tudnival\u00f3k"},{"location":"tudnivalok/laborvezetoknek/#anyagok-elerhetosege","text":"A t\u00e1rgy webes laborjainak minden anyaga ezen az oldalon \u00e9rhet\u0151 el. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t.","title":"Anyagok el\u00e9rhet\u0151s\u00e9ge"},{"location":"tudnivalok/laborvezetoknek/#belepesek","text":"A labor termekhez kulcsra \u00e9s/vagy k\u00e1rty\u00e1ra van sz\u00fcks\u00e9g. Ezeket a titk\u00e1rs\u00e1gon (QB207) kell k\u00e9rni. I \u00e9p\u00fclethez kell a teremkulcs, ill. a folyos\u00f3hoz sz\u00fcks\u00e9g van k\u00e1rty\u00e1ra is (kiv\u00e9ve, akinek van ilyenje). Q \u00e9p\u00fclet laborjaihoz hozz\u00e1f\u00e9r\u00e9st k\u00fcl\u00f6n szervezz\u00fck. Demonstr\u00e1torok: mindezt megmutatom els\u0151 alkalommal. G\u00e9pekre : emailben k\u00fcld\u00f6m f\u00e9l\u00e9v elej\u00e9n. Kis- \u00e9s nagybet\u0171 sz\u00e1m\u00edt! P\u00e1r elg\u00e9pel\u00e9s ut\u00e1n le lesz tiltva az account!","title":"Bel\u00e9p\u00e9sek"},{"location":"tudnivalok/laborvezetoknek/#beadott-labor-megoldas-ertekelese","text":"A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3. Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/viauac00 organization-be.","title":"Beadott labor megold\u00e1s \u00e9rt\u00e9kel\u00e9se"},{"location":"tudnivalok/laborvezetoknek/#mikor-kell-ertekelni-a-labort","text":"A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on ).","title":"Mikor kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/laborvezetoknek/#hol-kell-ertekelni-a-labort","text":"A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3Abmeviauac01+assignee%3A%40me+ . Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik.","title":"Hol kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/laborvezetoknek/#hogyan-kell-ertekelni-a-labort","text":"A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is. Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st. A feladatok minta megold\u00e1sa itt \u00e9rhet\u0151 el: https://github.com/viauac00?q=labor-megoldas . Ezek csak lehets\u00e9ges megold\u00e1sok, a hallgat\u00f3 megold\u00e1sa nem kell ezzel egyezzen. Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel: Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a /ahk ok parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz. Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a /ahk ok 5 2 parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege , a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat. Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a /ahk ok 5 2 parancsot a megfelel\u0151 pontsz\u00e1mokkal. Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a /ahk ok 0 0 parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk. A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal. A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal. A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben: a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3, a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt), a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l, \u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk.","title":"Hogyan kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/laborvezetoknek/#problemak-es-megoldasuk","text":"Nem futott le az automata \u00e9rt\u00e9kel\u00e9s. Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb. Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni). T\u00f6bb, mint 5-sz\u00f6r futott a ki\u00e9rt\u00e9kel\u00e9s. Ezt pontlevon\u00e1ssal szankcion\u00e1ljuk. Els\u0151 alkalommal eltekinthet\u00fcnk t\u0151le, de mindenk\u00e9ppen t\u00e1j\u00e9koztassuk a hallgat\u00f3t. Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD ).","title":"Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk"},{"location":"tudnivalok/mobillaborvezetoknek/","text":"Mobil Laborvezet\u0151knek \u00b6 Oktat\u00f3i tudnival\u00f3k gy\u0171jtem\u00e9nye. B\u00e1rmi k\u00e9rd\u00e9s eset\u00e9n keress\u00e9tek Ekler P\u00e9tert ( ekler.peter@vik.bme.hu ), vagy Pom\u00e1zi Kriszti\u00e1nt ( pomazi.krisztian@vik.bme.hu ). Laborok \u00b6 A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a mobil tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk. Oktat\u00e1s m\u00f3dja \u00b6 A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban a \u00f3 szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st. A laborokat mindig \u00e9rdemes otthon el\u0151tte kipr\u00f3b\u00e1lni, aki bizonytalan az a laborterembe is be tud menni. A tansz\u00e9ki adminisztr\u00e1ci\u00f3t\u00f3l vagy Kardos Gerg\u0151t\u0151l ( Kardos.Gergely@aut.bme.hu ) lehet megk\u00e9rdezni, hogy melyik labor mikor szabad gyakorl\u00e1sra. Labor soha nem maradhat el az\u00e9rt, mert a laborvezet\u0151 elk\u00e9sik/nem megy, ha valami k\u00f6zbej\u00f6n \u00e9s el\u0151re l\u00e1that\u00f3, legal\u00e1bb el\u0151tte egy h\u00e9ttel \u00edrj erre a Teams-en \u00e9s k\u00e9rj cser\u00e9t. Adminisztrat\u00edv tudnival\u00f3k \u00b6 A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (>5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!). A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt. A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet. Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9. A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell. Bejut\u00e1s a terembe \u00b6 Q \u00e9p\u00fclet (QB237, QB115): K\u00e1rty\u00e1val lehet bejutni, a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207) tudnak seg\u00edteni. I \u00e9p\u00fclet (IL206, IL207, IL208): Kulcsot kell felvenni a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207), illetve a folyos\u00f3hoz k\u00e1rtya sz\u00fcks\u00e9ges. Labor ut\u00e1n kulcsot vigy\u00fck vissza az adminba. G\u00e9pek elind\u00edt\u00e1sa: \u00b6 A falon van egy kulcsos kapcsol\u00f3, azt a lefele mutat\u00f3 ny\u00edl \u00e1ll\u00e1sba kell \u00e1ll\u00edtani. Ha van alatta kapcsol\u00f3 KI/BE felirattal, sz\u00fcks\u00e9ges lehet a BE gomb megnyom\u00e1sa. \u00cdrjuk fel a t\u00e1bl\u00e1ra a bel\u00e9p\u00e9si adatokat. (E-mailben k\u00fcldj\u00fck ki nektek.) Labor menete \u00b6 Beugr\u00f3/kisZH \u00b6 A labor mindig vagy beugr\u00f3val, vagy kisZH-val kezd\u0151dik. A kisZH kiv\u00e1ltja a beugr\u00f3t. Mindkett\u0151t a Moodle fel\u00fclet\u00e9n \u00edrj\u00e1k meg. Beugr\u00f3n a maximum 2 pontb\u00f3l 1 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 5 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. KisZH-n a maximum 10 pontb\u00f3l 4 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 15 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. A Beugr\u00f3 vagy KisZH ut\u00e1n tartsunk egy n\u00e9vsorolvas\u00e1st, hogy elker\u00fclj\u00fck az esetleges t\u00e1volr\u00f3l kit\u00f6lt\u0151ket/csal\u00f3kat. Az els\u0151 h\u00e9ten nincs beugr\u00f3. Github Classroom \u00b6 A 2022 \u0151szi f\u00e9l\u00e9vt\u0151l a laboranyagok a Github Classromon \u00e9rhet\u0151ek el. Az ezzel kapcsolatos inform\u00e1ci\u00f3k itt olvashat\u00f3k. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t. Labormunka \u00b6 A labor \u00e1ltal\u00e1ban vezetett \u00e9s \u00f6n\u00e1ll\u00f3 r\u00e9szb\u0151l \u00e1ll. Az elej\u00e9n \u00e9rdemes p\u00e1r percben elmondani mi lesz a labor t\u00e9m\u00e1ja, megmutatni mi fog a v\u00e9g\u00e9re elk\u00e9sz\u00fclni. A vezetett r\u00e9szt \u00fclj\u00e9k v\u00e9gig a hallgat\u00f3k, ut\u00e1na ha nagyon akar valaki, bemutathatja \u00e9s elmehet. Laborokr\u00f3l sokszor kapunk olyan visszajelz\u00e9st, hogy sok a copy-paste, k\u00e9rj\u00fck mindig copy-paste ut\u00e1n magyar\u00e1zz\u00e1tok el a k\u00f3dot, illetve \u00e9rdemes sz\u00f3ban mondani ennek ok\u00e1t, hogy mi j\u00f3t akarunk hogy a v\u00e9g\u00e9n egy komplexebb app \u00e1lljon el\u0151. Ha mindent csak beg\u00e9peln\u00e9nk akkor alig jutna id\u0151 b\u00e1rmit is kipr\u00f3b\u00e1lni. Persze ha ez \u00fcgyben van b\u00e1rmi \u00f6tlet akkor \u00edrjatok nek\u00fcnk nyugodtan. Az els\u0151 laboron PDF-et, a t\u00f6bbi laboron az export\u00e1lt projektet kell felt\u00f6lteniuk a Moodle-be. Aki IMSc-s feladatot is csin\u00e1lt, t\u00f6ltse fel a munk\u00e1j\u00e1t a megfelel\u0151 iMSc sz\u00e1monk\u00e9r\u00e9s al\u00e1 IS. Labor bez\u00e1r\u00e1sa: \u00b6 Minden ablakot csukjunk be \u00e9s sz\u00e9kek se legyenek \u00f6ssze-vissza, k\u00e9rj\u00fck meg a hallgat\u00f3kat a \u201erendrak\u00e1sra\u201d. T\u00f6r\u00f6lj\u00fck le a t\u00e1bl\u00e1t. V\u00e1rjuk meg, am\u00edg kikapcsol\u00e1s ut\u00e1n le\u00e1ll a projektor ventil\u00e1ltora, majd ha van k\u00fcl\u00f6n gomb a projektor \u00e1ramforr\u00e1s\u00e1nak lekapcsol\u00e1s\u00e1ra, azt kapcsoljuk le. Miut\u00e1n meggy\u0151z\u0151dt\u00fcnk r\u00f3la, hogy minden g\u00e9p le\u00e1llt, nyomjuk meg a KI kapcsol\u00f3t(ha van a teremben), majd a fali kulcsos kapcsol\u00f3t \u00e1ll\u00edtsuk k\u00f6z\u00e9ps\u0151 \u00e1ll\u00e1sba. Laborok \u00e9rt\u00e9kel\u00e9se \u00b6 A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3. Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/viauac00 organization-be. Mikor kell \u00e9rt\u00e9kelni a labort? \u00b6 A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on ). Hol kell \u00e9rt\u00e9kelni a labort? \u00b6 A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3Abmeviauac01+assignee%3A%40me+ . Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik. Hogyan kell \u00e9rt\u00e9kelni a labort? \u00b6 A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is. Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st. A feladatok minta megold\u00e1sa itt \u00e9rhet\u0151 el: https://github.com/viauac00?q=labor-megoldas . Ezek csak lehets\u00e9ges megold\u00e1sok, a hallgat\u00f3 megold\u00e1sa nem kell ezzel egyezzen. Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel: Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a /ahk ok parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz. Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a /ahk ok 5 2 parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege , a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat. Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a /ahk ok 5 2 parancsot a megfelel\u0151 pontsz\u00e1mokkal. Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a /ahk ok 0 0 parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk. A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal. A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal. A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben: a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3, a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt), a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l, \u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk. Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk \u00b6 Nem futott le az automata \u00e9rt\u00e9kel\u00e9s. Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb. Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni). T\u00f6bb, mint 5-sz\u00f6r futott a ki\u00e9rt\u00e9kel\u00e9s. Ezt pontlevon\u00e1ssal szankcion\u00e1ljuk. Els\u0151 alkalommal eltekinthet\u00fcnk t\u0151le, de mindenk\u00e9ppen t\u00e1j\u00e9koztassuk a hallgat\u00f3t. Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD ). NagyHF \u00b6 A f\u00e9l\u00e9v sor\u00e1n k\u00e9t feladatuk van a hallgat\u00f3knak a nagyh\u00e1zival kapcsolatban: a specifik\u00e1ci\u00f3 \u00e9s a k\u00e9sz projekt bead\u00e1sa. Specifik\u00e1ci\u00f3 \u00e9rt\u00e9kel\u00e9si szempontok \u00b6 A specifik\u00e1ci\u00f3 GO/NOGO \u00e9rt\u00e9kel\u00e9s\u0171, sz\u00f6veges megjegyz\u00e9sben jelezhetj\u00fck, ha t\u00fal nagyot v\u00e1llalt a hallgat\u00f3, vagy tal\u00e1ltunk benne valami kifog\u00e1solnival\u00f3t, vagy nagyon sz\u00e9p doksit adott le, stb.. NagyHF \u00e9rt\u00e9kel\u00e9si szempontok \u00b6 Maximum 15 pont szerezhet\u0151. * specifik\u00e1ci\u00f3 szerinti, logikusan elv\u00e1rt m\u0171k\u00f6d\u00e9s, (3 pont) * mennyire t\u00f6rt\u00e9nt t\u00f6rekv\u00e9s a j\u00f3 funkcionalit\u00e1s megval\u00f3s\u00edt\u00e1s\u00e1ra \u00e9s nem csak a funkci\u00f3 l\u00e1tszat kivitelez\u00e9se volt-e a c\u00e9l, (2 pont) * ig\u00e9nyesen kivitelezett felhaszn\u00e1l\u00f3i fel\u00fclet (st\u00edlusok, t\u00e9m\u00e1k), (2 pont) * megfelel\u0151 hibakezel\u00e9s, (2 pont) * hat\u00e9kony m\u0171k\u00f6d\u00e9s (nincsenek felesleges ciklusok, sz\u00e1m\u00edt\u00e1sok, \u00fajrarajzol\u00e1sok), (2 pont) * hibamentes fut\u00e1s, (2 pont) * er\u0151forr\u00e1sok haszn\u00e1lata, sz\u00f6vegek er\u0151forr\u00e1sba szervez\u00e9se. (2 pont) A NagyHF-t nem kell dokument\u00e1lni, csak a projektet kell a port\u00e1lra felt\u00f6lteni. NagyHF-n 10 IMSC pont szerezhet\u0151: * extra funkci\u00f3k, (4 pont) * ig\u00e9nyes, l\u00e1tv\u00e1nyos fel\u00fclet (3 pont) * k\u00f3dmin\u0151s\u00e9g (tiszta k\u00f3d k\u00f6vet\u00e9se, r\u00f6vid oszt\u00e1lyok, f\u00fcggv\u00e9nyek, stb.). (3 pont) * R\u00f6vid dokument\u00e1ci\u00f3 felt\u00f6lt\u00e9se a ZIP-ben az IMSC-s r\u00e9szhez tartoz\u00f3 megold\u00e1sr\u00f3l \u00e9s indokl\u00e1sa/bemutat\u00e1sa a fent felsorolt extra elemeknek (k\u00f6telez\u0151). Android \u00e9s MobWeb k\u00f6z\u00f6s h\u00e1zi feladat \u00b6 Ha valaki a MobWebet \u00e9s az Androidalap\u00fa szoftverfejleszt\u00e9st is hallgatn\u00e1 a f\u00e9l\u00e9vben, \u00e9s felmer\u00fclne benne, hogy lehet-e k\u00f6z\u00f6s h\u00e1zit csin\u00e1lni: * Lehet, de ezt mindenk\u00e9ppen egyeztesse mindk\u00e9t laborvezet\u0151j\u00e9vel. * Ugyanazt a h\u00e1zit csak \u00fagy adhatja le mindk\u00e9t t\u00e1rgyon, ha kicsit fel\u00fclteljes\u00edti a nehezebb k\u00f6vetelm\u00e9nyeket (vagyis az Androidalap\u00fa szf-t) * Teh\u00e1t az Androidalap\u00fa szoftverfejleszt\u00e9s k\u00f6vetelm\u00e9nyei szerint nem 5, hanem 6-7 technol\u00f3gi\u00e1t kell haszn\u00e1lnia, ezt a komplexit\u00e1s\u00e1b\u00f3l majd a labvezek eld\u00f6ntik.","title":"Mobil Laborvezet\u0151knek"},{"location":"tudnivalok/mobillaborvezetoknek/#mobil-laborvezetoknek","text":"Oktat\u00f3i tudnival\u00f3k gy\u0171jtem\u00e9nye. B\u00e1rmi k\u00e9rd\u00e9s eset\u00e9n keress\u00e9tek Ekler P\u00e9tert ( ekler.peter@vik.bme.hu ), vagy Pom\u00e1zi Kriszti\u00e1nt ( pomazi.krisztian@vik.bme.hu ).","title":"Mobil Laborvezet\u0151knek"},{"location":"tudnivalok/mobillaborvezetoknek/#laborok","text":"A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a mobil tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk.","title":"Laborok"},{"location":"tudnivalok/mobillaborvezetoknek/#oktatas-modja","text":"A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban a \u00f3 szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st. A laborokat mindig \u00e9rdemes otthon el\u0151tte kipr\u00f3b\u00e1lni, aki bizonytalan az a laborterembe is be tud menni. A tansz\u00e9ki adminisztr\u00e1ci\u00f3t\u00f3l vagy Kardos Gerg\u0151t\u0151l ( Kardos.Gergely@aut.bme.hu ) lehet megk\u00e9rdezni, hogy melyik labor mikor szabad gyakorl\u00e1sra. Labor soha nem maradhat el az\u00e9rt, mert a laborvezet\u0151 elk\u00e9sik/nem megy, ha valami k\u00f6zbej\u00f6n \u00e9s el\u0151re l\u00e1that\u00f3, legal\u00e1bb el\u0151tte egy h\u00e9ttel \u00edrj erre a Teams-en \u00e9s k\u00e9rj cser\u00e9t.","title":"Oktat\u00e1s m\u00f3dja"},{"location":"tudnivalok/mobillaborvezetoknek/#adminisztrativ-tudnivalok","text":"A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (>5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!). A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt. A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet. Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9. A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell.","title":"Adminisztrat\u00edv tudnival\u00f3k"},{"location":"tudnivalok/mobillaborvezetoknek/#bejutas-a-terembe","text":"Q \u00e9p\u00fclet (QB237, QB115): K\u00e1rty\u00e1val lehet bejutni, a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207) tudnak seg\u00edteni. I \u00e9p\u00fclet (IL206, IL207, IL208): Kulcsot kell felvenni a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207), illetve a folyos\u00f3hoz k\u00e1rtya sz\u00fcks\u00e9ges. Labor ut\u00e1n kulcsot vigy\u00fck vissza az adminba.","title":"Bejut\u00e1s a terembe"},{"location":"tudnivalok/mobillaborvezetoknek/#gepek-elinditasa","text":"A falon van egy kulcsos kapcsol\u00f3, azt a lefele mutat\u00f3 ny\u00edl \u00e1ll\u00e1sba kell \u00e1ll\u00edtani. Ha van alatta kapcsol\u00f3 KI/BE felirattal, sz\u00fcks\u00e9ges lehet a BE gomb megnyom\u00e1sa. \u00cdrjuk fel a t\u00e1bl\u00e1ra a bel\u00e9p\u00e9si adatokat. (E-mailben k\u00fcldj\u00fck ki nektek.)","title":"G\u00e9pek elind\u00edt\u00e1sa:"},{"location":"tudnivalok/mobillaborvezetoknek/#labor-menete","text":"","title":"Labor menete"},{"location":"tudnivalok/mobillaborvezetoknek/#beugrokiszh","text":"A labor mindig vagy beugr\u00f3val, vagy kisZH-val kezd\u0151dik. A kisZH kiv\u00e1ltja a beugr\u00f3t. Mindkett\u0151t a Moodle fel\u00fclet\u00e9n \u00edrj\u00e1k meg. Beugr\u00f3n a maximum 2 pontb\u00f3l 1 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 5 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. KisZH-n a maximum 10 pontb\u00f3l 4 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 15 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. A Beugr\u00f3 vagy KisZH ut\u00e1n tartsunk egy n\u00e9vsorolvas\u00e1st, hogy elker\u00fclj\u00fck az esetleges t\u00e1volr\u00f3l kit\u00f6lt\u0151ket/csal\u00f3kat. Az els\u0151 h\u00e9ten nincs beugr\u00f3.","title":"Beugr\u00f3/kisZH"},{"location":"tudnivalok/mobillaborvezetoknek/#github-classroom","text":"A 2022 \u0151szi f\u00e9l\u00e9vt\u0151l a laboranyagok a Github Classromon \u00e9rhet\u0151ek el. Az ezzel kapcsolatos inform\u00e1ci\u00f3k itt olvashat\u00f3k. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t.","title":"Github Classroom"},{"location":"tudnivalok/mobillaborvezetoknek/#labormunka","text":"A labor \u00e1ltal\u00e1ban vezetett \u00e9s \u00f6n\u00e1ll\u00f3 r\u00e9szb\u0151l \u00e1ll. Az elej\u00e9n \u00e9rdemes p\u00e1r percben elmondani mi lesz a labor t\u00e9m\u00e1ja, megmutatni mi fog a v\u00e9g\u00e9re elk\u00e9sz\u00fclni. A vezetett r\u00e9szt \u00fclj\u00e9k v\u00e9gig a hallgat\u00f3k, ut\u00e1na ha nagyon akar valaki, bemutathatja \u00e9s elmehet. Laborokr\u00f3l sokszor kapunk olyan visszajelz\u00e9st, hogy sok a copy-paste, k\u00e9rj\u00fck mindig copy-paste ut\u00e1n magyar\u00e1zz\u00e1tok el a k\u00f3dot, illetve \u00e9rdemes sz\u00f3ban mondani ennek ok\u00e1t, hogy mi j\u00f3t akarunk hogy a v\u00e9g\u00e9n egy komplexebb app \u00e1lljon el\u0151. Ha mindent csak beg\u00e9peln\u00e9nk akkor alig jutna id\u0151 b\u00e1rmit is kipr\u00f3b\u00e1lni. Persze ha ez \u00fcgyben van b\u00e1rmi \u00f6tlet akkor \u00edrjatok nek\u00fcnk nyugodtan. Az els\u0151 laboron PDF-et, a t\u00f6bbi laboron az export\u00e1lt projektet kell felt\u00f6lteniuk a Moodle-be. Aki IMSc-s feladatot is csin\u00e1lt, t\u00f6ltse fel a munk\u00e1j\u00e1t a megfelel\u0151 iMSc sz\u00e1monk\u00e9r\u00e9s al\u00e1 IS.","title":"Labormunka"},{"location":"tudnivalok/mobillaborvezetoknek/#labor-bezarasa","text":"Minden ablakot csukjunk be \u00e9s sz\u00e9kek se legyenek \u00f6ssze-vissza, k\u00e9rj\u00fck meg a hallgat\u00f3kat a \u201erendrak\u00e1sra\u201d. T\u00f6r\u00f6lj\u00fck le a t\u00e1bl\u00e1t. V\u00e1rjuk meg, am\u00edg kikapcsol\u00e1s ut\u00e1n le\u00e1ll a projektor ventil\u00e1ltora, majd ha van k\u00fcl\u00f6n gomb a projektor \u00e1ramforr\u00e1s\u00e1nak lekapcsol\u00e1s\u00e1ra, azt kapcsoljuk le. Miut\u00e1n meggy\u0151z\u0151dt\u00fcnk r\u00f3la, hogy minden g\u00e9p le\u00e1llt, nyomjuk meg a KI kapcsol\u00f3t(ha van a teremben), majd a fali kulcsos kapcsol\u00f3t \u00e1ll\u00edtsuk k\u00f6z\u00e9ps\u0151 \u00e1ll\u00e1sba.","title":"Labor bez\u00e1r\u00e1sa:"},{"location":"tudnivalok/mobillaborvezetoknek/#laborok-ertekelese","text":"A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3. Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/viauac00 organization-be.","title":"Laborok \u00e9rt\u00e9kel\u00e9se"},{"location":"tudnivalok/mobillaborvezetoknek/#mikor-kell-ertekelni-a-labort","text":"A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on ).","title":"Mikor kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/mobillaborvezetoknek/#hol-kell-ertekelni-a-labort","text":"A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3Abmeviauac01+assignee%3A%40me+ . Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik.","title":"Hol kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/mobillaborvezetoknek/#hogyan-kell-ertekelni-a-labort","text":"A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is. Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st. A feladatok minta megold\u00e1sa itt \u00e9rhet\u0151 el: https://github.com/viauac00?q=labor-megoldas . Ezek csak lehets\u00e9ges megold\u00e1sok, a hallgat\u00f3 megold\u00e1sa nem kell ezzel egyezzen. Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel: Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a /ahk ok parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz. Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a /ahk ok 5 2 parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege , a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat. Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a /ahk ok 5 2 parancsot a megfelel\u0151 pontsz\u00e1mokkal. Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a /ahk ok 0 0 parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk. A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal. A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal. A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben: a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3, a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt), a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l, \u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk.","title":"Hogyan kell \u00e9rt\u00e9kelni a labort?"},{"location":"tudnivalok/mobillaborvezetoknek/#problemak-es-megoldasuk","text":"Nem futott le az automata \u00e9rt\u00e9kel\u00e9s. Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb. Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni). T\u00f6bb, mint 5-sz\u00f6r futott a ki\u00e9rt\u00e9kel\u00e9s. Ezt pontlevon\u00e1ssal szankcion\u00e1ljuk. Els\u0151 alkalommal eltekinthet\u00fcnk t\u0151le, de mindenk\u00e9ppen t\u00e1j\u00e9koztassuk a hallgat\u00f3t. Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD ).","title":"Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk"},{"location":"tudnivalok/mobillaborvezetoknek/#nagyhf","text":"A f\u00e9l\u00e9v sor\u00e1n k\u00e9t feladatuk van a hallgat\u00f3knak a nagyh\u00e1zival kapcsolatban: a specifik\u00e1ci\u00f3 \u00e9s a k\u00e9sz projekt bead\u00e1sa.","title":"NagyHF"},{"location":"tudnivalok/mobillaborvezetoknek/#specifikacio-ertekelesi-szempontok","text":"A specifik\u00e1ci\u00f3 GO/NOGO \u00e9rt\u00e9kel\u00e9s\u0171, sz\u00f6veges megjegyz\u00e9sben jelezhetj\u00fck, ha t\u00fal nagyot v\u00e1llalt a hallgat\u00f3, vagy tal\u00e1ltunk benne valami kifog\u00e1solnival\u00f3t, vagy nagyon sz\u00e9p doksit adott le, stb..","title":"Specifik\u00e1ci\u00f3 \u00e9rt\u00e9kel\u00e9si szempontok"},{"location":"tudnivalok/mobillaborvezetoknek/#nagyhf-ertekelesi-szempontok","text":"Maximum 15 pont szerezhet\u0151. * specifik\u00e1ci\u00f3 szerinti, logikusan elv\u00e1rt m\u0171k\u00f6d\u00e9s, (3 pont) * mennyire t\u00f6rt\u00e9nt t\u00f6rekv\u00e9s a j\u00f3 funkcionalit\u00e1s megval\u00f3s\u00edt\u00e1s\u00e1ra \u00e9s nem csak a funkci\u00f3 l\u00e1tszat kivitelez\u00e9se volt-e a c\u00e9l, (2 pont) * ig\u00e9nyesen kivitelezett felhaszn\u00e1l\u00f3i fel\u00fclet (st\u00edlusok, t\u00e9m\u00e1k), (2 pont) * megfelel\u0151 hibakezel\u00e9s, (2 pont) * hat\u00e9kony m\u0171k\u00f6d\u00e9s (nincsenek felesleges ciklusok, sz\u00e1m\u00edt\u00e1sok, \u00fajrarajzol\u00e1sok), (2 pont) * hibamentes fut\u00e1s, (2 pont) * er\u0151forr\u00e1sok haszn\u00e1lata, sz\u00f6vegek er\u0151forr\u00e1sba szervez\u00e9se. (2 pont) A NagyHF-t nem kell dokument\u00e1lni, csak a projektet kell a port\u00e1lra felt\u00f6lteni. NagyHF-n 10 IMSC pont szerezhet\u0151: * extra funkci\u00f3k, (4 pont) * ig\u00e9nyes, l\u00e1tv\u00e1nyos fel\u00fclet (3 pont) * k\u00f3dmin\u0151s\u00e9g (tiszta k\u00f3d k\u00f6vet\u00e9se, r\u00f6vid oszt\u00e1lyok, f\u00fcggv\u00e9nyek, stb.). (3 pont) * R\u00f6vid dokument\u00e1ci\u00f3 felt\u00f6lt\u00e9se a ZIP-ben az IMSC-s r\u00e9szhez tartoz\u00f3 megold\u00e1sr\u00f3l \u00e9s indokl\u00e1sa/bemutat\u00e1sa a fent felsorolt extra elemeknek (k\u00f6telez\u0151).","title":"NagyHF \u00e9rt\u00e9kel\u00e9si szempontok"},{"location":"tudnivalok/mobillaborvezetoknek/#android-es-mobweb-kozos-hazi-feladat","text":"Ha valaki a MobWebet \u00e9s az Androidalap\u00fa szoftverfejleszt\u00e9st is hallgatn\u00e1 a f\u00e9l\u00e9vben, \u00e9s felmer\u00fclne benne, hogy lehet-e k\u00f6z\u00f6s h\u00e1zit csin\u00e1lni: * Lehet, de ezt mindenk\u00e9ppen egyeztesse mindk\u00e9t laborvezet\u0151j\u00e9vel. * Ugyanazt a h\u00e1zit csak \u00fagy adhatja le mindk\u00e9t t\u00e1rgyon, ha kicsit fel\u00fclteljes\u00edti a nehezebb k\u00f6vetelm\u00e9nyeket (vagyis az Androidalap\u00fa szf-t) * Teh\u00e1t az Androidalap\u00fa szoftverfejleszt\u00e9s k\u00f6vetelm\u00e9nyei szerint nem 5, hanem 6-7 technol\u00f3gi\u00e1t kell haszn\u00e1lnia, ezt a komplexit\u00e1s\u00e1b\u00f3l majd a labvezek eld\u00f6ntik.","title":"Android \u00e9s MobWeb k\u00f6z\u00f6s h\u00e1zi feladat"}]}